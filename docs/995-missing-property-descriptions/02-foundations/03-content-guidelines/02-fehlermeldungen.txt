4:"$Sreact.fragment"
6:I[12850,[],""]
7:I[23296,[],""]
9:I[73195,[],"OutletBoundary"]
b:I[73195,[],"MetadataBoundary"]
d:I[73195,[],"ViewportBoundary"]
f:I[9413,[],""]
1:HL["/flow-previews/docs/995-missing-property-descriptions/_next/static/css/8e172203dabf75d9.css","style"]
2:HL["/flow-previews/docs/995-missing-property-descriptions/_next/static/css/f5291abbe429f83b.css","style"]
3:HL["/flow-previews/docs/995-missing-property-descriptions/_next/static/css/3fdbbd2e0a314e96.css","style"]
0:{"P":null,"b":"h-QLGplkkYjwwEJC-h3d2","p":"/flow-previews/docs/995-missing-property-descriptions","c":["","02-foundations","03-content-guidelines","02-fehlermeldungen"],"i":false,"f":[[["",{"children":[["slug","02-foundations/03-content-guidelines/02-fehlermeldungen","c"],{"children":["__PAGE__",{}]}]},"$undefined","$undefined",true],["",["$","$4","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/flow-previews/docs/995-missing-property-descriptions/_next/static/css/8e172203dabf75d9.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}],["$","link","1",{"rel":"stylesheet","href":"/flow-previews/docs/995-missing-property-descriptions/_next/static/css/f5291abbe429f83b.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],"$L5"]}],{"children":[["slug","02-foundations/03-content-guidelines/02-fehlermeldungen","c"],["$","$4","c",{"children":[null,["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","$0:f:0:1:2:children:0","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined"}]]}],{"children":["__PAGE__",["$","$4","c",{"children":["$L8",[["$","link","0",{"rel":"stylesheet","href":"/flow-previews/docs/995-missing-property-descriptions/_next/static/css/3fdbbd2e0a314e96.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","$L9",null,{"children":"$La"}]]}],{},null]},null]},null],["$","$4","h",{"children":[null,["$","$4","MIdGvXU8U473u7B1IvzTX",{"children":[["$","$Lb",null,{"children":"$Lc"}],["$","$Ld",null,{"children":"$Le"}],null]}]]}]]],"m":"$undefined","G":["$f","$undefined"],"s":false,"S":true}
10:I[65092,["94","static/chunks/23c7f145-0aa2dbc4a2641275.js","990","static/chunks/990-5cb72a1901c58310.js","300","static/chunks/300-24657c56af128b38.js","91","static/chunks/91-3ec8ebe2ed161b8e.js","602","static/chunks/602-d94794cea8e36815.js","177","static/chunks/app/layout-68fec13324a7c0dc.js"],"LinkProvider"]
11:I[13980,["94","static/chunks/23c7f145-0aa2dbc4a2641275.js","990","static/chunks/990-5cb72a1901c58310.js","300","static/chunks/300-24657c56af128b38.js","91","static/chunks/91-3ec8ebe2ed161b8e.js","602","static/chunks/602-d94794cea8e36815.js","177","static/chunks/app/layout-68fec13324a7c0dc.js"],"NotificationProvider"]
12:I[80634,["94","static/chunks/23c7f145-0aa2dbc4a2641275.js","149","static/chunks/d709487a-c1e7dea80a4aa964.js","990","static/chunks/990-5cb72a1901c58310.js","300","static/chunks/300-24657c56af128b38.js","80","static/chunks/80-4bb10c8c76b4f644.js","91","static/chunks/91-3ec8ebe2ed161b8e.js","602","static/chunks/602-d94794cea8e36815.js","48","static/chunks/app/%5B...slug%5D/page-85d1e35f61e7e7c3.js"],"Link"]
13:I[35963,["94","static/chunks/23c7f145-0aa2dbc4a2641275.js","990","static/chunks/990-5cb72a1901c58310.js","91","static/chunks/91-3ec8ebe2ed161b8e.js","974","static/chunks/app/page-7aac161dfb09cc6f.js"],"Image"]
14:I[57703,["94","static/chunks/23c7f145-0aa2dbc4a2641275.js","990","static/chunks/990-5cb72a1901c58310.js","300","static/chunks/300-24657c56af128b38.js","91","static/chunks/91-3ec8ebe2ed161b8e.js","602","static/chunks/602-d94794cea8e36815.js","177","static/chunks/app/layout-68fec13324a7c0dc.js"],"default"]
49:I[3373,["94","static/chunks/23c7f145-0aa2dbc4a2641275.js","990","static/chunks/990-5cb72a1901c58310.js","300","static/chunks/300-24657c56af128b38.js","91","static/chunks/91-3ec8ebe2ed161b8e.js","602","static/chunks/602-d94794cea8e36815.js","177","static/chunks/app/layout-68fec13324a7c0dc.js"],"HeaderNavigation"]
4a:I[58907,["94","static/chunks/23c7f145-0aa2dbc4a2641275.js","990","static/chunks/990-5cb72a1901c58310.js","300","static/chunks/300-24657c56af128b38.js","91","static/chunks/91-3ec8ebe2ed161b8e.js","602","static/chunks/602-d94794cea8e36815.js","177","static/chunks/app/layout-68fec13324a7c0dc.js"],"Content"]
4b:I[80647,["94","static/chunks/23c7f145-0aa2dbc4a2641275.js","990","static/chunks/990-5cb72a1901c58310.js","300","static/chunks/300-24657c56af128b38.js","91","static/chunks/91-3ec8ebe2ed161b8e.js","602","static/chunks/602-d94794cea8e36815.js","177","static/chunks/app/layout-68fec13324a7c0dc.js"],"ModalTrigger"]
4c:I[57502,["94","static/chunks/23c7f145-0aa2dbc4a2641275.js","990","static/chunks/990-5cb72a1901c58310.js","300","static/chunks/300-24657c56af128b38.js","91","static/chunks/91-3ec8ebe2ed161b8e.js","602","static/chunks/602-d94794cea8e36815.js","177","static/chunks/app/layout-68fec13324a7c0dc.js"],"Button"]
4d:I[18420,["94","static/chunks/23c7f145-0aa2dbc4a2641275.js","149","static/chunks/d709487a-c1e7dea80a4aa964.js","990","static/chunks/990-5cb72a1901c58310.js","300","static/chunks/300-24657c56af128b38.js","80","static/chunks/80-4bb10c8c76b4f644.js","91","static/chunks/91-3ec8ebe2ed161b8e.js","602","static/chunks/602-d94794cea8e36815.js","48","static/chunks/app/%5B...slug%5D/page-85d1e35f61e7e7c3.js"],"IconMenu"]
4e:I[80647,["94","static/chunks/23c7f145-0aa2dbc4a2641275.js","990","static/chunks/990-5cb72a1901c58310.js","300","static/chunks/300-24657c56af128b38.js","91","static/chunks/91-3ec8ebe2ed161b8e.js","602","static/chunks/602-d94794cea8e36815.js","177","static/chunks/app/layout-68fec13324a7c0dc.js"],"Modal"]
4f:I[91916,["94","static/chunks/23c7f145-0aa2dbc4a2641275.js","149","static/chunks/d709487a-c1e7dea80a4aa964.js","990","static/chunks/990-5cb72a1901c58310.js","300","static/chunks/300-24657c56af128b38.js","80","static/chunks/80-4bb10c8c76b4f644.js","91","static/chunks/91-3ec8ebe2ed161b8e.js","602","static/chunks/602-d94794cea8e36815.js","48","static/chunks/app/%5B...slug%5D/page-85d1e35f61e7e7c3.js"],"Heading"]
50:I[1161,["94","static/chunks/23c7f145-0aa2dbc4a2641275.js","149","static/chunks/d709487a-c1e7dea80a4aa964.js","990","static/chunks/990-5cb72a1901c58310.js","300","static/chunks/300-24657c56af128b38.js","80","static/chunks/80-4bb10c8c76b4f644.js","91","static/chunks/91-3ec8ebe2ed161b8e.js","602","static/chunks/602-d94794cea8e36815.js","48","static/chunks/app/%5B...slug%5D/page-85d1e35f61e7e7c3.js"],"Section"]
51:I[96211,["94","static/chunks/23c7f145-0aa2dbc4a2641275.js","990","static/chunks/990-5cb72a1901c58310.js","300","static/chunks/300-24657c56af128b38.js","91","static/chunks/91-3ec8ebe2ed161b8e.js","602","static/chunks/602-d94794cea8e36815.js","177","static/chunks/app/layout-68fec13324a7c0dc.js"],"default"]
52:I[56968,["94","static/chunks/23c7f145-0aa2dbc4a2641275.js","990","static/chunks/990-5cb72a1901c58310.js","300","static/chunks/300-24657c56af128b38.js","91","static/chunks/91-3ec8ebe2ed161b8e.js","602","static/chunks/602-d94794cea8e36815.js","177","static/chunks/app/layout-68fec13324a7c0dc.js"],"default"]
15:Tbc1,"use strict";
const {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];
const {useMDXComponents: _provideComponents} = arguments[0];
function _createMdxContent(props) {
  const _components = {
    code: "code",
    h1: "h1",
    hr: "hr",
    p: "p",
    pre: "pre",
    strong: "strong",
    ..._provideComponents(),
    ...props.components
  }, {Alert, Content, Heading} = _components;
  if (!Alert) _missingMdxReference("Alert", true);
  if (!Content) _missingMdxReference("Content", true);
  if (!Heading) _missingMdxReference("Heading", true);
  return _jsxs(_Fragment, {
    children: [_jsxs(Alert, {
      children: [_jsx(Heading, {
        children: "Hinweis zu frühem Entwicklungsstand und Stabilität"
      }), _jsx(Content, {
        children: _jsxs(_components.p, {
          children: ["Dieses Projekt befindet sich in einer ", _jsx(_components.strong, {
            children: "frühen Entwicklungsphase"
          }), ", weswegen\nwir keine Garantie zur Stabilität bieten können. Du kannst dieses Projekt\ndennoch gerne ausprobieren, verlasse dich aber bitte nicht darauf, dass die\naktuellen Inhalte in dieser Form bestehen bleiben. Wir freuen uns über jedes\nFeedback zum aktuellen Entwicklungsstand!"]
        })
      })]
    }), "\n", _jsx(_components.hr, {}), "\n", _jsx(_components.h1, {
      children: "Installation der Flow React Component Library"
    }), "\n", _jsxs(_components.p, {
      children: ["Die Flow React Component Library kann mit einem Package Manager wie ", _jsx(_components.code, {
        children: "npm"
      }), " or\n", _jsx(_components.code, {
        children: "yarn"
      }), " installiert werden."]
    }), "\n", _jsx(_components.pre, {
      children: _jsx(_components.code, {
        className: "language-shell",
        children: "yarn add @mittwald/flow-react-components\n"
      })
    }), "\n", _jsx(_components.p, {
      children: "Zur leichteren Verwaltung der Abhängigkeiten werden alle Komponenten innerhalb\ndiese Packages bereitgestellt."
    }), "\n", _jsx(_components.hr, {}), "\n", _jsx(_components.h1, {
      children: "Styles importieren"
    }), "\n", _jsx(_components.p, {
      children: "Um die Komponenten Styles zu verwenden, musst du das Stylesheet importieren.\nFüge diese Zeile zum Einstiegspunkt deines Projektes hinzu."
    }), "\n", _jsx(_components.pre, {
      children: _jsx(_components.code, {
        children: "import \"@mittwald/flow-react-components/all.css\";\n"
      })
    })]
  });
}
function MDXContent(props = {}) {
  const {wrapper: MDXLayout} = {
    ..._provideComponents(),
    ...props.components
  };
  return MDXLayout ? _jsx(MDXLayout, {
    ...props,
    children: _jsx(_createMdxContent, {
      ...props
    })
  }) : _createMdxContent(props);
}
return {
  default: MDXContent
};
function _missingMdxReference(id, component) {
  throw new Error("Expected " + (component ? "component" : "object") + " `" + id + "` to be defined: you likely forgot to import, pass, or provide it.");
}
16:T1866,"use strict";
const {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];
const {useMDXComponents: _provideComponents} = arguments[0];
function _createMdxContent(props) {
  const _components = {
    code: "code",
    h1: "h1",
    h2: "h2",
    h3: "h3",
    hr: "hr",
    p: "p",
    pre: "pre",
    strong: "strong",
    ..._provideComponents(),
    ...props.components
  }, {LiveCodeEditor} = _components;
  if (!LiveCodeEditor) _missingMdxReference("LiveCodeEditor", true);
  return _jsxs(_Fragment, {
    children: [_jsx(_components.p, {
      children: "Die Flow-Komponenten-Bibliotheken werden über ein gemeinsames Stylesheet, das\nauch für sich alleine verwendet werden kann, gestyled. Das kann nützlich sein,\nwenn du dein eigenes Framework verwendest, um Komponenten zu bauen, und dich\ndabei an die mittwald Styling Guidelines halten willst."
    }), "\n", _jsx(_components.p, {
      children: "Auf dieser Seite findest du alle Informationen darüber, wie du das Stylesheet\ninstallieren kannst und wie die Klassennamen strukturiert sind."
    }), "\n", _jsx(_components.hr, {}), "\n", _jsx(_components.h1, {
      children: "Installation des Standalone Stylesheets"
    }), "\n", _jsxs(_components.p, {
      children: ["Zum aktuellen Entwicklungsstand des Projektes kannst du das Stylesheet nur über\nNPM installieren. Die Flow-Stylesheet-Bibliothek kann über einen Package Manager\nwie ", _jsx(_components.code, {
        children: "npm"
      }), " or ", _jsx(_components.code, {
        children: "yarn"
      }), " installiert werden."]
    }), "\n", _jsx(_components.pre, {
      children: _jsx(_components.code, {
        children: "yarn add @mittwald/flow-stylesheet\n"
      })
    }), "\n", _jsx(_components.hr, {}), "\n", _jsx(_components.h1, {
      children: "Styles importieren"
    }), "\n", _jsx(_components.p, {
      children: "Um die Komponenten Styles zu verwenden, musst du das Stylesheet importieren.\nFüge diese Zeile zum Einstiegspunkt deines Projektes hinzu."
    }), "\n", _jsx(_components.pre, {
      children: _jsx(_components.code, {
        children: "import \"@mittwald/flow-stylesheet/css\";\n"
      })
    }), "\n", _jsx(_components.hr, {}), "\n", _jsx(_components.h1, {
      children: "Anwendung des Stylesheets"
    }), "\n", _jsx(_components.p, {
      children: "Um anfangen zu können, solltest du verstehen, wie die Klassennamen strukturiert\nsind. Die im Stylesheet bereitgestellten Klassennamen folgen einem konsistenten,\nkomponentenbasierten und leicht zu verstehendem Schema."
    }), "\n", _jsx(_components.hr, {}), "\n", _jsx(_components.h2, {
      children: "Generelle Klassennamen-Auszeichnungen"
    }), "\n", _jsxs(_components.p, {
      children: ["Alle Klassennamen sind in Lowercase geschrieben und benutzen ", _jsx(_components.code, {
        children: "-"
      }), " um Wörter zu\ntrennen und ", _jsx(_components.code, {
        children: "--"
      }), " um logische Abschnitte zu unterteilen."]
    }), "\n", _jsxs(_components.p, {
      children: ["Der erste logische Abschnitt ist immer der ", _jsx(_components.code, {
        children: "flow"
      }), " Namespace. Andere Abschnitte\nkönnten beispielsweise so aussehen:"]
    }), "\n", _jsx(_components.h3, {
      children: "Komponenten"
    }), "\n", _jsx(_components.pre, {
      children: _jsx(_components.code, {
        children: ".flow--button\n.flow--heading\n.flow--alert-icon\n"
      })
    }), "\n", _jsx(_components.h3, {
      children: "Sub-Komponenten"
    }), "\n", _jsx(_components.pre, {
      children: _jsx(_components.code, {
        children: ".flow--navigation\n.flow--navigation--navigation-item\n"
      })
    }), "\n", _jsx(_components.h3, {
      children: "Spezialisierung: Verschiedene Varianten"
    }), "\n", _jsx(_components.pre, {
      children: _jsx(_components.code, {
        children: ".flow--button--primary\n.flow--alert--danger\n.flow--icon--fixed-width\n"
      })
    }), "\n", _jsx(_components.h3, {
      children: "Spezialisierung: In einer Komposition verwendete Komponenten"
    }), "\n", _jsx(_components.pre, {
      children: _jsx(_components.code, {
        children: ".flow--button--icon\n.flow--alert--heading\n"
      })
    }), "\n", _jsx(_components.hr, {}), "\n", _jsx(_components.h2, {
      children: "Ein Hinweis zur Spezialisierung"
    }), "\n", _jsxs(_components.p, {
      children: ["Klassennamen die verwendet werden, um die Basiskomponente zu spezialisieren,\nmüssen immer ", _jsx(_components.strong, {
        children: "zusätzlich zum Basis-Klassennamen"
      }), " verwendet werden."]
    }), "\n", _jsx(_components.p, {
      children: "Hier ein paar Beispiele um die diese Anforderung zu verdeutlichen:"
    }), "\n", _jsx(LiveCodeEditor, {
      example: "variants"
    }), "\n", _jsx(_components.h3, {
      children: "Kombinierte Varianten"
    }), "\n", _jsx(LiveCodeEditor, {
      example: "multiple-variants"
    }), "\n", _jsx(_components.h3, {
      children: "In einer Komposition verwendete Komponenten"
    }), "\n", _jsxs(_components.p, {
      children: ["Es ist gängige Praxis, größere Komponenten aus bereits bestehenden kleineren\nKomponenten zusammenzusetzen. Der Alert besteht beispielsweise aus einem Icon,\neiner Heading und optionalem Inhalt. Die verwendeten Komponenten müssen ihren\nBasis-Klassennamen für das grundsätzliche Styling erhalten (", _jsx(_components.code, {
        children: "flow--heading"
      }), "),\nsowie den spezialisierten Klassennamen (", _jsx(_components.code, {
        children: "flow--alert--heading"
      }), "), um spezifische\nStyles des Inline Alerts zu erhalten."]
    }), "\n", _jsx(LiveCodeEditor, {
      example: "composition"
    })]
  });
}
function MDXContent(props = {}) {
  const {wrapper: MDXLayout} = {
    ..._provideComponents(),
    ...props.components
  };
  return MDXLayout ? _jsx(MDXLayout, {
    ...props,
    children: _jsx(_createMdxContent, {
      ...props
    })
  }) : _createMdxContent(props);
}
return {
  default: MDXContent
};
function _missingMdxReference(id, component) {
  throw new Error("Expected " + (component ? "component" : "object") + " `" + id + "` to be defined: you likely forgot to import, pass, or provide it.");
}
17:T75b,export default () => {
  const styles: Record<string, React.CSSProperties> = {
    layoutContainer: {
      display: "grid",
      gridTemplateAreas: `
        'header header'
        'nav content'
      `,
      gridTemplateColumns: "90px 1fr",
      gridTemplateRows: "auto 1fr",
      gap: "10px",
      border: "1px solid rgba(206, 75, 255, 1)",
      borderRadius: "4px",
      padding: "10px",
    },
    header: {
      gridArea: "header",
      backgroundColor: "rgba(0, 84, 245, 0.02)",
      padding: "10px",
      textAlign: "center",
      border: "1px dashed rgba(0, 84, 245, 1)",
      borderRadius: "4px",
    },
    sideNavigation: {
      gridArea: "nav",
      backgroundColor: "rgba(0, 84, 245, 0.02)",
      display: "flex",
      justifyContent: "center",
      padding: "55px 10px",
      border: "1px dashed rgba(0, 84, 245, 1)",
      borderRadius: "4px",
      width: "90px",
    },
    verticalText: {
      writingMode: "vertical-rl",
      transform: "rotate(180deg)",
    },
    content: {
      gridArea: "content",
      backgroundColor: "rgba(0, 84, 245, 0.02)",
      display: "flex",
      justifyContent: "center",
      alignItems: "center",
      padding: "10px",
      border: "1px dashed rgba(0, 84, 245, 1)",
      borderRadius: "4px",
    },
    textStyle: {
      color: "rgba(0, 63, 184, 1)",
      fontWeight: "400",
      fontSize: "14px",
    },
  };

  return (
    <div style={styles.layoutContainer}>
      <header style={styles.header}>
        <p style={styles.textStyle}>Header</p>
      </header>
      <nav style={styles.sideNavigation}>
        <p
          style={{
            ...styles.verticalText,
            ...styles.textStyle,
          }}
        >
          Side-Navigation
        </p>
      </nav>
      <main style={styles.content}>
        <p style={styles.textStyle}>Content</p>
      </main>
    </div>
  );
};
18:T1011,export default () => {
  const styles: Record<string, React.CSSProperties> = {
    rootContainer: {
      display: "flex",
      flexDirection: "column",
      gap: "10px",
      border: "1px solid rgba(206, 75, 255, 1)",
      borderRadius: "4px",
      padding: "10px",
    },
    headerContainer: {
      display: "grid",
      gridTemplateAreas: `
        'logo header header'
      `,
      gridTemplateColumns: "60px 1fr 1fr",
      gap: "10px",
    },
    layoutContainer: {
      display: "grid",
      gridTemplateAreas: `
        'primaryNav secondaryNav breadcrumb breadcrumb'
        'primaryNav secondaryNav pageTitle button'
        'primaryNav secondaryNav content content'
      `,
      gridTemplateColumns: "30px 60px 1fr",
      gridTemplateRows: "auto auto 1fr",
      gap: "10px",
    },
    logo: {
      gridArea: "logo",
      backgroundColor: "rgba(0, 84, 245, 0.02)",
      padding: "10px",
      border: "1px dashed rgba(0, 84, 245, 1)",
      borderRadius: "4px",
      display: "flex",
      justifyContent: "center",
      alignItems: "center",
    },
    header: {
      gridArea: "header",
      backgroundColor: "rgba(0, 84, 245, 0.02)",
      padding: "10px",
      textAlign: "center",
      border: "1px dashed rgba(0, 84, 245, 1)",
      borderRadius: "4px",
    },
    primaryNav: {
      gridArea: "primaryNav",
      backgroundColor: "rgba(0, 84, 245, 0.02)",
      display: "flex",
      justifyContent: "center",
      alignItems: "center",
      padding: "38px 0px",
      border: "1px dashed rgba(0, 84, 245, 1)",
      borderRadius: "4px",
      writingMode: "vertical-rl",
      transform: "rotate(180deg)",
    },
    secondaryNav: {
      gridArea: "secondaryNav",
      backgroundColor: "rgba(0, 84, 245, 0.02)",
      display: "flex",
      justifyContent: "center",
      alignItems: "center",
      padding: "38px 0px",
      border: "1px dashed rgba(0, 84, 245, 1)",
      borderRadius: "4px",
      writingMode: "vertical-rl",
      transform: "rotate(180deg)",
    },
    breadcrumb: {
      gridArea: "breadcrumb",
      backgroundColor: "rgba(0, 84, 245, 0.02)",
      textAlign: "center",
      border: "1px dashed rgba(0, 84, 245, 1)",
      borderRadius: "4px",
    },
    pageTitle: {
      gridArea: "pageTitle",
      backgroundColor: "rgba(0, 84, 245, 0.02)",
      textAlign: "center",
      border: "1px dashed rgba(0, 84, 245, 1)",
      borderRadius: "4px",
    },
    button: {
      gridArea: "button",
      backgroundColor: "rgba(0, 84, 245, 0.02)",
      padding: "0px 5px",
      textAlign: "center",
      border: "1px dashed rgba(0, 84, 245, 1)",
      borderRadius: "4px",
    },
    content: {
      gridArea: "content",
      backgroundColor: "rgba(0, 84, 245, 0.02)",
      display: "flex",
      justifyContent: "center",
      alignItems: "center",
      padding: "10px",
      border: "1px dashed rgba(0, 84, 245, 1)",
      borderRadius: "4px",
    },
    textStyle: {
      color: "rgba(0, 63, 184, 1)",
      fontWeight: "400",
      fontSize: "14px",
    },
  };

  return (
    <div style={styles.rootContainer}>
      <div style={styles.headerContainer}>
        <div style={styles.logo}>
          <p style={styles.textStyle}>Logo</p>
        </div>
        <header style={styles.header}>
          <p style={styles.textStyle}>Header</p>
        </header>
      </div>
      <div style={styles.layoutContainer}>
        <nav style={styles.primaryNav}>
          <p style={styles.textStyle}>Primary Navigation</p>
        </nav>
        <nav style={styles.secondaryNav}>
          <p style={styles.textStyle}>
            Secondary Navigation
          </p>
        </nav>
        <div style={styles.breadcrumb}>
          <p style={styles.textStyle}>Breadcrumb</p>
        </div>
        <div style={styles.pageTitle}>
          <p style={styles.textStyle}>Page Title</p>
        </div>
        <div style={styles.button}>
          <p style={styles.textStyle}>Button</p>
        </div>
        <main style={styles.content}>
          <p style={styles.textStyle}>Content</p>
        </main>
      </div>
    </div>
  );
};
19:Td74,import { ColumnLayout } from "@mittwald/flow-react-components/ColumnLayout";
import { LayoutCard } from "@mittwald/flow-react-components/LayoutCard";
import { Section } from "@mittwald/flow-react-components/Section";
import { Heading } from "@mittwald/flow-react-components/Heading";
import { Header } from "@mittwald/flow-react-components/Header";
import { Text } from "@mittwald/flow-react-components/Text";
import { Link } from "@mittwald/flow-react-components/Link";
import { Button } from "@mittwald/flow-react-components/Button";
import { IconContextMenu } from "@mittwald/flow-react-components/Icons";
import { LabeledValue } from "@mittwald/flow-react-components/LabeledValue";
import { Label } from "@mittwald/flow-react-components/Label";
import { CopyButton } from "@mittwald/flow-react-components/CopyButton";
import {
  ContextMenu,
  ContextMenuTrigger,
} from "@mittwald/flow-react-components/ContextMenu";
import { MenuItem } from "@mittwald/flow-react-components/MenuItem";

<ColumnLayout m={[1]} l={[1]}>
  <LayoutCard>
    <Section>
      <Header>
        <Heading>Projektübersicht</Heading>
        <ContextMenuTrigger>
          <Button color="secondary" variant="soft">
            <IconContextMenu />
          </Button>
          <ContextMenu>
            <MenuItem
              onAction={() => alert("not implemented")}
            >
              Domain umziehen
            </MenuItem>
            <MenuItem
              onAction={() => alert("not implemented")}
            >
              Domain entfernen
            </MenuItem>
          </ContextMenu>
        </ContextMenuTrigger>
        <Button onPress={() => alert("not implemented")}>
          Tarif anpassen
        </Button>
      </Header>
      <ColumnLayout l={[1, 1, 1]} m={[1, 1]}>
        <LabeledValue>
          <Label>Projektname</Label>
          <Text>Mein Projekt</Text>
        </LabeledValue>
        <LabeledValue>
          <Label>Server</Label>
          <Link href="#">MeinServer-01</Link>
        </LabeledValue>
        <LabeledValue>
          <Label>Projektdomain</Label>
          <Link href="#" target="_blank">
            p-lis5uw.project.space
          </Link>
          <CopyButton text="p-lis5uw.project.space" />
        </LabeledValue>
        <LabeledValue>
          <Label>Erstelldatum</Label>
          <Text>06.12.2023 um 11:40 Uhr</Text>
        </LabeledValue>
        <LabeledValue>
          <Label>A-Record</Label>
          <Text>45.225.312.55</Text>
          <CopyButton text="45.225.312.55" />
        </LabeledValue>
        <LabeledValue>
          <Label>Shoert-ID</Label>
          <Text>p-lis5uw</Text>
          <CopyButton text="p-lis5uw" />
        </LabeledValue>
      </ColumnLayout>
    </Section>
  </LayoutCard>

  <ColumnLayout l={[1, 1]}>
    <LayoutCard>
      <Section>
        <Heading>Lerne mehr über Flow</Heading>
        <Text>
          Nutze unseren Styleguide, um mehr über das Design
          System Flow zu erfahren.
        </Text>
        <Link href="#">Zum Styleguide</Link>
      </Section>
    </LayoutCard>

    <LayoutCard>
      <Section>
        <Heading>Gib uns Feedback</Heading>
        <Text>
          Wir freuen uns auf deine Anmerkungen und Wünsche
          zu Flow.
        </Text>
        <Link href="https://github.com/mittwald/flow">
          Zum GitHub Repository
        </Link>
      </Section>
    </LayoutCard>
  </ColumnLayout>
</ColumnLayout>;
1a:T1cf9,import {
  ListItemView,
  typedList,
} from "@mittwald/flow-react-components/List";
import Avatar from "@mittwald/flow-react-components/Avatar";
import Heading from "@mittwald/flow-react-components/Heading";
import Text from "@mittwald/flow-react-components/Text";
import {
  IconDomain,
  IconHome,
  IconInvoice,
  IconSubdomain,
} from "@mittwald/flow-react-components/Icons";
import Button from "@mittwald/flow-react-components/Button";
import Section from "@mittwald/flow-react-components/Section";
import ActionGroup from "@mittwald/flow-react-components/ActionGroup";
import Content from "@mittwald/flow-react-components/Content";
import Link from "@mittwald/flow-react-components/Link";
import TextField from "@mittwald/flow-react-components/TextField";
import Modal, {
  ModalTrigger,
} from "@mittwald/flow-react-components/Modal";
import Label from "@mittwald/flow-react-components/Label";
import Header from "@mittwald/flow-react-components/Header";
import { ColumnLayout } from "@mittwald/flow-react-components/ColumnLayout";
import Initials from "@mittwald/flow-react-components/Initials";
import Table, {
  TableBody,
  TableCell,
  TableColumn,
  TableFooterRow,
  TableHeader,
  TableRow,
} from "@mittwald/flow-react-components/Table";
import CheckboxButton from "@mittwald/flow-react-components/CheckboxButton";
import { Action } from "@mittwald/flow-react-components/Action";
import { LayoutCard } from "@mittwald/flow-react-components/LayoutCard";
import AlertBadge from "@mittwald/flow-react-components/AlertBadge";
import { Align } from "@mittwald/flow-react-components/Align";

export default () => {
  interface Domain {
    hostname: string;
    type: "Domain" | "Subdomain" | "Default-Domain";
    ssl?: string;
  }

  const domains: Domain[] = [
    {
      hostname: "toujours.de",
      type: "Domain",
    },
    {
      hostname: "www.toujours.de",
      type: "Subdomain",
      ssl: "Let’s Encrypt",
    },
    {
      hostname: "p-lis5uw.project.space",
      type: "Default-Domain",
      ssl: "Let’s Encrypt",
    },
  ];
  const DomainList = typedList<Domain>();

  const addDomainModal = (
    <Modal offCanvas>
      <Heading>Domain buchen</Heading>
      <Content>
        <Section>
          <Heading>Wunsch-Domain</Heading>
          <Text>
            Eine Liste der Top-Level-Domains findest du auf
            unserer{" "}
            <Link
              target="_blank"
              href="https://www.mittwald.de/produkte/domains"
            >
              Domain-Seite
            </Link>
            .
          </Text>
          <TextField isRequired>
            <Label>Domain</Label>
          </TextField>
        </Section>
        <Section>
          <Header>
            <Heading>Domain-Inhaber</Heading>
            <Button
              color="accent"
              onPress={() => alert("not implemented")}
            >
              Hinzufügen
            </Button>
          </Header>
          <Text>
            Du hast noch keinen Domain-Inhaber angelegt.
          </Text>
        </Section>
        <Section>
          <Heading>Bestellübersicht</Heading>
          <ColumnLayout>
            <Align>
              <Avatar color="blue">
                <Initials>Max Mustermann</Initials>
              </Avatar>
              <Text>
                <b>Meine Organisation</b>
                Franz Müller
                <br />
                Jackenweg 44a
                <br />
                12893 Lanzhausen
              </Text>
            </Align>
            <Align>
              <Avatar color="blue">
                <IconInvoice />
              </Avatar>
              <Text>
                <b>Rechnung</b>
                Franz Müller
                <br />
                Jackenweg 44a
                <br />
                12893 Lanzhausen
              </Text>
            </Align>
          </ColumnLayout>
          <Table>
            <TableHeader>
              <TableColumn>Artikel</TableColumn>
              <TableColumn>Preis</TableColumn>
            </TableHeader>
            <TableBody>
              <TableRow>
                <TableCell>Beispiel Domain</TableCell>
                <TableCell>0,00 €</TableCell>
              </TableRow>
              <TableRow>
                <TableCell>Einrichtungsgebühr</TableCell>
                <TableCell>0,00 €</TableCell>
              </TableRow>
              <TableFooterRow>
                <TableCell>Gesamtpreis</TableCell>
                <TableCell>0,00 €</TableCell>
              </TableFooterRow>
            </TableBody>
          </Table>
          <CheckboxButton isRequired>
            Ich verstehe, dass ein Klick auf
            “Kostenpflichtig buchen” keinerlei Auswirkungen
            hat, da es sich um einen rein fiktiven
            Bestellprozess handelt. Es wird keine Bestellung
            ausgelöst und wir speichern keine Daten. Hier
            passiert nichts, daher sind AGBs und Datenschutz
            überflüssig.
          </CheckboxButton>
        </Section>
      </Content>
      <ActionGroup>
        <Action closeOverlay="Modal">
          <Button color="secondary" variant="soft">
            Abbrechen
          </Button>
          <Button color="accent">
            Kostenpflichtig bestellen
          </Button>
          ‚
        </Action>
      </ActionGroup>
    </Modal>
  );

  return (
    <LayoutCard>
      <Section>
        {domains.length > 0 && (
          <DomainList.List batchSize={5}>
            <ActionGroup>
              <ModalTrigger>
                <Button color="accent">
                  Domain anlegen
                </Button>
                {addDomainModal}
              </ModalTrigger>
            </ActionGroup>
            <DomainList.StaticData data={domains} />
            <DomainList.Search />
            <DomainList.Sorting
              property="hostname"
              name="A bis Z"
              defaultEnabled
            />
            <DomainList.Sorting
              property="hostname"
              name="Z bis A"
              direction="desc"
            />
            <DomainList.Filter
              name="Filter"
              property="type"
            />

            <DomainList.Item>
              {(domain) => (
                <ListItemView>
                  <Avatar
                    color={
                      domain.type === "Domain"
                        ? "blue"
                        : domain.type === "Subdomain"
                          ? "teal"
                          : "lilac"
                    }
                  >
                    {domain.type === "Domain" ? (
                      <IconDomain />
                    ) : domain.type === "Subdomain" ? (
                      <IconSubdomain />
                    ) : (
                      <IconHome />
                    )}
                  </Avatar>
                  <Heading>
                    {domain.hostname}{" "}
                    {!domain.ssl && (
                      <AlertBadge status="danger">
                        SSL-Zertifikat
                      </AlertBadge>
                    )}
                  </Heading>
                  <Text>{domain.type}</Text>
                </ListItemView>
              )}
            </DomainList.Item>
          </DomainList.List>
        )}
      </Section>
    </LayoutCard>
  );
};
1b:T14e4,import { LayoutCard } from "@mittwald/flow-react-components/LayoutCard";
import { IllustratedMessage } from "@mittwald/flow-react-components/IllustratedMessage";
import {
  IconDomain,
  IconInvoice,
} from "@mittwald/flow-react-components/Icons";
import { Heading } from "@mittwald/flow-react-components/Heading";
import { Text } from "@mittwald/flow-react-components/Text";
import { Button } from "@mittwald/flow-react-components/Button";
import Modal, {
  ModalTrigger,
} from "@mittwald/flow-react-components/Modal";
import Content from "@mittwald/flow-react-components/Content";
import { Section } from "@mittwald/flow-react-components/Section";
import { Link } from "@mittwald/flow-react-components/Link";
import TextField from "@mittwald/flow-react-components/TextField";
import Label from "@mittwald/flow-react-components/Label";
import Header from "@mittwald/flow-react-components/Header";
import { ColumnLayout } from "@mittwald/flow-react-components/ColumnLayout";
import { ActionGroup } from "@mittwald/flow-react-components/ActionGroup";
import Action from "@mittwald/flow-react-components/Action";
import { Avatar } from "@mittwald/flow-react-components/Avatar";
import Initials from "@mittwald/flow-react-components/Initials";
import {
  Table,
  TableBody,
  TableCell,
  TableColumn,
  TableFooterRow,
  TableHeader,
  TableRow,
} from "@mittwald/flow-react-components/Table";
import { CheckboxButton } from "@mittwald/flow-react-components/CheckboxButton";
import { Align } from "@mittwald/flow-react-components/Align";

<LayoutCard>
  <IllustratedMessage>
    <IconDomain />
    <Heading>Erste Domain buchen</Heading>
    <Text>
      Du hast noch keine Domain bei uns gebucht. Buche jetzt
      für dein Projekt eine Domain.
    </Text>
    <ModalTrigger>
      <Button>Domain buchen</Button>
      <Modal offCanvas>
        <Heading>Domain buchen</Heading>
        <Content>
          <Section>
            <Heading>Wunsch-Domain</Heading>
            <Text>
              Eine Liste der Top-Level-Domains findest du
              auf unserer{" "}
              <Link
                target="_blank"
                href="https://www.mittwald.de/produkte/domains"
              >
                Domain-Seite
              </Link>
              .
            </Text>
            <TextField isRequired>
              <Label>Domain</Label>
            </TextField>
          </Section>
          <Section>
            <Header>
              <Heading>Domain-Inhaber</Heading>
              <Button
                color="accent"
                onPress={() => alert("not implemented")}
              >
                Hinzufügen
              </Button>
            </Header>
            <Text>
              Du hast noch keinen Domain-Inhaber angelegt.
            </Text>
          </Section>
          <Section>
            <Heading>Bestellübersicht</Heading>
            <ColumnLayout>
              <Align>
                <Avatar color="blue">
                  <Initials>Max Mustermann</Initials>
                </Avatar>
                <Text>
                  <b>Meine Organisation</b>
                  Franz Müller
                  <br />
                  Jackenweg 44a
                  <br />
                  12893 Lanzhausen
                </Text>
              </Align>
              <Align>
                <Avatar color="blue">
                  <IconInvoice />
                </Avatar>
                <Text>
                  <b>Rechnung</b>
                  Franz Müller
                  <br />
                  Jackenweg 44a
                  <br />
                  12893 Lanzhausen
                </Text>
              </Align>
            </ColumnLayout>
            <Table>
              <TableHeader>
                <TableColumn>Artikel</TableColumn>
                <TableColumn>Preis</TableColumn>
              </TableHeader>
              <TableBody>
                <TableRow>
                  <TableCell>Beispiel Domain</TableCell>
                  <TableCell>0,00 €</TableCell>
                </TableRow>
                <TableRow>
                  <TableCell>Einrichtungsgebühr</TableCell>
                  <TableCell>0,00 €</TableCell>
                </TableRow>
                <TableFooterRow>
                  <TableCell>Gesamtpreis</TableCell>
                  <TableCell>0,00 €</TableCell>
                </TableFooterRow>
              </TableBody>
            </Table>
            <CheckboxButton isRequired>
              Ich verstehe, dass ein Klick auf
              “Kostenpflichtig buchen” keinerlei
              Auswirkungen hat, da es sich um einen rein
              fiktiven Bestellprozess handelt. Es wird keine
              Bestellung ausgelöst und wir speichern keine
              Daten. Hier passiert nichts, daher sind AGBs
              und Datenschutz überflüssig.
            </CheckboxButton>
          </Section>
        </Content>
        <ActionGroup>
          <Action closeOverlay="Modal">
            <Button color="secondary" variant="soft">
              Abbrechen
            </Button>
            <Button color="accent">
              Kostenpflichtig bestellen
            </Button>
            ‚
          </Action>
        </ActionGroup>
      </Modal>
    </ModalTrigger>
  </IllustratedMessage>
</LayoutCard>;
1c:T1125,import Heading from "@mittwald/flow-react-components/Heading";
import Text from "@mittwald/flow-react-components/Text";
import Button from "@mittwald/flow-react-components/Button";
import Section from "@mittwald/flow-react-components/Section";
import Label from "@mittwald/flow-react-components/Label";
import Header from "@mittwald/flow-react-components/Header";
import { ColumnLayout } from "@mittwald/flow-react-components/ColumnLayout";
import { LayoutCard } from "@mittwald/flow-react-components/LayoutCard";
import {
  ContextMenu,
  ContextMenuTrigger,
  MenuItem,
} from "@mittwald/flow-react-components/ContextMenu";
import { IconContextMenu } from "@mittwald/flow-react-components/Icons";
import LabeledValue from "@mittwald/flow-react-components/LabeledValue";
import { Alert } from "@mittwald/flow-react-components/Alert";
import { Content } from "@mittwald/flow-react-components/Content";
import { Action } from "@mittwald/flow-react-components/Action";
import {
  Tab,
  Tabs,
  TabTitle,
} from "@mittwald/flow-react-components/Tabs";

export default () => {
  const domain = {
    id: "4",
    hostname: "example.de",
    domain: "example.de",
    type: "Domain",
    ssl: undefined,
    owner: {
      firstName: "Franz",
      lastName: "Müller",
      street: "Jackenweg",
      houseNumber: "44a",
      zip: "12893",
      city: "Lanzhausen",
      email: "f.mueller@mittwald.de",
    },
  };

  const domainDetailsSection = (
    <Section>
      <Header>
        <Heading>Domain-Details</Heading>
        <ContextMenuTrigger>
          <Button color="secondary" variant="soft">
            <IconContextMenu />
          </Button>
          <ContextMenu>
            <MenuItem
              onAction={() => alert("not implemented")}
            >
              Domain umziehen
            </MenuItem>
            <MenuItem
              onAction={() => alert("not implemented")}
            >
              Domain entfernen
            </MenuItem>
          </ContextMenu>
        </ContextMenuTrigger>

        <Button onPress={() => alert("not implemented")}>
          Domain-Ziel ändern
        </Button>
      </Header>
      <Alert status="danger">
        <Heading>
          Es konnte kein SSL-Zertifikat ausgestellt werden
        </Heading>
        <Content>
          <Text>
            Für diese Domain konnte kein SSL-Zertifikat
            ausgestellt werden, da {domain.hostname} nicht
            per DNS auf deine Server-IP zeigt. Ändere den
            A-Record oder CNAME auf die Server-IP zeigen. Es
            kann einige Minuten dauern, bis das Zertifikat
            bei korrekten Einstellungen ausgestellt ist.
          </Text>
          <Action showFeedback>
            <Button>SSL-Zertifikat ausstellen</Button>
          </Action>
        </Content>
      </Alert>
      <ColumnLayout s={[1, 1]}>
        <LabeledValue>
          <Label>Domain-Ziel</Label>
          <Text>{domain.hostname}</Text>
        </LabeledValue>
        <LabeledValue>
          <Label>Zertifikat</Label>
          <Text>{domain.ssl ? domain.ssl : "-"}</Text>
        </LabeledValue>
      </ColumnLayout>
    </Section>
  );

  const domainOwnerSection = (
    <Section>
      <Header>
        <Heading>Domain-Inhaber</Heading>
        <Button
          color="secondary"
          variant="soft"
          onPress={() => alert("not implemented")}
        >
          Bearbeiten
        </Button>
      </Header>
      <ColumnLayout>
        <LabeledValue>
          <Label>Inhaber</Label>
          <Text>
            {domain.owner.firstName} {domain.owner.lastName}
            <br />
            {domain.owner.street} {domain.owner.houseNumber}
            <br />
            {domain.owner.zip} {domain.owner.city}
          </Text>
        </LabeledValue>
        <LabeledValue>
          <Label>E-Mail-Adresse</Label>
          <Text>{domain.owner.email}</Text>
        </LabeledValue>
      </ColumnLayout>
    </Section>
  );

  return (
    <LayoutCard>
      <Tabs>
        <Tab>
          <TabTitle>Allgemein</TabTitle>
          {domainDetailsSection}
          {domainOwnerSection}
        </Tab>
        <Tab>
          <TabTitle>DNS</TabTitle>
          <Text>not implemented</Text>
        </Tab>
        <Tab>
          <TabTitle>Pfade</TabTitle>
          <Text>not implemented</Text>
        </Tab>
      </Tabs>
    </LayoutCard>
  );
};
1d:Tf8d,import Heading from "@mittwald/flow-react-components/Heading";
import Text from "@mittwald/flow-react-components/Text";
import Button from "@mittwald/flow-react-components/Button";
import Section from "@mittwald/flow-react-components/Section";
import Content from "@mittwald/flow-react-components/Content";
import {
  Modal,
  ModalTrigger,
} from "@mittwald/flow-react-components/Modal";
import Label from "@mittwald/flow-react-components/Label";
import Header from "@mittwald/flow-react-components/Header";
import { ColumnLayout } from "@mittwald/flow-react-components/ColumnLayout";
import { LayoutCard } from "@mittwald/flow-react-components/LayoutCard";
import LabeledValue from "@mittwald/flow-react-components/LabeledValue";
import TextField from "@mittwald/flow-react-components/TextField";
import { ActionGroup } from "@mittwald/flow-react-components/ActionGroup";
import { Action } from "@mittwald/flow-react-components/Action";

export default () => {
  const domain = {
    id: "4",
    hostname: "example.de",
    domain: "example.de",
    type: "Domain",
    ssl: undefined,
    owner: {
      firstName: "Franz",
      lastName: "Müller",
      street: "Jackenweg",
      houseNumber: "44a",
      zip: "12893",
      city: "Lanzhausen",
      email: "f.mueller@mittwald.de",
    },
  };

  const updateOwnerModal = (
    <Modal>
      <Heading>Domain-Inhaber bearbeiten</Heading>
      <Content>
        <Section>
          <ColumnLayout>
            <TextField
              isRequired
              defaultValue={domain.owner.firstName}
            >
              <Label>Vorname</Label>
            </TextField>
            <TextField
              isRequired
              defaultValue={domain.owner.lastName}
            >
              <Label>Nachname</Label>
            </TextField>
            <ColumnLayout gap="s" s={[2, 1]}>
              <TextField
                isRequired
                defaultValue={domain.owner.street}
              >
                <Label>Straße</Label>
              </TextField>
              <TextField
                isRequired
                defaultValue={domain.owner.houseNumber}
              >
                <Label>Hausnr.</Label>
              </TextField>
            </ColumnLayout>
            <ColumnLayout gap="s" s={[1, 2]}>
              <TextField
                isRequired
                defaultValue={domain.owner.zip}
              >
                <Label>PLZ</Label>
              </TextField>
              <TextField
                isRequired
                defaultValue={domain.owner.city}
              >
                <Label>Ort</Label>
              </TextField>
            </ColumnLayout>
          </ColumnLayout>
        </Section>
      </Content>
      <ActionGroup>
        <Action closeOverlay="Modal">
          <Button color="secondary" variant="soft">
            Abbrechen
          </Button>
          <Button color="accent" type="submit">
            Änderungen speichern
          </Button>
        </Action>
      </ActionGroup>
    </Modal>
  );

  return (
    <LayoutCard>
      <Section>
        <Header>
          <Heading>Domain-Inhaber</Heading>
          <ModalTrigger>
            <Button color="secondary" variant="soft">
              Bearbeiten
            </Button>
            {updateOwnerModal}
          </ModalTrigger>
        </Header>
        <ColumnLayout>
          <LabeledValue>
            <Label>Inhaber</Label>
            <Text>
              {domain.owner.firstName}{" "}
              {domain.owner.lastName}
              <br />
              {domain.owner.street}{" "}
              {domain.owner.houseNumber}
              <br />
              {domain.owner.zip} {domain.owner.city}
            </Text>
          </LabeledValue>
          <LabeledValue>
            <Label>E-Mail-Adresse</Label>
            <Text>{domain.owner.email}</Text>
          </LabeledValue>
        </ColumnLayout>
      </Section>
    </LayoutCard>
  );
};
1e:T412,import Button from "@mittwald/flow-react-components/Button";
import Action from "@mittwald/flow-react-components/Action";
import { sleepLong } from "@/content/03-components/actions/action/examples/lib";
import Heading from "@mittwald/flow-react-components/Heading";
import { Content } from "@mittwald/flow-react-components/Content";
import ActionGroup from "@mittwald/flow-react-components/ActionGroup";
import { Modal } from "@mittwald/flow-react-components/Modal";

<Action action={sleepLong}>
  <Modal slot="actionConfirm">
    <Heading>Projekt löschen</Heading>
    <Content>
      Das Löschen eines Projektes kann nicht rückgängig
      gemacht werden. Möchtest Du das Projekt
      &quot;Test&quot; dennoch löschen?
    </Content>
    <ActionGroup>
      <Button color="danger">
        Unwiederbringlich löschen
      </Button>
      <Button color="secondary" variant="soft">
        Abbrechen
      </Button>
    </ActionGroup>
  </Modal>
  <Button color="secondary" variant="soft">
    Projekt löschen
  </Button>
</Action>;
1f:T11bf,import {
  IconApp,
  IconAutoresponder,
  IconBackup,
  IconCalendar,
  IconCamera,
  IconChangelog,
  IconClock,
  IconContract,
  IconContractPartner,
  IconCronjob,
  IconCustomer,
  IconDashboard,
  IconDatabase,
  IconDeliveryBox,
  IconDomain,
  IconEmail,
  IconExtension,
  IconForward,
  IconInbox,
  IconInvoice,
  IconMember,
  IconMittwald,
  IconNumber,
  IconOrder,
  IconPassword,
  IconPayment,
  IconPerformance,
  IconProject,
  IconSearchEngine,
  IconSecurity,
  IconServer,
  IconSpamProtectionOff,
  IconSpamProtectionOn,
  IconSshKey,
  IconSshSftp,
  IconStar,
  IconStarFilled,
  IconSubdomain,
  IconSupport,
  IconTerminate,
  IconTicket,
  IconUser,
} from "@mittwald/flow-react-components/Icons";
import Label from "@mittwald/flow-react-components/Label";
import LabeledValue from "@mittwald/flow-react-components/LabeledValue";
import ColumnLayout from "@mittwald/flow-react-components/ColumnLayout";

<ColumnLayout l={[1, 1, 1, 1, 1]} m={[1, 1, 1]} s={[1, 1]}>
  <LabeledValue>
    <Label>mittwald</Label>
    <IconMittwald />
  </LabeledValue>
  <LabeledValue>
    <Label>Star</Label>
    <IconStar />
  </LabeledValue>
  <LabeledValue>
    <Label>Star Filled</Label>
    <IconStarFilled />
  </LabeledValue>
  <LabeledValue>
    <Label>Project</Label>
    <IconProject />
  </LabeledValue>
  <LabeledValue>
    <Label>Server</Label>
    <IconServer />
  </LabeledValue>
  <LabeledValue>
    <Label>Customer</Label>
    <IconCustomer />
  </LabeledValue>
  <LabeledValue>
    <Label>Support</Label>
    <IconSupport />
  </LabeledValue>
  <LabeledValue>
    <Label>E-Mail</Label>
    <IconEmail />
  </LabeledValue>
  <LabeledValue>
    <Label>Delivery Box</Label>
    <IconDeliveryBox />
  </LabeledValue>
  <LabeledValue>
    <Label>App</Label>
    <IconApp />
  </LabeledValue>
  <LabeledValue>
    <Label>Domain</Label>
    <IconDomain />
  </LabeledValue>
  <LabeledValue>
    <Label>Subdomain</Label>
    <IconSubdomain />
  </LabeledValue>
  <LabeledValue>
    <Label>Database</Label>
    <IconDatabase />
  </LabeledValue>
  <LabeledValue>
    <Label>Changelog</Label>
    <IconChangelog />
  </LabeledValue>
  <LabeledValue>
    <Label>Extension</Label>
    <IconExtension />
  </LabeledValue>
  <LabeledValue>
    <Label>Order</Label>
    <IconOrder />
  </LabeledValue>
  <LabeledValue>
    <Label>Performance</Label>
    <IconPerformance />
  </LabeledValue>
  <LabeledValue>
    <Label>Ticket</Label>
    <IconTicket />
  </LabeledValue>
  <LabeledValue>
    <Label>ContractPartner</Label>
    <IconContractPartner />
  </LabeledValue>
  <LabeledValue>
    <Label>Invoice</Label>
    <IconInvoice />
  </LabeledValue>
  <LabeledValue>
    <Label>Payment</Label>
    <IconPayment />
  </LabeledValue>
  <LabeledValue>
    <Label>Contract</Label>
    <IconContract />
  </LabeledValue>
  <LabeledValue>
    <Label>Camera</Label>
    <IconCamera />
  </LabeledValue>
  <LabeledValue>
    <Label>Backup</Label>
    <IconBackup />
  </LabeledValue>
  <LabeledValue>
    <Label>Cronjob</Label>
    <IconCronjob />
  </LabeledValue>
  <LabeledValue>
    <Label>Member</Label>
    <IconMember />
  </LabeledValue>
  <LabeledValue>
    <Label>User</Label>
    <IconUser />
  </LabeledValue>
  <LabeledValue>
    <Label>Search Engine</Label>
    <IconSearchEngine />
  </LabeledValue>
  <LabeledValue>
    <Label>Ssh Sftp</Label>
    <IconSshSftp />
  </LabeledValue>
  <LabeledValue>
    <Label>Inbox</Label>
    <IconInbox />
  </LabeledValue>
  <LabeledValue>
    <Label>Spam Protection Off</Label>
    <IconSpamProtectionOff />
  </LabeledValue>
  <LabeledValue>
    <Label>Spam Protection On</Label>
    <IconSpamProtectionOn />
  </LabeledValue>
  <LabeledValue>
    <Label>Number</Label>
    <IconNumber />
  </LabeledValue>
  <LabeledValue>
    <Label>Clock</Label>
    <IconClock />
  </LabeledValue>
  <LabeledValue>
    <Label>Calendar</Label>
    <IconCalendar />
  </LabeledValue>
  <LabeledValue>
    <Label>Dashboard</Label>
    <IconDashboard />
  </LabeledValue>
  <LabeledValue>
    <Label>Terminate</Label>
    <IconTerminate />
  </LabeledValue>
  <LabeledValue>
    <Label>Security</Label>
    <IconSecurity />
  </LabeledValue>
  <LabeledValue>
    <Label>SshKey</Label>
    <IconSshKey />
  </LabeledValue>
  <LabeledValue>
    <Label>Forward</Label>
    <IconForward />
  </LabeledValue>
  <LabeledValue>
    <Label>Autoresponder</Label>
    <IconAutoresponder />
  </LabeledValue>
  <LabeledValue>
    <Label>Password</Label>
    <IconPassword />
  </LabeledValue>
</ColumnLayout>;
20:T10d8,import {
  IconBackLink,
  IconCheck,
  IconCheckboxChecked,
  IconCheckboxEmpty,
  IconCheckboxIndeterminate,
  IconChevronDown,
  IconChevronLeft,
  IconChevronRight,
  IconChevronUp,
  IconClose,
  IconCode,
  IconContextMenu,
  IconContextMenuVertical,
  IconCopy,
  IconDelete,
  IconDownload,
  IconEdit,
  IconExternalLink,
  IconFilter,
  IconHide,
  IconHome,
  IconLogout,
  IconMaximize,
  IconMenu,
  IconMinimize,
  IconMinus,
  IconNotification,
  IconPlus,
  IconRadioOff,
  IconRadioOn,
  IconRedo,
  IconRefresh,
  IconSave,
  IconSearch,
  IconSettings,
  IconShare,
  IconShow,
  IconSorting,
  IconUndo,
  IconView,
} from "@mittwald/flow-react-components/Icons";
import Label from "@mittwald/flow-react-components/Label";
import LabeledValue from "@mittwald/flow-react-components/LabeledValue";
import ColumnLayout from "@mittwald/flow-react-components/ColumnLayout";

<ColumnLayout l={[1, 1, 1, 1, 1]} m={[1, 1, 1]} s={[1, 1]}>
  <LabeledValue>
    <Label>Home</Label>
    <IconHome />
  </LabeledValue>
  <LabeledValue>
    <Label>Notification</Label>
    <IconNotification />
  </LabeledValue>

  <LabeledValue>
    <Label>Logout</Label>
    <IconLogout />
  </LabeledValue>
  <LabeledValue>
    <Label>Search</Label>
    <IconSearch />
  </LabeledValue>
  <LabeledValue>
    <Label>Menu</Label>
    <IconMenu />
  </LabeledValue>
  <LabeledValue>
    <Label>View</Label>
    <IconView />
  </LabeledValue>
  <LabeledValue>
    <Label>Filter</Label>
    <IconFilter />
  </LabeledValue>
  <LabeledValue>
    <Label>Sorting</Label>
    <IconSorting />
  </LabeledValue>
  <LabeledValue>
    <Label>Context Menu</Label>
    <IconContextMenu />
  </LabeledValue>
  <LabeledValue>
    <Label>Context Menu Vertical</Label>
    <IconContextMenuVertical />
  </LabeledValue>
  <LabeledValue>
    <Label>Maximize</Label>
    <IconMaximize />
  </LabeledValue>
  <LabeledValue>
    <Label>Minimize</Label>
    <IconMinimize />
  </LabeledValue>
  <LabeledValue>
    <Label>Edit</Label>
    <IconEdit />
  </LabeledValue>
  <LabeledValue>
    <Label>Share</Label>
    <IconShare />
  </LabeledValue>
  <LabeledValue>
    <Label>Save</Label>
    <IconSave />
  </LabeledValue>
  <LabeledValue>
    <Label>Settings</Label>
    <IconSettings />
  </LabeledValue>
  <LabeledValue>
    <Label>Delete</Label>
    <IconDelete />
  </LabeledValue>
  <LabeledValue>
    <Label>Copy</Label>
    <IconCopy />
  </LabeledValue>
  <LabeledValue>
    <Label>Backlink</Label>
    <IconBackLink />
  </LabeledValue>
  <LabeledValue>
    <Label>External Link</Label>
    <IconExternalLink />
  </LabeledValue>
  <LabeledValue>
    <Label>Chevron Down</Label>
    <IconChevronDown />
  </LabeledValue>
  <LabeledValue>
    <Label>Chevron Left</Label>
    <IconChevronLeft />
  </LabeledValue>
  <LabeledValue>
    <Label>Chevron Right</Label>
    <IconChevronRight />
  </LabeledValue>
  <LabeledValue>
    <Label>ChevronUp</Label>
    <IconChevronUp />
  </LabeledValue>
  <LabeledValue>
    <Label>Close</Label>
    <IconClose />
  </LabeledValue>
  <LabeledValue>
    <Label>Show</Label>
    <IconShow />
  </LabeledValue>
  <LabeledValue>
    <Label>Hide</Label>
    <IconHide />
  </LabeledValue>
  <LabeledValue>
    <Label>Plus</Label>
    <IconPlus />
  </LabeledValue>
  <LabeledValue>
    <Label>Minus</Label>
    <IconMinus />
  </LabeledValue>
  <LabeledValue>
    <Label>Code</Label>
    <IconCode />
  </LabeledValue>
  <LabeledValue>
    <Label>Checkbox Checked</Label>
    <IconCheckboxChecked />
  </LabeledValue>
  <LabeledValue>
    <Label>Checkbox Empty</Label>
    <IconCheckboxEmpty />
  </LabeledValue>
  <LabeledValue>
    <Label>Checkbox Indeterminate</Label>
    <IconCheckboxIndeterminate />
  </LabeledValue>
  <LabeledValue>
    <Label>RadioOff</Label>
    <IconRadioOff />
  </LabeledValue>
  <LabeledValue>
    <Label>RadioOn</Label>
    <IconRadioOn />
  </LabeledValue>
  <LabeledValue>
    <Label>Refresh</Label>
    <IconRefresh />
  </LabeledValue>
  <LabeledValue>
    <Label>Check</Label>
    <IconCheck />
  </LabeledValue>
  <LabeledValue>
    <Label>Download</Label>
    <IconDownload />
  </LabeledValue>
  <LabeledValue>
    <Label>Redo</Label>
    <IconRedo />
  </LabeledValue>
  <LabeledValue>
    <Label>Undo</Label>
    <IconUndo />
  </LabeledValue>
</ColumnLayout>;
21:T595,import LabeledValue from "@mittwald/flow-react-components/LabeledValue";
import Label from "@mittwald/flow-react-components/Label";
import Content from "@mittwald/flow-react-components/Content";
import CopyButton from "@mittwald/flow-react-components/CopyButton";
import Link from "@mittwald/flow-react-components/Link";
import Text from "@mittwald/flow-react-components/Text";
import { IconExternalLink } from "@mittwald/flow-react-components/Icons";
import ColumnLayout from "@mittwald/flow-react-components/ColumnLayout";
import InlineCode from "@mittwald/flow-react-components/InlineCode";

<ColumnLayout>
  <LabeledValue>
    <Label>Projektname</Label>
    <Content>Dolce Vita</Content>
  </LabeledValue>

  <LabeledValue>
    <Label>Short-ID</Label>
    <Content>p-wut3uw</Content>
    <CopyButton text="p-wut3uw" />
  </LabeledValue>

  <LabeledValue>
    <Label>Projektdomain</Label>
    <Link>
      <Text>p-lol3qe.project.space</Text>
      <IconExternalLink />
    </Link>
    <CopyButton text="p-lol3qe.project.space" />
  </LabeledValue>

  <LabeledValue>
    <Label>Server</Label>
    <Link>Dolce-Server-01</Link>
  </LabeledValue>

  <LabeledValue>
    <Label>A-Record</Label>
    <InlineCode>45.144.187.21</InlineCode>
    <CopyButton text="45.144.187.21" />
  </LabeledValue>

  <LabeledValue>
    <Label>Erstellungsdatum</Label>
    <Content>06.12.2023 um 11:40 Uhr</Content>
  </LabeledValue>
</ColumnLayout>;
22:T5a6,import LabeledValue from "@mittwald/flow-react-components/LabeledValue";
import Label from "@mittwald/flow-react-components/Label";
import Content from "@mittwald/flow-react-components/Content";
import CopyButton from "@mittwald/flow-react-components/CopyButton";
import Link from "@mittwald/flow-react-components/Link";
import Text from "@mittwald/flow-react-components/Text";
import { IconExternalLink } from "@mittwald/flow-react-components/Icons";
import ColumnLayout from "@mittwald/flow-react-components/ColumnLayout";
import InlineCode from "@mittwald/flow-react-components/InlineCode";

<ColumnLayout l={[1, 1, 1, 1]}>
  <LabeledValue>
    <Label>Erstellungsdatum</Label>
    <Content>06.12.2023 um 11:40 Uhr</Content>
  </LabeledValue>

  <LabeledValue>
    <Label>Short-ID</Label>
    <Content>p-wut3uw</Content>
    <CopyButton text="p-wut3uw" />
  </LabeledValue>

  <LabeledValue>
    <Label>A-Record</Label>
    <InlineCode>45.144.187.21</InlineCode>
    <CopyButton text="45.144.187.21" />
  </LabeledValue>

  <LabeledValue>
    <Label>Server</Label>
    <Link>Dolce-Server-01</Link>
  </LabeledValue>

  <LabeledValue>
    <Label>Projektname</Label>
    <Content>Dolce Vita</Content>
  </LabeledValue>

  <LabeledValue>
    <Label>Projektdomain</Label>
    <Link>
      <Text>p-lol3qe.project.space</Text>
      <IconExternalLink />
    </Link>
    <CopyButton text="p-lol3qe.project.space" />
  </LabeledValue>
</ColumnLayout>;
23:T5f2,import { Message } from "@mittwald/flow-react-components/Message";
import { Header } from "@mittwald/flow-react-components/Header";
import {
  ContextMenu,
  ContextMenuTrigger,
} from "@mittwald/flow-react-components/ContextMenu";
import { Button } from "@mittwald/flow-react-components/Button";
import MenuItem from "@mittwald/flow-react-components/MenuItem";
import { Align } from "@mittwald/flow-react-components/Align";
import { Avatar } from "@mittwald/flow-react-components/Avatar";
import { Initials } from "@mittwald/flow-react-components/Initials";
import { Text } from "@mittwald/flow-react-components/Text";
import { Content } from "@mittwald/flow-react-components/Content";

<Message>
  <Header>
    <ContextMenuTrigger>
      <Button />
      <ContextMenu>
        <MenuItem>Bearbeiten</MenuItem>
        <MenuItem>Löschen</MenuItem>
      </ContextMenu>
    </ContextMenuTrigger>
    <Align>
      <Avatar>
        <Initials>Max Mustermann</Initials>
      </Avatar>
      <Text>
        <b>Max Mustermann</b>
        Organisationsinhaber
      </Text>
    </Align>
    <Text>01.09.2024, 12:45</Text>
  </Header>

  <Content>
    <Text>
      Lorem ipsum dolor sit amet, consetetur sadipscing
      elitr, sed diam nonumy eirmod tempor invidunt ut
      labore et dolore magna aliquyam erat, sed diam
      voluptua. At vero eos et accusam et justo duo dolores
      et ea rebum. Stet clita kasd gubergren, no sea
      takimata sanctus est Lorem ipsum dolor sit amet.
    </Text>
  </Content>
</Message>;
24:T603,import { Message } from "@mittwald/flow-react-components/Message";
import { Header } from "@mittwald/flow-react-components/Header";
import {
  ContextMenu,
  ContextMenuTrigger,
} from "@mittwald/flow-react-components/ContextMenu";
import { Button } from "@mittwald/flow-react-components/Button";
import MenuItem from "@mittwald/flow-react-components/MenuItem";
import { Align } from "@mittwald/flow-react-components/Align";
import { Avatar } from "@mittwald/flow-react-components/Avatar";
import { Initials } from "@mittwald/flow-react-components/Initials";
import { Text } from "@mittwald/flow-react-components/Text";
import { Content } from "@mittwald/flow-react-components/Content";

<Message type="responder">
  <Header>
    <ContextMenuTrigger>
      <Button />
      <ContextMenu>
        <MenuItem>Bearbeiten</MenuItem>
        <MenuItem>Löschen</MenuItem>
      </ContextMenu>
    </ContextMenuTrigger>
    <Align>
      <Avatar>
        <Initials>Max Mustermann</Initials>
      </Avatar>
      <Text>
        <b>Max Mustermann</b>
        Organisationsinhaber
      </Text>
    </Align>
    <Text>01.09.2024, 12:45</Text>
  </Header>

  <Content>
    <Text>
      Lorem ipsum dolor sit amet, consetetur sadipscing
      elitr, sed diam nonumy eirmod tempor invidunt ut
      labore et dolore magna aliquyam erat, sed diam
      voluptua. At vero eos et accusam et justo duo dolores
      et ea rebum. Stet clita kasd gubergren, no sea
      takimata sanctus est Lorem ipsum dolor sit amet.
    </Text>
  </Content>
</Message>;
25:T606,import { Message } from "@mittwald/flow-react-components/Message";
import { Header } from "@mittwald/flow-react-components/Header";
import {
  ContextMenu,
  ContextMenuTrigger,
} from "@mittwald/flow-react-components/ContextMenu";
import { Button } from "@mittwald/flow-react-components/Button";
import MenuItem from "@mittwald/flow-react-components/MenuItem";
import { Align } from "@mittwald/flow-react-components/Align";
import { Avatar } from "@mittwald/flow-react-components/Avatar";
import { Initials } from "@mittwald/flow-react-components/Initials";
import { Text } from "@mittwald/flow-react-components/Text";
import { Content } from "@mittwald/flow-react-components/Content";

<Message orientation="right">
  <Header>
    <ContextMenuTrigger>
      <Button />
      <ContextMenu>
        <MenuItem>Bearbeiten</MenuItem>
        <MenuItem>Löschen</MenuItem>
      </ContextMenu>
    </ContextMenuTrigger>
    <Align>
      <Avatar>
        <Initials>Max Mustermann</Initials>
      </Avatar>
      <Text>
        <b>Max Mustermann</b>
        Organisationsinhaber
      </Text>
    </Align>
    <Text>01.09.2024, 12:45</Text>
  </Header>

  <Content>
    <Text>
      Lorem ipsum dolor sit amet, consetetur sadipscing
      elitr, sed diam nonumy eirmod tempor invidunt ut
      labore et dolore magna aliquyam erat, sed diam
      voluptua. At vero eos et accusam et justo duo dolores
      et ea rebum. Stet clita kasd gubergren, no sea
      takimata sanctus est Lorem ipsum dolor sit amet.
    </Text>
  </Content>
</Message>;
26:T4f4,import { useForm } from "react-hook-form";
import {
  Field,
  Form,
} from "@mittwald/flow-react-components/react-hook-form";
import { TextField } from "@mittwald/flow-react-components/TextField";
import { Label } from "@mittwald/flow-react-components/Label";
import { ActionGroup } from "@mittwald/flow-react-components/ActionGroup";
import { Button } from "@mittwald/flow-react-components/Button";
import { Section } from "@mittwald/flow-react-components/Section";
import { FieldDescription } from "@mittwald/flow-react-components/FieldDescription";

export default () => {
  interface Values {
    name: string;
  }
  const form = useForm<Values>();

  const handleOnSubmit = (values: Values) =>
    alert(JSON.stringify(values));

  return (
    <Form form={form} onSubmit={handleOnSubmit}>
      <Section>
        <Field
          name="name"
          rules={{
            required: "The project name is required",
          }}
        >
          <TextField>
            <Label>Name</Label>
            <FieldDescription>
              The name of the project
            </FieldDescription>
          </TextField>
        </Field>
        <ActionGroup>
          <Button type="submit">Save</Button>
        </ActionGroup>
      </Section>
    </Form>
  );
};
27:T616,import RadioGroup, {
  RadioButton,
} from "@mittwald/flow-react-components/RadioGroup";
import Text from "@mittwald/flow-react-components/Text";
import Content from "@mittwald/flow-react-components/Content";

<RadioGroup
  defaultValue="bookDomain"
  aria-label="Domain"
  l={[1, 1]}
>
  <RadioButton value="bookDomain">
    <Text>Domain buchen</Text>
    <Content>
      Du hast eine Wunsch-Domain? Kein Problem, wir helfen
      dir, die passende Domain für dich zu finden.
      <br />
      <strong>
        <small>8,28€ jährlich</small>
      </strong>
    </Content>
  </RadioButton>
  <RadioButton value="moveDomain">
    <Text>Domain umziehen</Text>
    <Content>
      Du hast schon eine Domain und möchtest sie von deinem
      jetzigen Anbieter zu mittwald umziehen.
      <br />
      <strong>
        <small>8,28€ jährlich</small>
      </strong>
    </Content>
  </RadioButton>
  <RadioButton value="virtualHost">
    <Text>Virtual Host einrichten</Text>
    <Content>
      Die Domain bleibt bei deinem bisherigen Anbieter, du
      kannst sie aber für deine Website in unserem mStudio
      verwenden.
      <br />
      <strong>
        <small>kostenlos</small>
      </strong>
    </Content>
  </RadioButton>
  <RadioButton value="subdomain">
    <Text>Subdomain anlegen</Text>
    <Content>
      Eine Subdomain von einer bereits vorhandenen Domain
      erstellen, um sie für dein Projekt zu verwenden.
      <br />
      <strong>
        <small>kostenlos</small>
      </strong>
    </Content>
  </RadioButton>
</RadioGroup>;
28:T573,import { Label } from "@mittwald/flow-react-components/Label";
import { useState } from "react";
import { FieldDescription } from "@mittwald/flow-react-components/FieldDescription";
import { ColumnLayout } from "@mittwald/flow-react-components/ColumnLayout";
import { TextField } from "@mittwald/flow-react-components/TextField";
import { Section } from "@mittwald/flow-react-components/Section";
import {
  Segment,
  SegmentedControl,
} from "@mittwald/flow-react-components/SegmentedControl";

export default () => {
  const [showContent, setShowContent] =
    useState<boolean>(false);

  return (
    <Section>
      <SegmentedControl
        defaultValue="lastschrift"
        onChange={() => setShowContent(!showContent)}
      >
        <Label>Zahlungsart</Label>
        <Segment value="lastschrift">Lastschrift</Segment>
        <Segment value="Rechnung">Rechnung</Segment>
        {showContent && (
          <FieldDescription>
            Wähle bitte eine Bankverbindung für die
            Bezahlung mit SEPA-Lastschrift aus.
          </FieldDescription>
        )}
      </SegmentedControl>
      {showContent && (
        <ColumnLayout>
          <TextField isRequired>
            <Label>Kontoinhaber</Label>
          </TextField>
          <TextField isRequired>
            <Label>IBAN</Label>
          </TextField>
        </ColumnLayout>
      )}
    </Section>
  );
};
29:T50e,import Button from "@mittwald/flow-react-components/Button";
import HeaderNavigation from "@mittwald/flow-react-components/HeaderNavigation";
import {
  IconLogout,
  IconNotification,
  IconSettings,
  IconSupport,
  IconSearch,
} from "@mittwald/flow-react-components/Icons";
import ContextMenu, {
  ContextMenuTrigger,
} from "@mittwald/flow-react-components/ContextMenu";
import Avatar from "@mittwald/flow-react-components/Avatar";
import Image from "@mittwald/flow-react-components/Image";
import Text from "@mittwald/flow-react-components/Text";
import MenuItem from "@mittwald/flow-react-components/MenuItem";

<HeaderNavigation aria-label="Header navigation">
  <Button>
    <IconSearch />
  </Button>
  <Button>
    <IconSupport />
  </Button>
  <Button>
    <IconNotification />
  </Button>
  <ContextMenuTrigger>
    <Button>
      <Avatar>
        <Image
          alt="Gopher"
          src="https://cdn.shopify.com/s/files/1/2022/6883/products/IMG_2002_250x250@2x.JPG?v=1538235544"
        />
      </Avatar>
    </Button>
    <ContextMenu>
      <MenuItem>
        <IconSettings />
        <Text>Profil</Text>
      </MenuItem>
      <MenuItem>
        <IconLogout />
        <Text>Logout</Text>
      </MenuItem>
    </ContextMenu>
  </ContextMenuTrigger>
</HeaderNavigation>;
2a:T5cf,import Tabs, {
  Tab,
  TabTitle,
} from "@mittwald/flow-react-components/Tabs";
import Section from "@mittwald/flow-react-components/Section";
import Heading from "@mittwald/flow-react-components/Heading";
import TextField from "@mittwald/flow-react-components/TextField";
import Label from "@mittwald/flow-react-components/Label";
import LabeledValue from "@mittwald/flow-react-components/LabeledValue";
import Text from "@mittwald/flow-react-components/Text";
import Header from "@mittwald/flow-react-components/Header";
import Switch from "@mittwald/flow-react-components/Switch";

<Tabs>
  <Tab>
    <TabTitle>Allgemein</TabTitle>
    <Section>
      <Heading>Allgemein</Heading>
      <TextField defaultValue="example@mittwald.de">
        <Label>E-Mail-Adresse</Label>
      </TextField>
    </Section>
  </Tab>
  <Tab id="storage">
    <TabTitle>Speicherplatz</TabTitle>
    <Section>
      <Heading>Speicherplatz</Heading>
      <LabeledValue>
        <Label>Verfügbarer Speicherplatz</Label>
        <Text>2.4 GB</Text>
      </LabeledValue>
    </Section>
  </Tab>
  <Tab>
    <TabTitle>Spamschutz</TabTitle>
    <Section>
      <Header>
        <Heading>Spamschutz</Heading>
        <Switch>Spamfilter</Switch>
      </Header>
      <Text>
        Der Spamfilter schützt dich vor ungewollten E-Mails.
        Niemand will Müll in seinem Postfach, daher
        empfehlen wir den Spamschutz immer aktiviert zu
        lassen.
      </Text>
    </Section>
  </Tab>
</Tabs>;
2b:T776,import Modal from "@mittwald/flow-react-components/Modal";
import Content from "@mittwald/flow-react-components/Content";
import Text from "@mittwald/flow-react-components/Text";
import TextField from "@mittwald/flow-react-components/TextField";
import Label from "@mittwald/flow-react-components/Label";
import ActionGroup from "@mittwald/flow-react-components/ActionGroup";
import Button from "@mittwald/flow-react-components/Button";
import Heading from "@mittwald/flow-react-components/Heading";
import Action from "@mittwald/flow-react-components/Action";
import { sleepLong } from "@/content/03-components/actions/action/examples/lib";
import { useOverlayController } from "@mittwald/flow-react-components/controller";
import Section from "@mittwald/flow-react-components/Section";

export default () => {
  const controller = useOverlayController("Modal");

  return (
    <>
      <Button onPress={controller.open}>
        Modal öffnen
      </Button>

      <Modal controller={controller}>
        <Heading>Organisation anlegen</Heading>
        <Content>
          <Section>
            <Text>
              Eine Organisation kannst du dir wie ein
              Unternehmen vorstellen. An diesem Ort
              verwaltest du deine Mitarbeiter,
              Zahlungsmodalitäten und kannst deine
              Rechnungen einsehen.
            </Text>
            <TextField isRequired>
              <Label>Organisationsname</Label>
            </TextField>
          </Section>
        </Content>
        <ActionGroup>
          <Action closeOverlay="Modal">
            <Action action={sleepLong}>
              <Button color="accent">
                Organisation anlegen
              </Button>
            </Action>
            <Button variant="soft" color="secondary">
              Abbrechen
            </Button>
          </Action>
        </ActionGroup>
      </Modal>
    </>
  );
};
2c:T625,import Modal, {
  ModalTrigger,
} from "@mittwald/flow-react-components/Modal";
import Content from "@mittwald/flow-react-components/Content";
import Text from "@mittwald/flow-react-components/Text";
import TextField from "@mittwald/flow-react-components/TextField";
import Label from "@mittwald/flow-react-components/Label";
import ActionGroup from "@mittwald/flow-react-components/ActionGroup";
import Button from "@mittwald/flow-react-components/Button";
import Heading from "@mittwald/flow-react-components/Heading";
import Action from "@mittwald/flow-react-components/Action";
import { sleepLong } from "@/content/03-components/actions/action/examples/lib";
import Section from "@mittwald/flow-react-components/Section";

<ModalTrigger>
  <Button>Modal öffnen</Button>
  <Modal>
    <Heading>Organisation anlegen</Heading>
    <Content>
      <Section>
        <Text>
          Eine Organisation kannst du dir wie ein
          Unternehmen vorstellen. An diesem Ort verwaltest
          du deine Mitarbeiter, Zahlungsmodalitäten und
          kannst deine Rechnungen einsehen.
        </Text>
        <TextField isRequired>
          <Label>Organisationsname</Label>
        </TextField>
      </Section>
    </Content>
    <ActionGroup>
      <Action closeOverlay="Modal">
        <Action action={sleepLong}>
          <Button color="accent">
            Organisation anlegen
          </Button>
        </Action>
        <Button variant="soft" color="secondary">
          Abbrechen
        </Button>
      </Action>
    </ActionGroup>
  </Modal>
</ModalTrigger>;
2d:T451,import Text from "@mittwald/flow-react-components/Text";
import TextField from "@mittwald/flow-react-components/TextField";
import Label from "@mittwald/flow-react-components/Label";
import ActionGroup from "@mittwald/flow-react-components/ActionGroup";
import Button from "@mittwald/flow-react-components/Button";
import Heading from "@mittwald/flow-react-components/Heading";
import Action from "@mittwald/flow-react-components/Action";
import { IconEmail } from "@mittwald/flow-react-components/Icons";

<StaticModal>
  <div className="flow--modal--content">
    <Heading>
      <IconEmail />
      E-Mail-Adresse anlegen
    </Heading>
    <Text>
      Erstelle dir eine E-Mail-Adresse mit Postfach
      Speicherplatz.
    </Text>
    <TextField type="email">
      <Label>E-Mail-Adresse</Label>
    </TextField>
  </div>
  <ActionGroup className="flow--modal--action-group">
    <Action closeOverlay="Modal">
      <Button color="accent">E-Mail-Adresse anlegen</Button>
      <Button variant="soft" color="secondary">
        Abbrechen
      </Button>
    </Action>
  </ActionGroup>
</StaticModal>;
2e:T755,import Modal from "@mittwald/flow-react-components/Modal";
import Content from "@mittwald/flow-react-components/Content";
import Label from "@mittwald/flow-react-components/Label";
import ActionGroup from "@mittwald/flow-react-components/ActionGroup";
import Button from "@mittwald/flow-react-components/Button";
import Heading from "@mittwald/flow-react-components/Heading";
import Action from "@mittwald/flow-react-components/Action";
import { useOverlayController } from "@mittwald/flow-react-components/controller";
import { useForm } from "react-hook-form";
import {
  Form,
  typedField,
} from "@mittwald/flow-react-components/react-hook-form";
import { TextField } from "@mittwald/flow-react-components/TextField";

export default () => {
  const controller = useOverlayController("Modal");

  const form = useForm<{ name: string }>();

  const Field = typedField(form);

  const handleOnSubmit = async () => {
    // submit form

    controller.close();
  };

  return (
    <>
      <Button onPress={controller.open}>
        Modal öffnen
      </Button>

      <Modal controller={controller}>
        <Form form={form} onSubmit={handleOnSubmit}>
          <Heading>Organisation anlegen</Heading>

          <Content>
            <Field
              name="name"
              rules={{
                required: "Bitte gib einen Namen ein",
              }}
            >
              <TextField>
                <Label>Name</Label>
              </TextField>
            </Field>
          </Content>

          <ActionGroup>
            <Button color="accent" type="submit">
              Speichern
            </Button>
            <Action closeOverlay="Modal">
              <Button color="secondary" variant="soft">
                Abbrechen
              </Button>
            </Action>
          </ActionGroup>
        </Form>
      </Modal>
    </>
  );
};
2f:T628,import Modal, {
  ModalTrigger,
} from "@mittwald/flow-react-components/Modal";
import Content from "@mittwald/flow-react-components/Content";
import Text from "@mittwald/flow-react-components/Text";
import TextField from "@mittwald/flow-react-components/TextField";
import Label from "@mittwald/flow-react-components/Label";
import ActionGroup from "@mittwald/flow-react-components/ActionGroup";
import Button from "@mittwald/flow-react-components/Button";
import Heading from "@mittwald/flow-react-components/Heading";
import Action from "@mittwald/flow-react-components/Action";
import { sleepLong } from "@/content/03-components/actions/action/examples/lib";
import Section from "@mittwald/flow-react-components/Section";

<ModalTrigger>
  <Button>OffCanvas öffnen</Button>
  <Modal offCanvas>
    <Heading>Organisation anlegen</Heading>
    <Content>
      <Section>
        <Text>
          Eine Organisation kannst du dir wie ein
          Unternehmen vorstellen. An diesem Ort verwaltest
          du deine Mitarbeiter, Zahlungsmodalitäten und
          kannst deine Rechnungen einsehen.
        </Text>
        <TextField>
          <Label>Organisationsname</Label>
        </TextField>
      </Section>
    </Content>
    <ActionGroup>
      <Action closeOverlay="Modal">
        <Action action={sleepLong}>
          <Button color="accent">
            Organisation anlegen
          </Button>
        </Action>
        <Button variant="soft" color="secondary">
          Abbrechen
        </Button>
      </Action>
    </ActionGroup>
  </Modal>
</ModalTrigger>;
30:T2871,import Modal, {
  ModalTrigger,
} from "@mittwald/flow-react-components/Modal";
import Content from "@mittwald/flow-react-components/Content";
import Text from "@mittwald/flow-react-components/Text";
import TextField from "@mittwald/flow-react-components/TextField";
import Label from "@mittwald/flow-react-components/Label";
import ActionGroup from "@mittwald/flow-react-components/ActionGroup";
import Button from "@mittwald/flow-react-components/Button";
import Heading from "@mittwald/flow-react-components/Heading";
import Action from "@mittwald/flow-react-components/Action";
import { sleepLong } from "@/content/03-components/actions/action/examples/lib";
import Section from "@mittwald/flow-react-components/Section";
import {
  IconBackup,
  IconSettings,
  IconSshSftp,
} from "@mittwald/flow-react-components/Icons";
import {
  Option,
  Select,
} from "@mittwald/flow-react-components/Select";
import ColumnLayout from "@mittwald/flow-react-components/ColumnLayout";
import { Switch } from "@mittwald/flow-react-components/Switch";
import Link from "@mittwald/flow-react-components/Link";
import { DatePicker } from "@mittwald/flow-react-components/DatePicker";
import FieldDescription from "@mittwald/flow-react-components/FieldDescription";
import RadioGroup, {
  RadioButton,
} from "@mittwald/flow-react-components/RadioGroup";
import {
  Segment,
  SegmentedControl,
} from "@mittwald/flow-react-components/SegmentedControl";

export default () => {
  return (
    <Row>
      <ModalTrigger>
        <Button>Modal S</Button>
        <Modal size="s">
          <Heading>
            Möchtest du die Bestellung wirklich abbrechen?
          </Heading>
          <Content>
            <Section>
              <Text>
                Deine eingegebenen Daten werden nicht
                gespeichert.
              </Text>
            </Section>
          </Content>
          <ActionGroup>
            <Action closeOverlay="Modal">
              <Action action={sleepLong}>
                <Button color="danger">
                  Bestellung abbrechen
                </Button>
              </Action>
              <Button variant="soft" color="secondary">
                Bestellung fortsetzen
              </Button>
            </Action>
          </ActionGroup>
        </Modal>
      </ModalTrigger>

      <ModalTrigger>
        <Button>Modal M</Button>
        <Modal size="m">
          <Heading>
            <IconBackup />
            <Text>Backup anlegen</Text>
          </Heading>
          <Content>
            <Section>
              <Text>
                Das Backup enthält alle Dateien deines
                Dateisystems und den Inhalt deiner
                Datenbanken. Dei Erstellung eines Backups
                dauert in der Regel einige Minuten.
              </Text>
              <ColumnLayout m={[1, 1]}>
                <TextField>
                  <Label>Beschreibung</Label>
                </TextField>
                <Select isRequired>
                  <Label>Speicherdauer</Label>
                  <Option>7 Tage</Option>
                  <Option>14 Tage</Option>
                  <Option>30 Tage</Option>
                  <Option>6 Monate</Option>
                  <Option>12 Monate</Option>
                </Select>
              </ColumnLayout>
            </Section>
          </Content>
          <ActionGroup>
            <Action closeOverlay="Modal">
              <Action action={sleepLong}>
                <Button color="accent">
                  Backup anlegen
                </Button>
              </Action>
              <Button variant="soft" color="secondary">
                Abbrechen
              </Button>
            </Action>
          </ActionGroup>
        </Modal>
      </ModalTrigger>

      <ModalTrigger>
        <Button>OffCanvas S</Button>
        <Modal size="s" offCanvas>
          <Heading>
            <IconSettings />
            Dashboard-Einstellungen
          </Heading>
          <Content>
            <Section>
              <Heading>Widget-Sichtbarkeit</Heading>
              <Text>
                Aktiviere und deaktiviere die Widgets, die
                du wirklich benötigst. So bestimmst du
                selbst, wie dein Dashboard aussehen soll.
              </Text>
              <div
                style={{
                  display: "flex",
                  flexDirection: "column",
                  gap: "32px",
                }}
              >
                <ColumnLayout s={[1]} gap="s">
                  <Switch>Erste Schritte</Switch>
                  <Text>
                    Im Onboarding erklären wir dir alles
                    Wichtige im mStudio.
                  </Text>
                  <Link>Erste Schritte starten</Link>
                </ColumnLayout>

                <ColumnLayout s={[1]} gap="s">
                  <Switch defaultSelected>
                    mittwald Status
                  </Switch>
                  <Text>
                    Wir informieren dich über Wartung und
                    Störungen.
                  </Text>
                </ColumnLayout>

                <ColumnLayout s={[1]} gap="s">
                  <Switch>mittwald Produkt-Slider</Switch>
                  <Text>
                    Im Produkt-Slider erhälst du
                    Informationen und einen schnellen
                    Einstieg in weitere mittwald Produkte.
                  </Text>
                </ColumnLayout>

                <ColumnLayout s={[1]} gap="s">
                  <Switch defaultSelected>
                    Neue Features
                  </Switch>
                  <Text>
                    Wir entwickeln das mStudio stetig weiter
                    Alle kommenden Features findest du auf
                    der <Link>Roadmap</Link>.
                  </Text>
                  <Link>Changelog öffnen</Link>
                </ColumnLayout>

                <ColumnLayout s={[1]} gap="s">
                  <Switch defaultSelected>
                    Neue Blogbeiträge
                  </Switch>
                  <Text>
                    Wir zeigen dir den neuesten mittwald
                    Blogartikel an.
                  </Text>
                  <Link>Blogartikel öffnen</Link>
                </ColumnLayout>

                <ColumnLayout s={[1]} gap="s">
                  <Switch>Lastschift Hinweis</Switch>
                  <Text>
                    Wir informieren über die neue
                    Möglichkeit, deine Rechnungen per
                    Lastschrift zu bezahlen.
                  </Text>
                </ColumnLayout>
              </div>
            </Section>
          </Content>
          <ActionGroup>
            <Action closeOverlay="Modal">
              <Button variant="soft" color="secondary">
                Schließen
              </Button>
            </Action>
          </ActionGroup>
        </Modal>
      </ModalTrigger>

      <ModalTrigger>
        <Button>OffCanvas M</Button>
        <Modal size="m" offCanvas>
          <Heading>
            <IconSshSftp />
            SFTP-Benutzer anlegen
          </Heading>
          <Content>
            <Section>
              <Heading>Beschreibung</Heading>
              <Text>
                Mit einem SFTP-Benutzer kannst du dich mit
                deinem Projekt verbinden, um z.B. Dateien
                hochzuladen.
              </Text>
              <ColumnLayout m={[1, 1]}>
                <TextField isRequired>
                  <Label>Bezeichnung</Label>
                </TextField>
                <DatePicker>
                  <Label>Ablaufdatum</Label>
                  <FieldDescription>
                    Nach diesem Datum wird der SFTP-Benutzer
                    gelöscht.
                  </FieldDescription>
                </DatePicker>
              </ColumnLayout>
            </Section>
            <Section>
              <Heading>Authentifizierung</Heading>
              <Text>
                Wähle zwischen der Authentifikation per
                Passwort oder über einen SSH-Key.
              </Text>
              <SegmentedControl value="password">
                <Segment value="password">Passwort</Segment>
                <Segment value="ssh">SSH-Key</Segment>
              </SegmentedControl>
              <ColumnLayout s={[1, 1]}>
                <TextField isRequired>
                  <Label>Passwort</Label>
                </TextField>
              </ColumnLayout>
            </Section>
            <Section>
              <Heading>Berechtigungen</Heading>
              <Text>
                Wähle hier die Berechtigungen aus, mit denen
                der SFTP-Benutzer zugreifen darf.
              </Text>
              <RadioGroup
                s={[1, 1]}
                defaultValue="read&write"
              >
                <RadioButton value="write">
                  <Text>Lesezugriff</Text>
                  <Content>
                    Der SFTP-Benutzer kann Dateien einsehen
                    und herunterladen.
                  </Content>
                </RadioButton>
                <RadioButton value="read&write">
                  <Text>Lese- und Schreibzugriff</Text>
                  <Content>
                    Der SFTP-Benutzer kann Dateien einsehen,
                    bearbeiten, hoch und herunterladen.
                  </Content>
                </RadioButton>
              </RadioGroup>
            </Section>
            <Section>
              <Heading>Verzeichnisauswahl</Heading>
              <Text>
                Hier legst du das Verzeichnis fest, auf das
                der SFTP-Benutzer Zugriff hat.
              </Text>
              <TextField isRequired>
                <Label>Pfad</Label>
              </TextField>
            </Section>
          </Content>
          <ActionGroup>
            <Action closeOverlay="Modal">
              <Action action={sleepLong}>
                <Button color="accent">
                  SFTP-Benutzer anlegen
                </Button>
              </Action>
              <Button variant="soft" color="secondary">
                Abbrechen
              </Button>
            </Action>
          </ActionGroup>
        </Modal>
      </ModalTrigger>
    </Row>
  );
};
31:T503,import Text from "@mittwald/flow-react-components/Text";
import TextField from "@mittwald/flow-react-components/TextField";
import Label from "@mittwald/flow-react-components/Label";
import ActionGroup from "@mittwald/flow-react-components/ActionGroup";
import Button from "@mittwald/flow-react-components/Button";
import Heading from "@mittwald/flow-react-components/Heading";
import Action from "@mittwald/flow-react-components/Action";
import { Section } from "@mittwald/flow-react-components/Section";

<StaticModal>
  <header className="flow--modal--header">
    <Heading>Organisation anlegen</Heading>
  </header>

  <div className="flow--modal--content">
    <Section>
      <Text>
        Eine Organisation kannst du dir wie ein Unternehmen
        vorstellen. An diesem Ort verwaltest du deine
        Mitarbeiter, Zahlungsmodalitäten und kannst deine
        Rechnungen einsehen.
      </Text>
      <TextField>
        <Label>Organisationsname</Label>
      </TextField>
    </Section>
  </div>
  <ActionGroup className="flow--modal--action-group">
    <Action closeOverlay="Modal">
      <Button color="accent">Organisation anlegen</Button>
      <Button variant="soft" color="secondary">
        Abbrechen
      </Button>
    </Action>
  </ActionGroup>
</StaticModal>;
32:T4d7,import Alert from "@mittwald/flow-react-components/Alert";
import Heading from "@mittwald/flow-react-components/Heading";
import Content from "@mittwald/flow-react-components/Content";

<Row>
  <Alert status="info">
    <Heading>E-Mail-Adresse wurde archiviert</Heading>
    <Content>
      Da deine Domain gelöscht wurde, wurde diese
      E-Mail-Adresse archiviert. Um E-Mails empfangen und
      senden zu können musst du die Adresse wieder
      umbenennen.
    </Content>
  </Alert>

  <Alert status="warning">
    <Heading>Dein Speicher ist fast voll</Heading>
    <Content>
      Dein Speicher ist zu über 80% belegt. Wir empfehlen
      dir deinen Speicherplatz zu erweitern, um Problemen
      vorzubeugen.
    </Content>
  </Alert>

  <Alert status="danger">
    <Heading>
      Es konnte kein SSL-Zertifikat ausgestellt werden
    </Heading>
    <Content>
      Für diese Domain konnte kein SSL-Zertifikat
      ausgestellt werden, da die Domain per IP nicht auf
      deine Server-IP zeigt.
    </Content>
  </Alert>

  <Alert status="success">
    <Heading>Deine App wurde aktualisiert</Heading>
    <Content>
      Deine App wurde erfolgreich auf die neueste Version
      aktualisiert.
    </Content>
  </Alert>
</Row>;
33:T529,import {
  List,
  ListItem,
  ListItemView,
  ListStaticData,
} from "@mittwald/flow-react-components/List";
import {
  type Domain,
  domains,
} from "@/content/03-components/structure/list/examples/domainApi";
import Avatar from "@mittwald/flow-react-components/Avatar";
import Heading from "@mittwald/flow-react-components/Heading";
import Text from "@mittwald/flow-react-components/Text";
import {
  IconDomain,
  IconSubdomain,
} from "@mittwald/flow-react-components/Icons";
import AlertBadge from "@mittwald/flow-react-components/AlertBadge";
import Content from "@mittwald/flow-react-components/Content";

<List batchSize={2} accordion>
  <ListStaticData data={domains} />
  <ListItem<Domain>>
    {(domain) => (
      <ListItemView>
        <Avatar
          color={domain.type === "Domain" ? "blue" : "teal"}
        >
          {domain.type === "Domain" ? (
            <IconDomain />
          ) : (
            <IconSubdomain />
          )}
        </Avatar>
        <Heading>
          {domain.hostname}
          {!domain.verified && (
            <AlertBadge status="warning">
              Unverifiziert
            </AlertBadge>
          )}
        </Heading>
        <Text>{domain.type}</Text>
        <Content slot="bottom">Mehr Inhalt</Content>
      </ListItemView>
    )}
  </ListItem>
</List>;
34:T832,import { typedList } from "@mittwald/flow-react-components/List";
import {
  type Domain,
  domains,
} from "@/content/03-components/structure/list/examples/domainApi";
import Avatar from "@mittwald/flow-react-components/Avatar";
import Heading from "@mittwald/flow-react-components/Heading";
import Text from "@mittwald/flow-react-components/Text";
import ContextMenu from "@mittwald/flow-react-components/ContextMenu";
import {
  IconDomain,
  IconDownload,
  IconSubdomain,
} from "@mittwald/flow-react-components/Icons";
import AlertBadge from "@mittwald/flow-react-components/AlertBadge";
import MenuItem from "@mittwald/flow-react-components/MenuItem";
import Button from "@mittwald/flow-react-components/Button";
import ActionGroup from "@mittwald/flow-react-components/ActionGroup";

export default () => {
  const DomainList = typedList<Domain>();

  return (
    <DomainList.List batchSize={5}>
      <DomainList.StaticData data={domains} />
      <ActionGroup>
        <Button
          color="secondary"
          variant="soft"
          slot="secondary"
        >
          <IconDownload />
        </Button>
        <Button color="accent">Anlegen</Button>
      </ActionGroup>
      <DomainList.Item>
        {(domain) => (
          <DomainList.ItemView>
            <Avatar
              color={
                domain.type === "Domain" ? "blue" : "teal"
              }
            >
              {domain.type === "Domain" ? (
                <IconDomain />
              ) : (
                <IconSubdomain />
              )}
            </Avatar>
            <Heading>
              {domain.hostname}
              {!domain.verified && (
                <AlertBadge status="warning">
                  Unverifiziert
                </AlertBadge>
              )}
            </Heading>
            <Text>{domain.type}</Text>

            <ContextMenu>
              <MenuItem>Details anzeigen</MenuItem>
              <MenuItem>Löschen</MenuItem>
            </ContextMenu>
          </DomainList.ItemView>
        )}
      </DomainList.Item>
    </DomainList.List>
  );
};
35:Te95,import { typedList } from "@mittwald/flow-react-components/List";
import {
  type Domain,
  domains,
} from "@/content/03-components/structure/list/examples/domainApi";
import Avatar from "@mittwald/flow-react-components/Avatar";
import Heading from "@mittwald/flow-react-components/Heading";
import Text from "@mittwald/flow-react-components/Text";
import ContextMenu from "@mittwald/flow-react-components/ContextMenu";
import {
  IconDomain,
  IconDownload,
  IconSubdomain,
} from "@mittwald/flow-react-components/Icons";
import AlertBadge from "@mittwald/flow-react-components/AlertBadge";
import MenuItem from "@mittwald/flow-react-components/MenuItem";
import Button from "@mittwald/flow-react-components/Button";
import ActionGroup from "@mittwald/flow-react-components/ActionGroup";

export default () => {
  const DomainList = typedList<Domain>();

  return (
    <DomainList.List batchSize={5}>
      <DomainList.StaticData data={domains} />
      <ActionGroup>
        <Button
          color="secondary"
          variant="soft"
          slot="secondary"
        >
          <IconDownload />
        </Button>
        <Button color="accent">Anlegen</Button>
      </ActionGroup>
      <DomainList.Search />
      <DomainList.Filter
        property="type"
        mode="some"
        name="Type"
      />
      <DomainList.Sorting
        property="hostname"
        name="Domain A bis Z"
        direction="asc"
      />
      <DomainList.Sorting
        property="hostname"
        name="Domain Z bis A"
        direction="desc"
      />
      <DomainList.Sorting
        property="type"
        name="Type A bis Z"
        direction="asc"
      />
      <DomainList.Sorting
        property="type"
        name="Type Z bis A"
        direction="desc"
      />
      <DomainList.Table>
        <DomainList.TableHeader>
          <DomainList.TableColumn>
            Name
          </DomainList.TableColumn>
          <DomainList.TableColumn>
            Type
          </DomainList.TableColumn>
          <DomainList.TableColumn>
            TLD
          </DomainList.TableColumn>
          <DomainList.TableColumn>
            Hostname
          </DomainList.TableColumn>
        </DomainList.TableHeader>

        <DomainList.TableBody>
          <DomainList.TableRow>
            <DomainList.TableCell>
              {(domain) => domain.domain}
            </DomainList.TableCell>
            <DomainList.TableCell>
              {(domain) => domain.type}
            </DomainList.TableCell>
            <DomainList.TableCell>
              {(domain) => domain.tld}
            </DomainList.TableCell>
            <DomainList.TableCell>
              {(domain) => domain.hostname}
            </DomainList.TableCell>
          </DomainList.TableRow>
        </DomainList.TableBody>
      </DomainList.Table>
      <DomainList.Item>
        {(domain) => (
          <DomainList.ItemView>
            <Avatar
              color={
                domain.type === "Domain" ? "blue" : "teal"
              }
            >
              {domain.type === "Domain" ? (
                <IconDomain />
              ) : (
                <IconSubdomain />
              )}
            </Avatar>
            <Heading>
              {domain.hostname}
              {!domain.verified && (
                <AlertBadge status="warning">
                  Unverifiziert
                </AlertBadge>
              )}
            </Heading>
            <Text>{domain.type}</Text>

            <ContextMenu>
              <MenuItem>Details anzeigen</MenuItem>
              <MenuItem>Löschen</MenuItem>
            </ContextMenu>
          </DomainList.ItemView>
        )}
      </DomainList.Item>
    </DomainList.List>
  );
};
36:T710,import { typedList } from "@mittwald/flow-react-components/List";
import {
  type Domain,
  domains,
} from "@/content/03-components/structure/list/examples/domainApi";
import Avatar from "@mittwald/flow-react-components/Avatar";
import Heading from "@mittwald/flow-react-components/Heading";
import Text from "@mittwald/flow-react-components/Text";
import ContextMenu from "@mittwald/flow-react-components/ContextMenu";
import {
  IconDomain,
  IconSubdomain,
} from "@mittwald/flow-react-components/Icons";
import AlertBadge from "@mittwald/flow-react-components/AlertBadge";
import MenuItem from "@mittwald/flow-react-components/MenuItem";

export default () => {
  const DomainList = typedList<Domain>();

  return (
    <DomainList.List batchSize={5}>
      <DomainList.StaticData data={domains} />
      <DomainList.Filter
        property="type"
        mode="some"
        name="Type"
      />
      <DomainList.Item>
        {(domain) => (
          <DomainList.ItemView>
            <Avatar
              color={
                domain.type === "Domain" ? "blue" : "teal"
              }
            >
              {domain.type === "Domain" ? (
                <IconDomain />
              ) : (
                <IconSubdomain />
              )}
            </Avatar>
            <Heading>
              {domain.hostname}
              {!domain.verified && (
                <AlertBadge status="warning">
                  Unverifiziert
                </AlertBadge>
              )}
            </Heading>
            <Text>{domain.type}</Text>

            <ContextMenu>
              <MenuItem>Details anzeigen</MenuItem>
              <MenuItem>Löschen</MenuItem>
            </ContextMenu>
          </DomainList.ItemView>
        )}
      </DomainList.Item>
    </DomainList.List>
  );
};
37:T7e0,import { typedList } from "@mittwald/flow-react-components/List";
import {
  type Domain,
  domains,
} from "@/content/03-components/structure/list/examples/domainApi";
import Avatar from "@mittwald/flow-react-components/Avatar";
import Heading from "@mittwald/flow-react-components/Heading";
import Text from "@mittwald/flow-react-components/Text";
import ContextMenu from "@mittwald/flow-react-components/ContextMenu";
import {
  IconDomain,
  IconSubdomain,
} from "@mittwald/flow-react-components/Icons";
import AlertBadge from "@mittwald/flow-react-components/AlertBadge";
import MenuItem from "@mittwald/flow-react-components/MenuItem";

export default () => {
  const DomainList = typedList<Domain>();

  return (
    <DomainList.List batchSize={2}>
      <DomainList.StaticData data={domains} />
      <DomainList.Filter
        property="verified"
        mode="some"
        name="Status"
        values={["Verifiziert", "Unverifiziert"]}
        matcher={(filterValue, verified) => {
          return filterValue === "Verifiziert"
            ? verified
            : !verified;
        }}
      />
      <DomainList.Item>
        {(domain) => (
          <DomainList.ItemView>
            <Avatar
              color={
                domain.type === "Domain" ? "blue" : "teal"
              }
            >
              {domain.type === "Domain" ? (
                <IconDomain />
              ) : (
                <IconSubdomain />
              )}
            </Avatar>
            <Heading>
              {domain.hostname}
              {!domain.verified && (
                <AlertBadge status="warning">
                  Unverifiziert
                </AlertBadge>
              )}
            </Heading>
            <Text>{domain.type}</Text>

            <ContextMenu>
              <MenuItem>Details anzeigen</MenuItem>
              <MenuItem>Löschen</MenuItem>
            </ContextMenu>
          </DomainList.ItemView>
        )}
      </DomainList.Item>
    </DomainList.List>
  );
};
38:T8c5,import { typedList } from "@mittwald/flow-react-components/List";
import {
  type Domain,
  domains,
} from "@/content/03-components/structure/list/examples/domainApi";
import Avatar from "@mittwald/flow-react-components/Avatar";
import Heading from "@mittwald/flow-react-components/Heading";
import Text from "@mittwald/flow-react-components/Text";
import ContextMenu from "@mittwald/flow-react-components/ContextMenu";
import {
  IconDomain,
  IconSubdomain,
} from "@mittwald/flow-react-components/Icons";
import AlertBadge from "@mittwald/flow-react-components/AlertBadge";
import MenuItem from "@mittwald/flow-react-components/MenuItem";

export default () => {
  const DomainList = typedList<Domain>();

  return (
    <DomainList.List batchSize={2}>
      <DomainList.StaticData data={domains} />
      <DomainList.Filter
        property="verified"
        mode="some"
        name="Status"
        values={["Verifiziert", "Unverifiziert"]}
        matcher={(filterValue, verified) => {
          return filterValue === "Verifiziert"
            ? verified
            : !verified;
        }}
      />
      <DomainList.Filter
        property="id"
        mode="some"
        name="Filter"
        values={[
          "SSL Zertifikat abgelaufen",
          "Kein Ziel hinterlegt",
        ]}
        matcher={() => true}
      />
      <DomainList.Item>
        {(domain) => (
          <DomainList.ItemView>
            <Avatar
              color={
                domain.type === "Domain" ? "blue" : "teal"
              }
            >
              {domain.type === "Domain" ? (
                <IconDomain />
              ) : (
                <IconSubdomain />
              )}
            </Avatar>
            <Heading>
              {domain.hostname}
              {!domain.verified && (
                <AlertBadge status="warning">
                  Unverifiziert
                </AlertBadge>
              )}
            </Heading>
            <Text>{domain.type}</Text>

            <ContextMenu>
              <MenuItem>Details anzeigen</MenuItem>
              <MenuItem>Löschen</MenuItem>
            </ContextMenu>
          </DomainList.ItemView>
        )}
      </DomainList.Item>
    </DomainList.List>
  );
};
39:T589,import {
  List,
  ListItem,
  ListItemView,
  ListStaticData,
} from "@mittwald/flow-react-components/List";
import {
  type Domain,
  domains,
} from "@/content/03-components/structure/list/examples/domainApi";
import Avatar from "@mittwald/flow-react-components/Avatar";
import Heading from "@mittwald/flow-react-components/Heading";
import Text from "@mittwald/flow-react-components/Text";
import ContextMenu, {
  MenuItem,
} from "@mittwald/flow-react-components/ContextMenu";
import {
  IconDomain,
  IconSubdomain,
} from "@mittwald/flow-react-components/Icons";
import AlertBadge from "@mittwald/flow-react-components/AlertBadge";

<List batchSize={2}>
  <ListStaticData data={domains} />
  <ListItem<Domain>>
    {(domain) => (
      <ListItemView>
        <Avatar
          color={domain.type === "Domain" ? "blue" : "teal"}
        >
          {domain.type === "Domain" ? (
            <IconDomain />
          ) : (
            <IconSubdomain />
          )}
        </Avatar>
        <Heading>
          {domain.hostname}
          {!domain.verified && (
            <AlertBadge status="warning">
              Unverifiziert
            </AlertBadge>
          )}
        </Heading>
        <Text>{domain.type}</Text>

        <ContextMenu>
          <MenuItem>Details anzeigen</MenuItem>
          <MenuItem>Löschen</MenuItem>
        </ContextMenu>
      </ListItemView>
    )}
  </ListItem>
</List>;
3a:Te95,import { typedList } from "@mittwald/flow-react-components/List";
import {
  type Domain,
  domains,
} from "@/content/03-components/structure/list/examples/domainApi";
import Avatar from "@mittwald/flow-react-components/Avatar";
import Heading from "@mittwald/flow-react-components/Heading";
import Text from "@mittwald/flow-react-components/Text";
import ContextMenu from "@mittwald/flow-react-components/ContextMenu";
import {
  IconDomain,
  IconDownload,
  IconSubdomain,
} from "@mittwald/flow-react-components/Icons";
import AlertBadge from "@mittwald/flow-react-components/AlertBadge";
import MenuItem from "@mittwald/flow-react-components/MenuItem";
import Button from "@mittwald/flow-react-components/Button";
import ActionGroup from "@mittwald/flow-react-components/ActionGroup";

export default () => {
  const DomainList = typedList<Domain>();

  return (
    <DomainList.List batchSize={2}>
      <DomainList.StaticData data={domains} />
      <ActionGroup>
        <Button
          color="secondary"
          variant="soft"
          slot="secondary"
        >
          <IconDownload />
        </Button>
        <Button color="accent">Anlegen</Button>
      </ActionGroup>
      <DomainList.Search />
      <DomainList.Filter
        property="type"
        mode="some"
        name="Type"
      />
      <DomainList.Sorting
        property="hostname"
        name="Domain A bis Z"
        direction="asc"
      />
      <DomainList.Sorting
        property="hostname"
        name="Domain Z bis A"
        direction="desc"
      />
      <DomainList.Sorting
        property="type"
        name="Type A bis Z"
        direction="asc"
      />
      <DomainList.Sorting
        property="type"
        name="Type Z bis A"
        direction="desc"
      />
      <DomainList.Table>
        <DomainList.TableHeader>
          <DomainList.TableColumn>
            Name
          </DomainList.TableColumn>
          <DomainList.TableColumn>
            Type
          </DomainList.TableColumn>
          <DomainList.TableColumn>
            TLD
          </DomainList.TableColumn>
          <DomainList.TableColumn>
            Hostname
          </DomainList.TableColumn>
        </DomainList.TableHeader>

        <DomainList.TableBody>
          <DomainList.TableRow>
            <DomainList.TableCell>
              {(domain) => domain.domain}
            </DomainList.TableCell>
            <DomainList.TableCell>
              {(domain) => domain.type}
            </DomainList.TableCell>
            <DomainList.TableCell>
              {(domain) => domain.tld}
            </DomainList.TableCell>
            <DomainList.TableCell>
              {(domain) => domain.hostname}
            </DomainList.TableCell>
          </DomainList.TableRow>
        </DomainList.TableBody>
      </DomainList.Table>
      <DomainList.Item>
        {(domain) => (
          <DomainList.ItemView>
            <Avatar
              color={
                domain.type === "Domain" ? "blue" : "teal"
              }
            >
              {domain.type === "Domain" ? (
                <IconDomain />
              ) : (
                <IconSubdomain />
              )}
            </Avatar>
            <Heading>
              {domain.hostname}
              {!domain.verified && (
                <AlertBadge status="warning">
                  Unverifiziert
                </AlertBadge>
              )}
            </Heading>
            <Text>{domain.type}</Text>

            <ContextMenu>
              <MenuItem>Details anzeigen</MenuItem>
              <MenuItem>Löschen</MenuItem>
            </ContextMenu>
          </DomainList.ItemView>
        )}
      </DomainList.Item>
    </DomainList.List>
  );
};
3b:T8c7,import { typedList } from "@mittwald/flow-react-components/List";
import {
  type Domain,
  domains,
} from "@/content/03-components/structure/list/examples/domainApi";
import Avatar from "@mittwald/flow-react-components/Avatar";
import Heading from "@mittwald/flow-react-components/Heading";
import Text from "@mittwald/flow-react-components/Text";
import ContextMenu from "@mittwald/flow-react-components/ContextMenu";
import {
  IconDomain,
  IconSubdomain,
} from "@mittwald/flow-react-components/Icons";
import AlertBadge from "@mittwald/flow-react-components/AlertBadge";
import MenuItem from "@mittwald/flow-react-components/MenuItem";

export default () => {
  const DomainList = typedList<Domain>();

  return (
    <DomainList.List batchSize={5}>
      <DomainList.StaticData data={domains} />
      <DomainList.Filter
        property="type"
        mode="some"
        name="Type"
        values={["Domain", "Subdomain"]}
        defaultSelected={["Domain"]}
      />
      <DomainList.Filter
        property="verified"
        mode="some"
        name="Verifizierung"
        matcher={(filterValue, propertyValue) =>
          filterValue === "Verifiziert"
            ? propertyValue
            : !propertyValue
        }
        defaultSelected={["Unverifiziert"]}
        values={["Verifiziert", "Unverifiziert"]}
      />
      <DomainList.Item>
        {(domain) => (
          <DomainList.ItemView>
            <Avatar
              color={
                domain.type === "Domain" ? "blue" : "teal"
              }
            >
              {domain.type === "Domain" ? (
                <IconDomain />
              ) : (
                <IconSubdomain />
              )}
            </Avatar>
            <Heading>
              {domain.hostname}
              {!domain.verified && (
                <AlertBadge status="warning">
                  Unverifiziert
                </AlertBadge>
              )}
            </Heading>
            <Text>{domain.type}</Text>

            <ContextMenu>
              <MenuItem>Details anzeigen</MenuItem>
              <MenuItem>Löschen</MenuItem>
            </ContextMenu>
          </DomainList.ItemView>
        )}
      </DomainList.Item>
    </DomainList.List>
  );
};
3c:T9e5,import { typedList } from "@mittwald/flow-react-components/List";
import {
  type Domain,
  domains,
} from "@/content/03-components/structure/list/examples/domainApi";
import Avatar from "@mittwald/flow-react-components/Avatar";
import Heading from "@mittwald/flow-react-components/Heading";
import Text from "@mittwald/flow-react-components/Text";
import ContextMenu from "@mittwald/flow-react-components/ContextMenu";
import {
  IconDomain,
  IconSubdomain,
} from "@mittwald/flow-react-components/Icons";
import AlertBadge from "@mittwald/flow-react-components/AlertBadge";
import MenuItem from "@mittwald/flow-react-components/MenuItem";

export default () => {
  const DomainList = typedList<Domain>();

  return (
    <DomainList.List batchSize={5}>
      <DomainList.StaticData data={domains} />
      <DomainList.Filter
        property="type"
        mode="some"
        name="Type"
        matcher={(filterValue, propertyValue) =>
          filterValue === "Type Domain"
            ? propertyValue === "Domain"
            : propertyValue === "Subdomain"
        }
        values={["Type Domain", "Type Subdomain"]}
        defaultSelected={["Type Domain"]}
      />
      <DomainList.Filter
        property="verified"
        mode="some"
        name="Verifizierung"
        matcher={(filterValue, propertyValue) =>
          filterValue === "Verifizierung Verifiziert"
            ? propertyValue
            : !propertyValue
        }
        defaultSelected={["Verifizierung Unverifiziert"]}
        values={[
          "Verifizierung Verifiziert",
          "Verifizierung Unverifiziert",
        ]}
      />
      <DomainList.Item>
        {(domain) => (
          <DomainList.ItemView>
            <Avatar
              color={
                domain.type === "Domain" ? "blue" : "teal"
              }
            >
              {domain.type === "Domain" ? (
                <IconDomain />
              ) : (
                <IconSubdomain />
              )}
            </Avatar>
            <Heading>
              {domain.hostname}
              {!domain.verified && (
                <AlertBadge status="warning">
                  Unverifiziert
                </AlertBadge>
              )}
            </Heading>
            <Text>{domain.type}</Text>

            <ContextMenu>
              <MenuItem>Details anzeigen</MenuItem>
              <MenuItem>Löschen</MenuItem>
            </ContextMenu>
          </DomainList.ItemView>
        )}
      </DomainList.Item>
    </DomainList.List>
  );
};
3d:T6ae,import { typedList } from "@mittwald/flow-react-components/List";
import {
  type Domain,
  domains,
} from "@/content/03-components/structure/list/examples/domainApi";
import Avatar from "@mittwald/flow-react-components/Avatar";
import Heading from "@mittwald/flow-react-components/Heading";
import Text from "@mittwald/flow-react-components/Text";
import ContextMenu from "@mittwald/flow-react-components/ContextMenu";
import {
  IconDomain,
  IconSubdomain,
} from "@mittwald/flow-react-components/Icons";
import AlertBadge from "@mittwald/flow-react-components/AlertBadge";
import MenuItem from "@mittwald/flow-react-components/MenuItem";

export default () => {
  const DomainList = typedList<Domain>();

  return (
    <DomainList.List batchSize={3}>
      <DomainList.StaticData data={domains} />
      <DomainList.Item>
        {(domain) => (
          <DomainList.ItemView>
            <Avatar
              color={
                domain.type === "Domain" ? "blue" : "teal"
              }
            >
              {domain.type === "Domain" ? (
                <IconDomain />
              ) : (
                <IconSubdomain />
              )}
            </Avatar>
            <Heading>
              {domain.hostname}
              {!domain.verified && (
                <AlertBadge status="warning">
                  Unverifiziert
                </AlertBadge>
              )}
            </Heading>
            <Text>{domain.type}</Text>

            <ContextMenu>
              <MenuItem>Details anzeigen</MenuItem>
              <MenuItem>Löschen</MenuItem>
            </ContextMenu>
          </DomainList.ItemView>
        )}
      </DomainList.Item>
    </DomainList.List>
  );
};
3e:T6ca,import { typedList } from "@mittwald/flow-react-components/List";
import {
  type Domain,
  domains,
} from "@/content/03-components/structure/list/examples/domainApi";
import Avatar from "@mittwald/flow-react-components/Avatar";
import Heading from "@mittwald/flow-react-components/Heading";
import Text from "@mittwald/flow-react-components/Text";
import ContextMenu from "@mittwald/flow-react-components/ContextMenu";
import {
  IconDomain,
  IconSubdomain,
} from "@mittwald/flow-react-components/Icons";
import AlertBadge from "@mittwald/flow-react-components/AlertBadge";
import MenuItem from "@mittwald/flow-react-components/MenuItem";

export default () => {
  const DomainList = typedList<Domain>();

  return (
    <DomainList.List batchSize={5}>
      <DomainList.StaticData data={domains} />
      <DomainList.Search />
      <DomainList.Item>
        {(domain) => (
          <DomainList.ItemView>
            <Avatar
              color={
                domain.type === "Domain" ? "blue" : "teal"
              }
            >
              {domain.type === "Domain" ? (
                <IconDomain />
              ) : (
                <IconSubdomain />
              )}
            </Avatar>
            <Heading>
              {domain.hostname}
              {!domain.verified && (
                <AlertBadge status="warning">
                  Unverifiziert
                </AlertBadge>
              )}
            </Heading>
            <Text>{domain.type}</Text>

            <ContextMenu>
              <MenuItem>Details anzeigen</MenuItem>
              <MenuItem>Löschen</MenuItem>
            </ContextMenu>
          </DomainList.ItemView>
        )}
      </DomainList.Item>
    </DomainList.List>
  );
};
3f:T878,import { typedList } from "@mittwald/flow-react-components/List";
import {
  type Domain,
  domains,
} from "@/content/03-components/structure/list/examples/domainApi";
import Avatar from "@mittwald/flow-react-components/Avatar";
import Heading from "@mittwald/flow-react-components/Heading";
import Text from "@mittwald/flow-react-components/Text";
import ContextMenu from "@mittwald/flow-react-components/ContextMenu";
import {
  IconDomain,
  IconSubdomain,
} from "@mittwald/flow-react-components/Icons";
import AlertBadge from "@mittwald/flow-react-components/AlertBadge";
import MenuItem from "@mittwald/flow-react-components/MenuItem";

export default () => {
  const DomainList = typedList<Domain>();

  return (
    <DomainList.List batchSize={5}>
      <DomainList.StaticData data={domains} />
      <DomainList.Sorting
        property="hostname"
        name="Domain A bis Z"
        direction="asc"
      />
      <DomainList.Sorting
        property="hostname"
        name="Domain Z bis A"
        direction="desc"
      />
      <DomainList.Sorting
        property="type"
        name="Type A bis Z"
        direction="asc"
      />
      <DomainList.Sorting
        property="type"
        name="Type Z bis A"
        direction="desc"
      />
      <DomainList.Item>
        {(domain) => (
          <DomainList.ItemView>
            <Avatar
              color={
                domain.type === "Domain" ? "blue" : "teal"
              }
            >
              {domain.type === "Domain" ? (
                <IconDomain />
              ) : (
                <IconSubdomain />
              )}
            </Avatar>
            <Heading>
              {domain.hostname}
              {!domain.verified && (
                <AlertBadge status="warning">
                  Unverifiziert
                </AlertBadge>
              )}
            </Heading>
            <Text>{domain.type}</Text>

            <ContextMenu>
              <MenuItem>Details anzeigen</MenuItem>
              <MenuItem>Löschen</MenuItem>
            </ContextMenu>
          </DomainList.ItemView>
        )}
      </DomainList.Item>
    </DomainList.List>
  );
};
40:T887,import { typedList } from "@mittwald/flow-react-components/List";
import {
  type Domain,
  domains,
} from "@/content/03-components/structure/list/examples/domainApi";
import Avatar from "@mittwald/flow-react-components/Avatar";
import Heading from "@mittwald/flow-react-components/Heading";
import Text from "@mittwald/flow-react-components/Text";
import ContextMenu from "@mittwald/flow-react-components/ContextMenu";
import {
  IconDomain,
  IconSubdomain,
} from "@mittwald/flow-react-components/Icons";
import AlertBadge from "@mittwald/flow-react-components/AlertBadge";
import MenuItem from "@mittwald/flow-react-components/MenuItem";

export default () => {
  const DomainList = typedList<Domain>();

  return (
    <DomainList.List batchSize={5}>
      <DomainList.StaticData data={domains} />
      <DomainList.Sorting
        property="hostname"
        name="Name A bis Z"
        direction="asc"
      />
      <DomainList.Sorting
        property="hostname"
        name="Name Z bis A"
        direction="desc"
        defaultEnabled
      />
      <DomainList.Sorting
        property="tld"
        name="TLD A bis Z"
        direction="asc"
      />
      <DomainList.Sorting
        property="tld"
        name="TLD Z bis A"
        direction="desc"
      />
      <DomainList.Item>
        {(domain) => (
          <DomainList.ItemView>
            <Avatar
              color={
                domain.type === "Domain" ? "blue" : "teal"
              }
            >
              {domain.type === "Domain" ? (
                <IconDomain />
              ) : (
                <IconSubdomain />
              )}
            </Avatar>
            <Heading>
              {domain.hostname}
              {!domain.verified && (
                <AlertBadge status="warning">
                  Unverifiziert
                </AlertBadge>
              )}
            </Heading>
            <Text>{domain.type}</Text>

            <ContextMenu>
              <MenuItem>Details anzeigen</MenuItem>
              <MenuItem>Löschen</MenuItem>
            </ContextMenu>
          </DomainList.ItemView>
        )}
      </DomainList.Item>
    </DomainList.List>
  );
};
41:T74d,import { typedList } from "@mittwald/flow-react-components/List";
import {
  type Domain,
  domains,
} from "@/content/03-components/structure/list/examples/domainApi";
import Avatar from "@mittwald/flow-react-components/Avatar";
import Heading from "@mittwald/flow-react-components/Heading";
import Text from "@mittwald/flow-react-components/Text";
import ContextMenu from "@mittwald/flow-react-components/ContextMenu";
import {
  IconDomain,
  IconSubdomain,
} from "@mittwald/flow-react-components/Icons";
import AlertBadge from "@mittwald/flow-react-components/AlertBadge";
import MenuItem from "@mittwald/flow-react-components/MenuItem";

export default () => {
  const DomainList = typedList<Domain>();

  return (
    <DomainList.List batchSize={5}>
      <DomainList.StaticData data={domains} />
      <DomainList.Sorting
        property="domain"
        name="Name"
        defaultEnabled
      />
      <DomainList.Sorting property="tld" name="TLD" />
      <DomainList.Item>
        {(domain) => (
          <DomainList.ItemView>
            <Avatar
              color={
                domain.type === "Domain" ? "blue" : "teal"
              }
            >
              {domain.type === "Domain" ? (
                <IconDomain />
              ) : (
                <IconSubdomain />
              )}
            </Avatar>
            <Heading>
              {domain.hostname}
              {!domain.verified && (
                <AlertBadge status="warning">
                  Unverifiziert
                </AlertBadge>
              )}
            </Heading>
            <Text>{domain.type}</Text>

            <ContextMenu>
              <MenuItem>Details anzeigen</MenuItem>
              <MenuItem>Löschen</MenuItem>
            </ContextMenu>
          </DomainList.ItemView>
        )}
      </DomainList.Item>
    </DomainList.List>
  );
};
42:T516,import {
  ListItemView,
  ListSummary,
  typedList,
} from "@mittwald/flow-react-components/List";
import Heading from "@mittwald/flow-react-components/Heading";
import Text from "@mittwald/flow-react-components/Text";

export default () => {
  const InvoiceList = typedList<{
    id: string;
    date: string;
    amount: string;
  }>();

  return (
    <InvoiceList.List batchSize={5} aria-label="Invoices">
      <ListSummary>
        <Text
          style={{ display: "block", textAlign: "right" }}
        >
          <b>Gesamt: 41,00 €</b>
        </Text>
      </ListSummary>
      <InvoiceList.StaticData
        data={[
          {
            id: "RG100000",
            date: "1.9.2024",
            amount: "25,00 €",
          },
          {
            id: "RG100001",
            date: "12.9.2024",
            amount: "12,00 €",
          },
          {
            id: "RG100002",
            date: "3.10.2024",
            amount: "4,00 €",
          },
        ]}
      />

      <InvoiceList.Item>
        {(invoice) => (
          <ListItemView>
            <Heading>{invoice.id}</Heading>
            <Text>
              {invoice.date} - {invoice.amount}
            </Text>
          </ListItemView>
        )}
      </InvoiceList.Item>
    </InvoiceList.List>
  );
};
43:Tae1,import { typedList } from "@mittwald/flow-react-components/List";
import {
  type Domain,
  domains,
} from "@/content/03-components/structure/list/examples/domainApi";
import Avatar from "@mittwald/flow-react-components/Avatar";
import Heading from "@mittwald/flow-react-components/Heading";
import Text from "@mittwald/flow-react-components/Text";
import ContextMenu from "@mittwald/flow-react-components/ContextMenu";
import {
  IconDomain,
  IconSubdomain,
} from "@mittwald/flow-react-components/Icons";
import AlertBadge from "@mittwald/flow-react-components/AlertBadge";
import MenuItem from "@mittwald/flow-react-components/MenuItem";

export default () => {
  const DomainList = typedList<Domain>();

  return (
    <DomainList.List batchSize={5} defaultViewMode="table">
      <DomainList.StaticData data={domains} />
      <DomainList.Table>
        <DomainList.TableHeader>
          <DomainList.TableColumn>
            Name
          </DomainList.TableColumn>
          <DomainList.TableColumn>
            Type
          </DomainList.TableColumn>
          <DomainList.TableColumn>
            TLD
          </DomainList.TableColumn>
          <DomainList.TableColumn>
            Hostname
          </DomainList.TableColumn>
        </DomainList.TableHeader>

        <DomainList.TableBody>
          <DomainList.TableRow>
            <DomainList.TableCell>
              {(domain) => domain.domain}
            </DomainList.TableCell>
            <DomainList.TableCell>
              {(domain) => domain.type}
            </DomainList.TableCell>
            <DomainList.TableCell>
              {(domain) => domain.tld}
            </DomainList.TableCell>
            <DomainList.TableCell>
              {(domain) => domain.hostname}
            </DomainList.TableCell>
          </DomainList.TableRow>
        </DomainList.TableBody>
      </DomainList.Table>
      <DomainList.Item>
        {(domain) => (
          <DomainList.ItemView>
            <Avatar
              color={
                domain.type === "Domain" ? "blue" : "teal"
              }
            >
              {domain.type === "Domain" ? (
                <IconDomain />
              ) : (
                <IconSubdomain />
              )}
            </Avatar>
            <Heading>
              {domain.hostname}
              {!domain.verified && (
                <AlertBadge status="warning">
                  Unverifiziert
                </AlertBadge>
              )}
            </Heading>
            <Text>{domain.type}</Text>

            <ContextMenu>
              <MenuItem>Details anzeigen</MenuItem>
              <MenuItem>Löschen</MenuItem>
            </ContextMenu>
          </DomainList.ItemView>
        )}
      </DomainList.Item>
    </DomainList.List>
  );
};
44:T6d0,import Header from "@mittwald/flow-react-components/Header";
import { Text } from "@mittwald/flow-react-components/Text";
import Section from "@mittwald/flow-react-components/Section";
import AlertBadge from "@mittwald/flow-react-components/AlertBadge";
import Heading from "@mittwald/flow-react-components/Heading";
import Button from "@mittwald/flow-react-components/Button";
import Content from "@mittwald/flow-react-components/Content";
import LabeledValue from "@mittwald/flow-react-components/LabeledValue";
import Label from "@mittwald/flow-react-components/Label";
import ColumnLayout from "@mittwald/flow-react-components/ColumnLayout";
import { Link } from "@mittwald/flow-react-components/Link";
import { CopyButton } from "@mittwald/flow-react-components/CopyButton";
import {
  IconContextMenu,
  IconExternalLink,
} from "@mittwald/flow-react-components/Icons";

<Section>
  <Header>
    <Heading>
      Mein Projekt
      <AlertBadge status="danger">
        Fehlende Vertragspartnerdaten
      </AlertBadge>
    </Heading>
    <Button variant="soft" color="secondary">
      <IconContextMenu />
    </Button>
    <Button variant="soft" color="secondary">
      Datenbank migrieren
    </Button>
  </Header>

  <ColumnLayout>
    <LabeledValue>
      <Label>Projektname</Label>
      <Content>Dolce Vita</Content>
    </LabeledValue>
    <LabeledValue>
      <Label>Short-ID</Label>
      <Content>p-lol3qe</Content>
      <CopyButton text="p-lol3qe" />
    </LabeledValue>
    <LabeledValue>
      <Label>Projektdomain</Label>
      <Link>
        <Text>p-lol3qe.project.space</Text>
        <IconExternalLink />
      </Link>
      <CopyButton text="p-lol3qe.project.space" />
    </LabeledValue>
  </ColumnLayout>
</Section>;
45:T672,import Header from "@mittwald/flow-react-components/Header";
import { Text } from "@mittwald/flow-react-components/Text";
import Section from "@mittwald/flow-react-components/Section";
import AlertBadge from "@mittwald/flow-react-components/AlertBadge";
import Heading from "@mittwald/flow-react-components/Heading";
import Button from "@mittwald/flow-react-components/Button";
import Content from "@mittwald/flow-react-components/Content";
import LabeledValue from "@mittwald/flow-react-components/LabeledValue";
import Label from "@mittwald/flow-react-components/Label";
import ColumnLayout from "@mittwald/flow-react-components/ColumnLayout";
import { Link } from "@mittwald/flow-react-components/Link";
import { CopyButton } from "@mittwald/flow-react-components/CopyButton";
import { IconExternalLink } from "@mittwald/flow-react-components/Icons";

<Section>
  <Header>
    <Heading>
      Mein Projekt
      <AlertBadge status="danger">Deaktiviert</AlertBadge>
    </Heading>

    <Button variant="soft" color="secondary">
      Datenbank migrieren
    </Button>
    <Button color="accent">Aktivieren</Button>
  </Header>

  <ColumnLayout>
    <LabeledValue>
      <Label>Projektname</Label>
      <Content>Dolce Vita</Content>
    </LabeledValue>
    <LabeledValue>
      <Label>Short-ID</Label>
      <Content>p-lol3qe</Content>
      <CopyButton text="p-lol3qe" />
    </LabeledValue>
    <LabeledValue>
      <Label>Projektdomain</Label>
      <Link>
        <Text>p-lol3qe.project.space</Text>
        <IconExternalLink />
      </Link>
      <CopyButton text="p-lol3qe.project.space" />
    </LabeledValue>
  </ColumnLayout>
</Section>;
46:T77d,import Header from "@mittwald/flow-react-components/Header";
import Section from "@mittwald/flow-react-components/Section";
import Heading from "@mittwald/flow-react-components/Heading";
import Button from "@mittwald/flow-react-components/Button";
import Content from "@mittwald/flow-react-components/Content";
import LabeledValue from "@mittwald/flow-react-components/LabeledValue";
import Label from "@mittwald/flow-react-components/Label";
import ColumnLayout from "@mittwald/flow-react-components/ColumnLayout";
import {
  IconContextMenu,
  IconExternalLink,
} from "@mittwald/flow-react-components/Icons";
import ContextMenu, {
  ContextMenuTrigger,
} from "@mittwald/flow-react-components/ContextMenu";
import MenuItem from "@mittwald/flow-react-components/MenuItem";
import { Link } from "@mittwald/flow-react-components/Link";
import { CopyButton } from "@mittwald/flow-react-components/CopyButton";
import Text from "@mittwald/flow-react-components/Text";

<Section>
  <Header>
    <Heading>Mein Projekt</Heading>

    <ContextMenuTrigger>
      <Button variant="soft" color="secondary">
        <IconContextMenu />
      </Button>
      <ContextMenu aria-label="Weitere Aktionen">
        <MenuItem>Datenbank migrieren</MenuItem>
        <MenuItem>Volume migrieren</MenuItem>
      </ContextMenu>
    </ContextMenuTrigger>

    <Button color="danger">Deaktivieren</Button>
  </Header>

  <ColumnLayout>
    <LabeledValue>
      <Label>Projektname</Label>
      <Content>Dolce Vita</Content>
    </LabeledValue>
    <LabeledValue>
      <Label>Short-ID</Label>
      <Content>p-lol3qe</Content>
      <CopyButton text="p-lol3qe" />
    </LabeledValue>
    <LabeledValue>
      <Label>Projektdomain</Label>
      <Link>
        <Text>p-lol3qe.project.space</Text>
        <IconExternalLink />
      </Link>
      <CopyButton text="p-lol3qe.project.space" />
    </LabeledValue>
  </ColumnLayout>
</Section>;
47:T67e,import Header from "@mittwald/flow-react-components/Header";
import { Text } from "@mittwald/flow-react-components/Text";
import Section from "@mittwald/flow-react-components/Section";
import AlertBadge from "@mittwald/flow-react-components/AlertBadge";
import Heading from "@mittwald/flow-react-components/Heading";
import Button from "@mittwald/flow-react-components/Button";
import Content from "@mittwald/flow-react-components/Content";
import LabeledValue from "@mittwald/flow-react-components/LabeledValue";
import Label from "@mittwald/flow-react-components/Label";
import ColumnLayout from "@mittwald/flow-react-components/ColumnLayout";
import { Link } from "@mittwald/flow-react-components/Link";
import { CopyButton } from "@mittwald/flow-react-components/CopyButton";
import { IconExternalLink } from "@mittwald/flow-react-components/Icons";

<Section>
  <Header>
    <Heading>
      Mein sehr langes Projekt
      <AlertBadge status="danger">Deaktiviert</AlertBadge>
    </Heading>

    <Button variant="soft" color="secondary">
      Datenbank migrieren
    </Button>
    <Button color="accent">Aktivieren</Button>
  </Header>

  <ColumnLayout>
    <LabeledValue>
      <Label>Projektname</Label>
      <Content>Dolce Vita</Content>
    </LabeledValue>
    <LabeledValue>
      <Label>Short-ID</Label>
      <Content>p-lol3qe</Content>
      <CopyButton text="p-lol3qe" />
    </LabeledValue>
    <LabeledValue>
      <Label>Projektdomain</Label>
      <Link>
        <Text>p-lol3qe.project.space</Text>
        <IconExternalLink />
      </Link>
      <CopyButton text="p-lol3qe.project.space" />
    </LabeledValue>
  </ColumnLayout>
</Section>;
48:T4c5,import {
  Table,
  TableBody,
  TableCell,
  TableColumn,
  TableHeader,
  TableRow,
} from "@mittwald/flow-react-components/Table";
import { InlineCode } from "@mittwald/flow-react-components/InlineCode";

<Table aria-label="Button Props">
  <TableHeader>
    <TableColumn>Name</TableColumn>
    <TableColumn>Type</TableColumn>
    <TableColumn>Default</TableColumn>
    <TableColumn>Description</TableColumn>
  </TableHeader>
  <TableBody>
    <TableRow>
      <TableCell>
        <InlineCode>color</InlineCode>
      </TableCell>
      <TableCell>
        primary | accent | secondary | danger
      </TableCell>
      <TableCell>primary</TableCell>
      <TableCell>The color of the button</TableCell>
    </TableRow>
    <TableRow>
      <TableCell>
        <InlineCode>variant</InlineCode>
      </TableCell>
      <TableCell>plain | solid | soft</TableCell>
      <TableCell>solid</TableCell>
      <TableCell>The variant of the button</TableCell>
    </TableRow>
    <TableRow>
      <TableCell>
        <InlineCode>size</InlineCode>
      </TableCell>
      <TableCell>m | s</TableCell>
      <TableCell>m</TableCell>
      <TableCell>The size of the button</TableCell>
    </TableRow>
  </TableBody>
</Table>;
5:["$","html",null,{"lang":"en","children":["$","body",null,{"className":"flow layout_body__oiEIT","children":["$","$L10",null,{"children":["$","$L11",null,{"children":[["$","header",null,{"className":"layout_header__ttTk7","children":[["$","$L12",null,{"href":"/","className":"layout_homeLink__HdnFq","children":["$","$L13",null,{"src":"/flow-previews/docs/995-missing-property-descriptions/_next/static/media/m-flow_logo.5d297ae4.svg","alt":"mittwald Flow Logo"}]}],["$","$L14",null,{"className":"layout_headerNavigation__SNRbw","docs":[{"mdxSource":{"compiledSource":"$15","frontmatter":{"description":"Willkommen in der Flow Dokumentation!"},"scope":{}},"examples":{},"slugs":["01-get-started","installation"],"filename":"01-get-started/installation/index.mdx"},{"mdxSource":{"compiledSource":"$16","frontmatter":{},"scope":{}},"examples":{"composition":"import ExampleSvg from \"@/content/01-get-started/stylesheet/examples/components/ExampleSvg\";\n\n<aside className=\"flow--alert\">\n  <h3 className=\"flow--heading flow--heading--h3 flow--alert--heading\">\n    <ExampleSvg className=\"flow--icon flow--alert-icon\" />\n    E-Mail Adresse wurde archiviert\n  </h3>\n  <div className=\"flow--alert--content\">\n    Da deine Domain gelöscht wurde, wurde diese\n    E-Mail-Adresse archiviert. Um E-Mails empfangen und\n    senden zu können musst du die Adresse wieder umbenennen.\n  </div>\n</aside>;\n","multiple-variants":"<button className=\"flow--button flow--button--accent flow--button--size-s\">\n  Small Accented Button\n</button>;\n","variants":"<button className=\"flow--button flow--button--accent\">\n  Accented Button\n</button>;\n"},"slugs":["01-get-started","stylesheet"],"filename":"01-get-started/stylesheet/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    p: \"p\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsx(_components.p, {\n    children: \"Design Tokens übersetzen grundlegende Designentscheidungen wie Farben, Abstände\\nund mehr in eine einheitliche Sprache. Entwickler und Designer nutzen diese\\nSprache, um ein konsistentes, skalierbares und wiederverwendbares Design in der\\ngesamten Benutzeroberfläche sicherzustellen.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{"title":"Design Tokens"},"scope":{}},"examples":{"schema":"import { ColumnLayout } from \"@mittwald/flow-react-components/ColumnLayout\";\nimport { Text } from \"@mittwald/flow-react-components/Text\";\nimport { Badge } from \"@mittwald/flow-react-components/Badge\";\n\n<ColumnLayout m={[1, 1, 1]}>\n  <Text>\n    <Badge color=\"teal\">Context</Badge>\n    Einordnung <br />\n    <small>z. B. Farbe, Component</small>\n  </Text>\n  <Text>\n    <Badge color=\"orange\">Common Unit</Badge>\n    Kategorie <br />\n    <small>z. B. Variante, Sizing, Styling</small>\n  </Text>\n  <Text>\n    <Badge color=\"lilac\">Clarification</Badge>\n    Spezifizierung <br />\n    <small>z. B. Farbwert, State</small>\n  </Text>\n</ColumnLayout>;\n"},"slugs":["02-foundations","01-design","01-design-tokens"],"filename":"02-foundations/01-design/01-design-tokens/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    p: \"p\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsx(_components.p, {\n    children: \"Ausgewählte Colors verkörpern die Marke und dienen gleichzeitig als wesentliches\\nKommunikationsmittel in der Benutzeroberfläche. Sie lenken die Aufmerksamkeit\\ndes Users und vermitteln gezielt wichtige Informationen wie z. B. den Status.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{"title":"Color"},"scope":{}},"examples":{},"slugs":["02-foundations","01-design","02-colors"],"filename":"02-foundations/01-design/02-colors/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    p: \"p\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsx(_components.p, {\n    children: \"Typography strukturiert den Inhaltsbereich, indem sie eine visuelle Hierarchie\\nschafft. Darüber hinaus erhöht eine gute Typography die Lesbarkeit und stärkt\\ndie Marke im Erscheinungsbild.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{"title":"Typography"},"scope":{}},"examples":{},"slugs":["02-foundations","01-design","05-typography"],"filename":"02-foundations/01-design/05-typography/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    p: \"p\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsx(_components.p, {\n    children: \"Das Layout organisiert die Benutzeroberfläche in einer logischen und\\nhierarchischen Struktur, um die Aufmerksamkeit des Users gezielt zu lenken.\\nDabei werden Elemente wie Header, Navigation und Content-Bereich berücksichtigt.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{"title":"Layout"},"scope":{}},"examples":{"general-layout":"$17","mStudio-layout":"$18"},"slugs":["02-foundations","02-structure","01-layout"],"filename":"02-foundations/02-structure/01-layout/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    p: \"p\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsx(_components.p, {\n    children: \"Spacing definiert die vertikalen und horizontalen Abstände zwischen Elementen\\nund sorgt so für ein harmonisches Layout.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{"title":"Spacing"},"scope":{}},"examples":{"falseSpacing":"import { Initials } from \"@mittwald/flow-react-components/Initials\";\nimport { Avatar } from \"@mittwald/flow-react-components/Avatar\";\nimport { Text } from \"@mittwald/flow-react-components/Text\";\nimport { Content } from \"@mittwald/flow-react-components/Content\";\n\n<Content\n  style={{\n    display: \"grid\",\n    gridTemplateAreas: '\"avatar title\" \"avatar subtitle\"',\n    gridTemplateColumns: \"auto 1fr\",\n    alignItems: \"center\",\n    columnGap: \"32px\",\n    width: \"max-content\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n  }}\n>\n  <div\n    style={{\n      gridArea: \"avatar\",\n    }}\n  >\n    <Avatar>\n      <Initials>Sven Fuchs</Initials>\n    </Avatar>\n  </div>\n  <Text\n    style={{\n      gridArea: \"title\",\n    }}\n  >\n    <b style={{ margin: 0 }}>Sven Fuchs</b>\n  </Text>\n  <Text\n    style={{\n      gridArea: \"subtitle\",\n      fontSize: \"14px\",\n    }}\n  >\n    Projektentwickler\n  </Text>\n</Content>;\n","rightSpacing":"import { Initials } from \"@mittwald/flow-react-components/Initials\";\nimport { Avatar } from \"@mittwald/flow-react-components/Avatar\";\nimport { Text } from \"@mittwald/flow-react-components/Text\";\nimport { Content } from \"@mittwald/flow-react-components/Content\";\n\n<Content\n  style={{\n    display: \"grid\",\n    gridTemplateAreas: '\"avatar title\" \"avatar subtitle\"',\n    gridTemplateColumns: \"auto 1fr\",\n    alignItems: \"center\",\n    columnGap: \"8px\",\n    width: \"max-content\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n  }}\n>\n  <div\n    style={{\n      gridArea: \"avatar\",\n    }}\n  >\n    <Avatar>\n      <Initials>Sven Fuchs</Initials>\n    </Avatar>\n  </div>\n  <Text\n    style={{\n      gridArea: \"title\",\n    }}\n  >\n    <b style={{ margin: 0 }}>Sven Fuchs</b>\n  </Text>\n  <Text\n    style={{\n      gridArea: \"subtitle\",\n      fontSize: \"14px\",\n    }}\n  >\n    Projektentwickler\n  </Text>\n</Content>;\n"},"slugs":["02-foundations","02-structure","02-spacing"],"filename":"02-foundations/02-structure/02-spacing/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    p: \"p\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsx(_components.p, {\n    children: \"Erfahre, was unsere Sprache auszeichnet und an welchen Leitlinien du dich bei\\ndeinen Texten orientieren kannst. Außerdem erklärt unser Glossar alle Begriffe,\\nauf die du im mStudio Kontext treffen kannst.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{"title":"Sprach-Guide"},"scope":{}},"examples":{},"slugs":["02-foundations","03-content-guidelines","01-sprach-guide"],"filename":"02-foundations/03-content-guidelines/01-sprach-guide/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    p: \"p\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsx(_components.p, {\n    children: \"Fehler entstehen, wenn User auf unerwartete Ergebnisse stoßen – das führt oft zu\\nFrustration, Verwirrung und zusätzlichem Aufwand. Daher ist der beste Fehler\\nder, der gar nicht erst auftritt. Sollte dennoch ein Fehler auftreten, muss die\\nFehlermeldung klar, hilfreich und leicht verständlich formuliert sein, um den\\nUser bestmöglich zu unterstützen.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{"title":"Fehlermeldungen"},"scope":{}},"examples":{},"slugs":["02-foundations","03-content-guidelines","02-fehlermeldungen"],"filename":"02-foundations/03-content-guidelines/02-fehlermeldungen/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    p: \"p\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsx(_components.p, {\n    children: \"Ein Dashboard zeigt dem User relevante Informationen übersichtlich in kleineren\\nBereichen auf einer einzigen Oberfläche an. Es hilft dem User, wichtige Daten\\nschnell zu erkennen.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{"title":"Dashboard"},"scope":{}},"examples":{"dashboard":"$19"},"slugs":["02-foundations","04-ui-patterns","01-dashboard"],"filename":"02-foundations/04-ui-patterns/01-dashboard/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    p: \"p\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsx(_components.p, {\n    children: \"Anlege-Prozesse fügen ein neues Element zur Benutzeroberfläche hinzu. Kleinere\\nAnlege-Prozesse erfolgen in einem Standard-Modal. Umfangreichere Anlege- oder\\nBuchungsprozesse werden hingegen in einem Modal mit OffCanvas-Variante\\ndargestellt.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{"title":"Anlegeprozess"},"scope":{}},"examples":{"content":"$1a","empty":"$1b"},"slugs":["02-foundations","04-ui-patterns","02-anlegeprozess"],"filename":"02-foundations/04-ui-patterns/02-anlegeprozess/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    p: \"p\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsx(_components.p, {\n    children: \"Inhalte sollten so strukturiert werden, dass User schnell und einfach alle\\nwichtigen Informationen finden können. Dafür gibt es Components, die auf die\\nLayout- und Strukturierung der Darstellung spezialisiert sind.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{"title":"Content strukturieren"},"scope":{}},"examples":{"detail-page":"$1c"},"slugs":["02-foundations","04-ui-patterns","03-struktur"],"filename":"02-foundations/04-ui-patterns/03-struktur/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    p: \"p\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsx(_components.p, {\n    children: \"Im Content-Bereich verschiedener Seiten werden häufig Daten angezeigt, die der\\nUser bearbeiten kann. Die Bearbeitung erfolgt dabei nicht direkt im\\nContent-Bereich, sondern durch das Öffnen eines separaten Modals.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{"title":"Bearbeitungsprozess"},"scope":{}},"examples":{"edit-section":"$1d"},"slugs":["02-foundations","04-ui-patterns","04-bearbeitungsprozess"],"filename":"02-foundations/04-ui-patterns/04-bearbeitungsprozess/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true,\n    zoom: 0.7\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"ActionGroup","description":"Die ActionGroup dient dazu zusammengehörige Buttons sinnvoll zu gruppieren. Sie wird beispielsweise für Forms oder Modals verwendet."},"scope":{}},"examples":{"additionalSecondary":"import ActionGroup from \"@mittwald/flow-react-components/ActionGroup\";\nimport Button from \"@mittwald/flow-react-components/Button\";\n\n<ActionGroup>\n  <Button color=\"accent\">E-Mail-Addresse anlegen</Button>\n  <Button color=\"secondary\" variant=\"soft\" slot=\"secondary\">\n    Speichern und weitere anlegen\n  </Button>\n  <Button color=\"secondary\" variant=\"soft\">\n    Abbrechen\n  </Button>\n</ActionGroup>;\n","danger":"import ActionGroup from \"@mittwald/flow-react-components/ActionGroup\";\nimport Button from \"@mittwald/flow-react-components/Button\";\n\n<ActionGroup>\n  <Button color=\"danger\">Projekt löschen</Button>\n  <Button color=\"secondary\" variant=\"soft\">\n    Abbrechen\n  </Button>\n</ActionGroup>;\n","default":"import ActionGroup from \"@mittwald/flow-react-components/ActionGroup\";\nimport Button from \"@mittwald/flow-react-components/Button\";\n\n<ActionGroup>\n  <Button color=\"accent\">Organisation erstellen</Button>\n  <Button color=\"secondary\" variant=\"soft\">\n    Abbrechen\n  </Button>\n</ActionGroup>;\n","info":"import ActionGroup from \"@mittwald/flow-react-components/ActionGroup\";\nimport Button from \"@mittwald/flow-react-components/Button\";\n\n<ActionGroup>\n  <Button slot=\"primary\">Ok</Button>\n</ActionGroup>;\n"},"slugs":["03-components","actions","action-group"],"filename":"03-components/actions/action-group/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"Action","description":"Die Action Komponente kann um einen Button gelegt werden, um beispielsweise asynchrone Aktionen mit dem Button auszuführen."},"scope":{}},"examples":{"confirmation":"$1e","default":"import Button from \"@mittwald/flow-react-components/Button\";\nimport Action from \"@mittwald/flow-react-components/Action\";\nimport { sleep } from \"@/content/03-components/actions/action/examples/lib\";\n\n<Action action={sleep}>\n  <Button>Speichern</Button>\n</Action>;\n","feedback":"import Button from \"@mittwald/flow-react-components/Button\";\nimport Action from \"@mittwald/flow-react-components/Action\";\n\n<Action\n  action={() => {\n    // do nothing\n  }}\n  showFeedback\n>\n  <Button>Speichern</Button>\n</Action>;\n","longAction":"import Button from \"@mittwald/flow-react-components/Button\";\nimport Action from \"@mittwald/flow-react-components/Action\";\nimport { sleepLong } from \"@/content/03-components/actions/action/examples/lib\";\n\n<Action action={sleepLong}>\n  <Button>Speichern</Button>\n</Action>;\n"},"slugs":["03-components","actions","action"],"filename":"03-components/actions/action/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"Button","description":"Mit einem Button können User Aktionen ausführen. Je nach Bedarf kann ein Button – mit Text und/oder mit einem Icon – in verschiedenen Größen und Typen gewählt werden."},"scope":{}},"examples":{"colors":"import Button from \"@mittwald/flow-react-components/Button\";\n\n<Row>\n  <Button color=\"primary\">Fortfahren/Aktion</Button>\n  <Button color=\"secondary\">Abbrechen/Zurück</Button>\n  <Button color=\"accent\">Erstellen/Speichern</Button>\n  <Button color=\"danger\">Löschen/Kündigen</Button>\n</Row>;\n","dark":"import Button from \"@mittwald/flow-react-components/Button\";\n\n<Row>\n  <Button color=\"dark\">Dark</Button>\n  <Button variant=\"soft\" color=\"dark\">\n    Dark\n  </Button>\n  <Button variant=\"plain\" color=\"dark\">\n    Dark\n  </Button>\n  <Button variant=\"outline\" color=\"dark\">\n    Dark\n  </Button>\n</Row>;\n","default":"import Button from \"@mittwald/flow-react-components/Button\";\n\n<Button\n  onPress={() => {\n    alert(\"Button gedrückt\");\n  }}\n>\n  Button\n</Button>;\n","hierarchy-order-do":"import Button from \"@mittwald/flow-react-components/Button\";\n\n<Row>\n  <Button variant=\"soft\" color=\"secondary\">\n    Pausieren\n  </Button>\n  <Button color=\"secondary\">Stoppen</Button>\n  <Button>Starten</Button>\n</Row>;\n","hierarchy-order-dont":"import Button from \"@mittwald/flow-react-components/Button\";\n\n<Row>\n  <Button color=\"secondary\">Stoppen</Button>\n  <Button variant=\"soft\" color=\"secondary\">\n    Pausieren\n  </Button>\n  <Button>Starten</Button>\n</Row>;\n","hierarchy-soft-do":"import Button from \"@mittwald/flow-react-components/Button\";\n\n<Row>\n  <Button variant=\"soft\" color=\"secondary\">\n    Zurück\n  </Button>\n  <Button>Weiter</Button>\n</Row>;\n","hierarchy-solid-do":"import Button from \"@mittwald/flow-react-components/Button\";\n\n<Row>\n  <Button color=\"secondary\">\n    Speichern & weitere anlegen\n  </Button>\n  <Button color=\"accent\">Anlegen</Button>\n</Row>;\n","icon-clarity-do":"import Button from \"@mittwald/flow-react-components/Button\";\nimport TextField from \"@mittwald/flow-react-components/TextField\";\nimport {\n  IconFilter,\n  IconSorting,\n} from \"@mittwald/flow-react-components/Icons\";\n\n<Row>\n  <TextField value=\"Suche\" />\n  <Button variant=\"plain\">\n    <IconSorting />\n  </Button>\n  <Button variant=\"plain\">\n    <IconFilter />\n  </Button>\n  <Button variant=\"outline\">\n    <IconFilter />\n  </Button>\n</Row>;\n","icon-clarity-dont":"import Button from \"@mittwald/flow-react-components/Button\";\nimport TextField from \"@mittwald/flow-react-components/TextField\";\nimport { IconCat, IconDog } from \"@tabler/icons-react\";\nimport Icon from \"@mittwald/flow-react-components/Icon\";\n\n<Row>\n  <TextField value=\"Suche\" />\n  <Button variant=\"plain\">\n    <Icon>\n      <IconCat />\n    </Icon>\n  </Button>\n  <Button variant=\"plain\">\n    <Icon>\n      <IconDog />\n    </Icon>\n  </Button>\n  <Button variant=\"outline\">\n    <Icon>\n      <IconDog />\n    </Icon>\n  </Button>\n</Row>;\n","icon-context-menu-do":"import Button from \"@mittwald/flow-react-components/Button\";\nimport Text from \"@mittwald/flow-react-components/Text\";\nimport {\n  ContextMenu,\n  ContextMenuTrigger,\n} from \"@mittwald/flow-react-components/ContextMenu\";\nimport MenuItem from \"@mittwald/flow-react-components/MenuItem\";\nimport {\n  IconChevronDown,\n  IconEmail,\n} from \"@mittwald/flow-react-components/Icons\";\nimport { IconAt } from \"@tabler/icons-react\";\nimport { Icon } from \"@mittwald/flow-react-components/Icon\";\n\n<ContextMenuTrigger>\n  <Button color=\"accent\">\n    <Text>E-Mail-Addresse anlegen</Text>\n    <IconChevronDown />\n  </Button>\n  <ContextMenu>\n    <MenuItem id=\"1\">\n      <Icon>\n        <IconAt />\n      </Icon>\n      <Text>Weiterleitungsaddresse</Text>\n    </MenuItem>\n    <MenuItem id=\"2\">\n      <IconEmail />\n      <Text>E-Mail-Adresse</Text>\n    </MenuItem>\n  </ContextMenu>\n</ContextMenuTrigger>;\n","icon":"import Button from \"@mittwald/flow-react-components/Button\";\nimport { IconHome } from \"@mittwald/flow-react-components/Icons\";\n\n<Row>\n  <Button size=\"s\" aria-label=\"Home\">\n    <IconHome />\n  </Button>\n  <Button aria-label=\"Home\">\n    <IconHome />\n  </Button>\n</Row>;\n","iconText":"import Button from \"@mittwald/flow-react-components/Button\";\nimport Text from \"@mittwald/flow-react-components/Text\";\nimport {\n  IconChevronDown,\n  IconClose,\n} from \"@mittwald/flow-react-components/Icons\";\n\n<Row>\n  <Button size=\"s\">\n    <Text>E-Mail hinzufügen</Text>\n    <IconChevronDown />\n  </Button>\n  <Button>\n    <Text>E-Mail hinzufügen</Text>\n    <IconChevronDown />\n  </Button>\n  <Button size=\"s\">\n    <Text>Filter</Text>\n    <IconClose />\n  </Button>\n  <Button>\n    <Text>Filter</Text>\n    <IconClose />\n  </Button>\n</Row>;\n","light":"import Button from \"@mittwald/flow-react-components/Button\";\n\n<Row>\n  <Button color=\"light\">Light</Button>\n  <Button variant=\"soft\" color=\"light\">\n    Light\n  </Button>\n  <Button variant=\"plain\" color=\"light\">\n    Light\n  </Button>\n  <Button variant=\"outline\" color=\"light\">\n    Light\n  </Button>\n</Row>;\n","mobile-width-group-do":"import Button from \"@mittwald/flow-react-components/Button\";\nimport TextField from \"@mittwald/flow-react-components/TextField\";\nimport Label from \"@mittwald/flow-react-components/Label\";\nimport Heading from \"@mittwald/flow-react-components/Heading\";\nimport ActionGroup from \"@mittwald/flow-react-components/ActionGroup\";\n\n<StaticModal>\n  <header className=\"flow--modal--header\">\n    <Heading>Projekt anlegen</Heading>\n  </header>\n  <div className=\"flow--modal--content\">\n    <TextField>\n      <Label>Projekt Name</Label>\n    </TextField>\n  </div>\n  <ActionGroup className=\"flow--modal--action-group\">\n    <Button>Weiter</Button>\n    <Button variant=\"soft\" color=\"secondary\">\n      Abbrechen\n    </Button>\n  </ActionGroup>\n</StaticModal>;\n","mobile-width-standard-do":"import Button from \"@mittwald/flow-react-components/Button\";\nimport HeaderNavigation from \"@mittwald/flow-react-components/HeaderNavigation\";\nimport {\n  IconMenu,\n  IconSearch,\n  IconSupport,\n} from \"@mittwald/flow-react-components/Icons\";\nimport LayoutCard from \"@mittwald/flow-react-components/LayoutCard\";\nimport Heading from \"@mittwald/flow-react-components/Heading\";\nimport Text from \"@mittwald/flow-react-components/Text\";\nimport Section from \"@mittwald/flow-react-components/Section\";\n\n<Section style={{ height: \"100%\" }}>\n  <HeaderNavigation\n    aria-label=\"Header navigation\"\n    color=\"light\"\n    style={{ alignSelf: \"flex-end\" }}\n  >\n    <Button>\n      <IconSearch />\n    </Button>\n    <Button>\n      <IconSupport />\n    </Button>\n    <Button>\n      <IconMenu />\n    </Button>\n  </HeaderNavigation>\n  <Button color=\"accent\">Projekt anlegen</Button>\n  <LayoutCard style={{ width: \"100%\", flexGrow: \"1\" }}>\n    <Heading>Projekte</Heading>\n    <Text>...</Text>\n  </LayoutCard>\n</Section>;\n","position-info":"import Button from \"@mittwald/flow-react-components/Button\";\nimport LayoutCard from \"@mittwald/flow-react-components/LayoutCard\";\nimport Section from \"@mittwald/flow-react-components/Section\";\nimport Heading from \"@mittwald/flow-react-components/Heading\";\nimport Text from \"@mittwald/flow-react-components/Text\";\n\n<Column>\n  <Button color=\"accent\" style={{ alignSelf: \"flex-end\" }}>\n    App anlegen\n  </Button>\n  <LayoutCard style={{ width: \"100%\" }}>\n    <Section>\n      <Heading>Apps</Heading>\n      <Text>...</Text>\n    </Section>\n  </LayoutCard>\n</Column>;\n","sizes-dont":"import Button from \"@mittwald/flow-react-components/Button\";\n\n<Row>\n  <Button>Weiter</Button>\n  <Button size=\"s\">Weiter</Button>\n  <Button size=\"s\">Weiter</Button>\n</Row>;\n","sizes":"import Button from \"@mittwald/flow-react-components/Button\";\n\n<Row>\n  <Button size=\"s\">Small</Button>\n  <Button>Medium</Button>\n</Row>;\n","states":"import Button from \"@mittwald/flow-react-components/Button\";\n\n<Row>\n  <Button isDisabled>Fortfahren/Aktion</Button>\n  <Button isPending>Fortfahren/Aktion</Button>\n  <Button isSucceeded>Fortfahren/Aktion</Button>\n  <Button isFailed>Fortfahren/Aktion</Button>\n</Row>;\n","text-clarity-do":"import Heading from \"@mittwald/flow-react-components/Heading\";\nimport ActionGroup from \"@mittwald/flow-react-components/ActionGroup\";\nimport Button from \"@mittwald/flow-react-components/Button\";\nimport Text from \"@mittwald/flow-react-components/Text\";\n\n<StaticModal>\n  <header className=\"flow--modal--header\">\n    <Heading>\n      Möchtest du die Bestellung wirklich verlassen?\n    </Heading>\n  </header>\n  <div className=\"flow--modal--content\">\n    <Text>\n      Bist du sicher, dass du die Bestellung wirklich\n      verlassen möchtest? Deine eingegebenen Daten werden\n      nicht gespeichert.\n    </Text>\n  </div>\n  <ActionGroup className=\"flow--modal--action-group\">\n    <Button color=\"secondary\" variant=\"soft\">\n      Bestellung fortsetzen\n    </Button>\n    <Button color=\"danger\">Bestellung verlassen</Button>\n  </ActionGroup>\n</StaticModal>;\n","text-clarity-dont":"import Button from \"@mittwald/flow-react-components/Button\";\nimport Heading from \"@mittwald/flow-react-components/Heading\";\nimport Text from \"@mittwald/flow-react-components/Text\";\nimport ActionGroup from \"@mittwald/flow-react-components/ActionGroup\";\n\n<StaticModal>\n  <header className=\"flow--modal--header\">\n    <Heading>\n      Möchtest du die Bestellung wirklich verlassen?\n    </Heading>\n  </header>\n  <div className=\"flow--modal--content\">\n    <Text>\n      Bist du sicher, dass du die Bestellung wirklich\n      verlassen möchtest? Deine eingegebenen Daten werden\n      nicht gespeichert.\n    </Text>\n  </div>\n  <ActionGroup className=\"flow--modal--action-group\">\n    <Button color=\"secondary\" variant=\"soft\">\n      Abbrechen\n    </Button>\n    <Button color=\"danger\">Verlassen</Button>\n  </ActionGroup>\n</StaticModal>;\n","text-length-do":"import Button from \"@mittwald/flow-react-components/Button\";\n\n<Button color=\"accent\">Projekt anpassen</Button>;\n","text-length-dont":"import Button from \"@mittwald/flow-react-components/Button\";\n\n<Button color=\"accent\">\n  Projekt und\n  <br />\n  Tarif anpassen\n</Button>;\n","variants":"import Button from \"@mittwald/flow-react-components/Button\";\n\n<Row>\n  <Button>Solid</Button>\n  <Button variant=\"soft\">Soft</Button>\n  <Button variant=\"plain\">Plain</Button>\n  <Button variant=\"outline\">Outline</Button>\n</Row>;\n"},"slugs":["03-components","actions","button"],"filename":"03-components/actions/button/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"ContextMenu","description":"Beim ContextMenu handelt es sich um ein Popover, das eine Liste von Aktionen oder Verlinkungen enthält."},"scope":{}},"examples":{"default":"import ContextMenu, {\n  ContextMenuTrigger,\n} from \"@mittwald/flow-react-components/ContextMenu\";\nimport Button from \"@mittwald/flow-react-components/Button\";\nimport MenuItem from \"@mittwald/flow-react-components/MenuItem\";\n\n<ContextMenuTrigger>\n  <Button>Trigger</Button>\n  <ContextMenu\n    onAction={(id) => {\n      alert(id);\n    }}\n  >\n    <MenuItem id=\"1\">Item 1</MenuItem>\n    <MenuItem id=\"2\">Item 2</MenuItem>\n    <MenuItem id=\"3\">Item 3</MenuItem>\n  </ContextMenu>\n</ContextMenuTrigger>;\n","icon":"import ContextMenu, {\n  ContextMenuTrigger,\n} from \"@mittwald/flow-react-components/ContextMenu\";\nimport Button from \"@mittwald/flow-react-components/Button\";\nimport MenuItem from \"@mittwald/flow-react-components/MenuItem\";\nimport { IconInfo } from \"@mittwald/flow-react-components/Icons\";\nimport Text from \"@mittwald/flow-react-components/Text\";\n\n<ContextMenuTrigger>\n  <Button>Trigger</Button>\n  <ContextMenu\n    onAction={(id) => {\n      alert(id);\n    }}\n  >\n    <MenuItem id=\"1\">\n      <IconInfo />\n      <Text>Item 1</Text>\n    </MenuItem>\n    <MenuItem id=\"2\">\n      <IconInfo />\n      <Text>Item 2</Text>\n    </MenuItem>\n    <MenuItem id=\"3\">\n      <IconInfo />\n      <Text>Item 3</Text>\n    </MenuItem>\n  </ContextMenu>\n</ContextMenuTrigger>;\n","multi-select":"import ContextMenu, {\n  ContextMenuTrigger,\n} from \"@mittwald/flow-react-components/ContextMenu\";\nimport Button from \"@mittwald/flow-react-components/Button\";\nimport MenuItem from \"@mittwald/flow-react-components/MenuItem\";\n\n<ContextMenuTrigger>\n  <Button>Trigger</Button>\n  <ContextMenu\n    selectionMode=\"multiple\"\n    defaultSelectedKeys={[\"item2\", \"item3\"]}\n  >\n    <MenuItem id=\"item1\">Item 1</MenuItem>\n    <MenuItem id=\"item2\">Item 2</MenuItem>\n    <MenuItem id=\"item3\">Item 3</MenuItem>\n  </ContextMenu>\n</ContextMenuTrigger>;\n","section":"import ContextMenu, {\n  ContextMenuTrigger,\n} from \"@mittwald/flow-react-components/ContextMenu\";\nimport Button from \"@mittwald/flow-react-components/Button\";\nimport MenuItem from \"@mittwald/flow-react-components/MenuItem\";\nimport Heading from \"@mittwald/flow-react-components/Heading\";\nimport Separator from \"@mittwald/flow-react-components/Separator\";\nimport Section from \"@mittwald/flow-react-components/Section\";\n\n<ContextMenuTrigger>\n  <Button>Trigger</Button>\n  <ContextMenu>\n    <Section>\n      <Heading>Section 1</Heading>\n      <MenuItem id=\"1\">Item 1</MenuItem>\n      <MenuItem id=\"2\">Item 2</MenuItem>\n      <MenuItem id=\"3\">Item 3</MenuItem>\n    </Section>\n    <Separator />\n    <Section>\n      <Heading>Section 2</Heading>\n      <MenuItem id=\"4\">Item 4</MenuItem>\n      <MenuItem id=\"5\">Item 5</MenuItem>\n    </Section>\n  </ContextMenu>\n</ContextMenuTrigger>;\n","separator":"import ContextMenu, {\n  ContextMenuTrigger,\n} from \"@mittwald/flow-react-components/ContextMenu\";\nimport Button from \"@mittwald/flow-react-components/Button\";\nimport MenuItem from \"@mittwald/flow-react-components/MenuItem\";\nimport Separator from \"@mittwald/flow-react-components/Separator\";\n\n<ContextMenuTrigger>\n  <Button>Trigger</Button>\n  <ContextMenu>\n    <MenuItem id=\"1\">Item 1</MenuItem>\n    <Separator />\n    <MenuItem id=\"2\">Item 2</MenuItem>\n    <MenuItem id=\"3\">Item 3</MenuItem>\n  </ContextMenu>\n</ContextMenuTrigger>;\n","single-select":"import ContextMenu, {\n  ContextMenuTrigger,\n} from \"@mittwald/flow-react-components/ContextMenu\";\nimport Button from \"@mittwald/flow-react-components/Button\";\nimport MenuItem from \"@mittwald/flow-react-components/MenuItem\";\n\n<ContextMenuTrigger>\n  <Button>Trigger</Button>\n  <ContextMenu\n    selectionMode=\"single\"\n    defaultSelectedKeys={[\"item2\"]}\n  >\n    <MenuItem id=\"item1\">Item 1</MenuItem>\n    <MenuItem id=\"item2\">Item 2</MenuItem>\n    <MenuItem id=\"item3\">Item 3</MenuItem>\n  </ContextMenu>\n</ContextMenuTrigger>;\n","width":"import ContextMenu, {\n  ContextMenuTrigger,\n} from \"@mittwald/flow-react-components/ContextMenu\";\nimport Button from \"@mittwald/flow-react-components/Button\";\nimport MenuItem from \"@mittwald/flow-react-components/MenuItem\";\n\n<ContextMenuTrigger>\n  <Button>Trigger</Button>\n  <ContextMenu\n    width={300}\n    onAction={(id) => {\n      alert(id);\n    }}\n  >\n    <MenuItem id=\"1\">Mein Projekt</MenuItem>\n    <MenuItem id=\"2\">Mein zweites Projekt</MenuItem>\n    <MenuItem id=\"3\">\n      Mein drittes Projekt mit einem sehr langen Namen\n    </MenuItem>\n  </ContextMenu>\n</ContextMenuTrigger>;\n"},"slugs":["03-components","actions","context-menu"],"filename":"03-components/actions/context-menu/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"CopyButton","description":"Der CopyButton dient dazu Informationen in die Zwischenablage zu kopieren."},"scope":{}},"examples":{"default":"import CopyButton from \"@mittwald/flow-react-components/CopyButton\";\n\n<CopyButton text=\"Kopierter Inhalt\" />;\n"},"slugs":["03-components","actions","copy-button"],"filename":"03-components/actions/copy-button/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"Avatar","description":"Der Avatar kann ein Bild, Initialen oder ein Icon darstellen."},"scope":{}},"examples":{"colors":"import Avatar from \"@mittwald/flow-react-components/Avatar\";\nimport Initials from \"@mittwald/flow-react-components/Initials\";\nimport {\n  IconCustomer,\n  IconHome,\n} from \"@mittwald/flow-react-components/Icons\";\n\n<Row>\n  <Avatar>\n    <Initials>Gillian Gopher</Initials>\n  </Avatar>\n  <Avatar>\n    <Initials>Gina-Lisa Gopher</Initials>\n  </Avatar>\n  <Avatar color=\"lilac\">\n    <Initials>Gilian Gopher</Initials>\n  </Avatar>\n  <Avatar>\n    <IconHome />\n  </Avatar>\n  <Avatar>\n    <IconCustomer />\n  </Avatar>\n</Row>;\n","default":"import Avatar from \"@mittwald/flow-react-components/Avatar\";\nimport Initials from \"@mittwald/flow-react-components/Initials\";\n\n<Avatar>\n  <Initials>Gillian Gopher</Initials>\n</Avatar>;\n","icon":"import { IconHome } from \"@mittwald/flow-react-components/Icons\";\nimport Avatar from \"@mittwald/flow-react-components/Avatar\";\n\n<Avatar color=\"blue\">\n  <IconHome />\n</Avatar>;\n","image":"import Avatar from \"@mittwald/flow-react-components/Avatar\";\nimport Image from \"@mittwald/flow-react-components/Image\";\n\n<Avatar>\n  <Image\n    alt=\"Gopher\"\n    src=\"https://cdn.shopify.com/s/files/1/2022/6883/products/IMG_2002_250x250@2x.JPG?v=1538235544\"\n  />\n</Avatar>;\n","sizes":"import Avatar from \"@mittwald/flow-react-components/Avatar\";\nimport Initials from \"@mittwald/flow-react-components/Initials\";\n\n<Row>\n  <Avatar size=\"xs\">\n    <Initials>Gillian Gopher</Initials>\n  </Avatar>\n  <Avatar size=\"s\">\n    <Initials>Gillian Gopher</Initials>\n  </Avatar>\n  <Avatar size=\"m\">\n    <Initials>Gillian Gopher</Initials>\n  </Avatar>\n  <Avatar size=\"l\">\n    <Initials>Gillian Gopher</Initials>\n  </Avatar>\n</Row>;\n"},"slugs":["03-components","content","avatar"],"filename":"03-components/content/avatar/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"CodeBlock","description":"Der CodeBlock wird verwendet, um Code als Block mit Syntax-Highlighting darzustellen."},"scope":{}},"examples":{"copyable":"import CodeBlock from \"@mittwald/flow-react-components/CodeBlock\";\n\n<CodeBlock\n  copyable\n  language=\"json\"\n  code={`{\n    \"projectId\": \"b3a96db5-ba8f-40dd-9100-bab43ac1f698\",\n    \"name\": \"My Project\"\n}`}\n/>;\n","dark":"import CodeBlock from \"@mittwald/flow-react-components/CodeBlock\";\n\n<CodeBlock\n  color=\"dark\"\n  language=\"json\"\n  code={`{\n    \"projectId\": \"b3a96db5-ba8f-40dd-9100-bab43ac1f698\",\n    \"name\": \"My Project\"\n}`}\n/>;\n","default":"import CodeBlock from \"@mittwald/flow-react-components/CodeBlock\";\n\n<CodeBlock\n  language=\"json\"\n  code={`{\n    \"projectId\": \"b3a96db5-ba8f-40dd-9100-bab43ac1f698\",\n    \"name\": \"My Project\"\n}`}\n/>;\n","light":"import CodeBlock from \"@mittwald/flow-react-components/CodeBlock\";\n\n<CodeBlock\n  color=\"light\"\n  language=\"json\"\n  code={`{\n    \"projectId\": \"b3a96db5-ba8f-40dd-9100-bab43ac1f698\",\n    \"name\": \"My Project\"\n}`}\n/>;\n","lineNumbers":"import CodeBlock from \"@mittwald/flow-react-components/CodeBlock\";\n\n<CodeBlock\n  showLineNumbers\n  language=\"json\"\n  code={`{\n    \"projectId\": \"b3a96db5-ba8f-40dd-9100-bab43ac1f698\",\n    \"name\": \"My Project\"\n}`}\n/>;\n"},"slugs":["03-components","content","code-block"],"filename":"03-components/content/code-block/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"Heading","description":"Die Heading-Komponente wird verwendet, um Überschriften anzuzeigen"},"scope":{}},"examples":{"contextualHelp":"import Heading from \"@mittwald/flow-react-components/Heading\";\nimport Button from \"@mittwald/flow-react-components/Button\";\nimport {\n  ContextualHelp,\n  ContextualHelpTrigger,\n} from \"@mittwald/flow-react-components/ContextualHelp\";\nimport Text from \"@mittwald/flow-react-components/Text\";\n\n<Heading>\n  Rechte & Rollen\n  <ContextualHelpTrigger>\n    <Button />\n    <ContextualHelp>\n      <Text>\n        Weitere Informationen zum Thema Rechte & Rollen\n      </Text>\n    </ContextualHelp>\n  </ContextualHelpTrigger>\n</Heading>;\n","dark":"import Heading from \"@mittwald/flow-react-components/Heading\";\n\n<Heading color=\"dark\">Das ist eine Überschrift</Heading>;\n","default":"import Heading from \"@mittwald/flow-react-components/Heading\";\n\n<Heading>Das ist eine Überschrift</Heading>;\n","icon":"import Heading from \"@mittwald/flow-react-components/Heading\";\nimport { IconMember } from \"@mittwald/flow-react-components/Icons\";\n\n<Heading>\n  <IconMember />\n  Persönliche Informationen\n</Heading>;\n","levels":"import Heading from \"@mittwald/flow-react-components/Heading\";\n\n<>\n  <Heading level={1}>\n    Das ist eine Level 1 Überschrift\n  </Heading>\n  <Heading level={2}>\n    Das ist eine Level 2 Überschrift\n  </Heading>\n  <Heading level={3}>\n    Das ist eine Level 3 Überschrift\n  </Heading>\n  <Heading level={4}>\n    Das ist eine Level 4 Überschrift\n  </Heading>\n  <Heading level={5}>\n    Das ist eine Level 5 Überschrift\n  </Heading>\n</>;\n","light":"import Heading from \"@mittwald/flow-react-components/Heading\";\n\n<Heading color=\"light\">Das ist eine Überschrift</Heading>;\n","size":"import Heading from \"@mittwald/flow-react-components/Heading\";\n\n<Heading level={2} size=\"xs\">\n  Das ist eine Überschrift für die eine benutzerdefinierte\n  Größe gesetzt wurde\n</Heading>;\n"},"slugs":["03-components","content","heading"],"filename":"03-components/content/heading/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"Icon","description":"Die Icon-Komponente unterstützt Tabler Icons sowie benutzerdefinierte SVGs."},"scope":{}},"examples":{"decorative":"$1f","default":"import { IconHome } from \"@mittwald/flow-react-components/Icons\";\n\n<IconHome />;\n","functional":"$20","sizes":"import { IconHome } from \"@mittwald/flow-react-components/Icons\";\n\n<Row>\n  <IconHome size=\"s\" />\n  <IconHome size=\"m\" />\n  <IconHome size=\"l\" />\n</Row>;\n","states":"import LabeledValue from \"@mittwald/flow-react-components/LabeledValue\";\nimport ColumnLayout from \"@mittwald/flow-react-components/ColumnLayout\";\nimport Label from \"@mittwald/flow-react-components/Label\";\nimport {\n  IconDanger,\n  IconFailed,\n  IconInfo,\n  IconPending,\n  IconSucceeded,\n  IconSuccess,\n  IconWarning,\n} from \"@mittwald/flow-react-components/Icons\";\n\n<ColumnLayout l={[1, 1, 1, 1, 1]} m={[1, 1, 1]} s={[1, 1]}>\n  <LabeledValue>\n    <Label>Danger</Label>\n    <IconDanger />\n  </LabeledValue>\n  <LabeledValue>\n    <Label>Warning</Label>\n    <IconWarning />\n  </LabeledValue>\n  <LabeledValue>\n    <Label>Success</Label>\n    <IconSuccess />\n  </LabeledValue>\n  <LabeledValue>\n    <Label>Info</Label>\n    <IconInfo />\n  </LabeledValue>\n  <LabeledValue>\n    <Label>Pending</Label>\n    <IconPending />\n  </LabeledValue>\n  <LabeledValue>\n    <Label>Failed</Label>\n    <IconFailed />\n  </LabeledValue>\n  <LabeledValue>\n    <Label>Succeeded</Label>\n    <IconSucceeded />\n  </LabeledValue>\n</ColumnLayout>;\n","svg-string":"import Icon from \"@mittwald/flow-react-components/Icon\";\n\nexport default () => {\n  const svgString = `\\\n    <svg viewBox=\"0 0 100 100\" xmlns=\"http://www.w3.org/2000/svg\">\n      <circle cx=\"50\" cy=\"50\" r=\"50\" />\n    </svg>\n  `;\n\n  return <Icon>{svgString}</Icon>;\n};\n","svg":"import Icon from \"@mittwald/flow-react-components/Icon\";\n\n<Icon>\n  <svg\n    viewBox=\"0 0 100 100\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <circle cx=\"50\" cy=\"50\" r=\"50\" />\n  </svg>\n</Icon>;\n","tabler":"import Icon from \"@mittwald/flow-react-components/Icon\";\nimport { IconStar } from \"@tabler/icons-react\";\n\n<Icon>\n  <IconStar />\n</Icon>;\n"},"slugs":["03-components","content","icon"],"filename":"03-components/content/icon/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true,\n    zoom: 0.7\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"IllustratedMessage","description":"Die IllustratedMessage dient als Platzhalter, wenn der eigentliche Inhalt nicht angezeigt werden kann."},"scope":{}},"examples":{"actionGroup":"import Heading from \"@mittwald/flow-react-components/Heading\";\nimport IllustratedMessage from \"@mittwald/flow-react-components/IllustratedMessage\";\nimport { IconApp } from \"@mittwald/flow-react-components/Icons\";\nimport Text from \"@mittwald/flow-react-components/Text\";\nimport Button from \"@mittwald/flow-react-components/Button\";\nimport ActionGroup from \"@mittwald/flow-react-components/ActionGroup\";\n\n<IllustratedMessage>\n  <IconApp />\n  <Heading>Keine Apps installiert</Heading>\n  <Text>\n    Lege deine erste App an, um mit der Arbeit an deiner\n    Webseite loszulegen.\n  </Text>\n  <ActionGroup>\n    <Button variant=\"soft\" color=\"secondary\">\n      Zurück\n    </Button>\n    <Button>App anlegen</Button>\n  </ActionGroup>\n</IllustratedMessage>;\n","dark":"import Heading from \"@mittwald/flow-react-components/Heading\";\nimport IllustratedMessage from \"@mittwald/flow-react-components/IllustratedMessage\";\nimport { IconApp } from \"@mittwald/flow-react-components/Icons\";\nimport Text from \"@mittwald/flow-react-components/Text\";\nimport Button from \"@mittwald/flow-react-components/Button\";\n\n<IllustratedMessage color=\"dark\">\n  <IconApp />\n  <Heading>Keine Apps installiert</Heading>\n  <Text>\n    Lege deine erste App an, um mit der Arbeit an deiner\n    Webseite loszulegen.\n  </Text>\n  <Button>App anlegen</Button>\n</IllustratedMessage>;\n","default":"import Heading from \"@mittwald/flow-react-components/Heading\";\nimport IllustratedMessage from \"@mittwald/flow-react-components/IllustratedMessage\";\nimport { IconApp } from \"@mittwald/flow-react-components/Icons\";\nimport Text from \"@mittwald/flow-react-components/Text\";\nimport Button from \"@mittwald/flow-react-components/Button\";\n\n<IllustratedMessage>\n  <IconApp />\n  <Heading>Keine Apps installiert</Heading>\n  <Text>\n    Lege deine erste App an, um mit der Arbeit an deiner\n    Webseite loszulegen.\n  </Text>\n  <Button>App anlegen</Button>\n</IllustratedMessage>;\n","light":"import Heading from \"@mittwald/flow-react-components/Heading\";\nimport IllustratedMessage from \"@mittwald/flow-react-components/IllustratedMessage\";\nimport { IconApp } from \"@mittwald/flow-react-components/Icons\";\nimport Text from \"@mittwald/flow-react-components/Text\";\nimport Button from \"@mittwald/flow-react-components/Button\";\n\n<IllustratedMessage color=\"light\">\n  <IconApp />\n  <Heading>Keine Apps installiert</Heading>\n  <Text>\n    Lege deine erste App an, um mit der Arbeit an deiner\n    Webseite loszulegen.\n  </Text>\n  <Button>App anlegen</Button>\n</IllustratedMessage>;\n","negative":"import Heading from \"@mittwald/flow-react-components/Heading\";\nimport IllustratedMessage from \"@mittwald/flow-react-components/IllustratedMessage\";\nimport { IconDanger } from \"@mittwald/flow-react-components/Icons\";\nimport Text from \"@mittwald/flow-react-components/Text\";\nimport Button from \"@mittwald/flow-react-components/Button\";\n\n<IllustratedMessage color=\"danger\">\n  <IconDanger />\n  <Heading>Kein Zugriff</Heading>\n  <Text>\n    Du hast keine Berechtigung, um auf diese Seite\n    zuzugreifen.\n  </Text>\n  <Button>Zum Dashboard</Button>\n</IllustratedMessage>;\n"},"slugs":["03-components","content","illustrated-message"],"filename":"03-components/content/illustrated-message/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"Image","description":"Mit der Image-Komponente können Bilder angezeigt werden."},"scope":{}},"examples":{"default":"import Image from \"@mittwald/flow-react-components/Image\";\n\n<Image\n  src=\"https://mittwald.github.io/flow/assets/mittwald_logo_rgb.jpg\"\n  alt=\"mittwald\"\n  width={200}\n/>;\n"},"slugs":["03-components","content","image"],"filename":"03-components/content/image/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"InlineCode","description":"InlineCode wird verwendet, um Code innerhalb eines Textes anzuzeigen."},"scope":{}},"examples":{"dark":"import Text from \"@mittwald/flow-react-components/Text\";\nimport InlineCode from \"@mittwald/flow-react-components/InlineCode\";\n\n<Text>\n  Gib <InlineCode color=\"dark\">yarn start</InlineCode> ein\n  um deine App zu starten.\n</Text>;\n","default":"import Text from \"@mittwald/flow-react-components/Text\";\nimport InlineCode from \"@mittwald/flow-react-components/InlineCode\";\n\n<Text>\n  Gib <InlineCode>yarn start</InlineCode> ein um deine App\n  zu starten.\n</Text>;\n","light":"import Text from \"@mittwald/flow-react-components/Text\";\nimport InlineCode from \"@mittwald/flow-react-components/InlineCode\";\n\n<Text color=\"light\">\n  Gib <InlineCode color=\"light\">yarn start</InlineCode> ein\n  um deine App zu starten.\n</Text>;\n"},"slugs":["03-components","content","inline-code"],"filename":"03-components/content/inline-code/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"Label","description":"Labels werden in Formularen (z.B. TextField, NumberField) oder beim LabeledValue verwendet. Dort erläutern sie die Eingabeanforderungen oder setzen Informationen in einen Kontext."},"scope":{}},"examples":{"default":"import Label from \"@mittwald/flow-react-components/Label\";\n\n<Label>Label</Label>;\n","do":"import Label from \"@mittwald/flow-react-components/Label\";\n\n<Column>\n  <Label>Vorname</Label>\n  <Label>E-Mail</Label>\n  <Label>Verknüpfte App</Label>\n  <Label>Datenbankbenutzer</Label>\n</Column>;\n","dont":"import Label from \"@mittwald/flow-react-components/Label\";\n\n<Column>\n  <Label>Bitte gib deinen Vornamen ein</Label>\n  <Label>E-Mail (name@mail.de)</Label>\n  <Label>\n    Mit welcher App ist die Datenbank verknüpft?\n  </Label>\n  <Label>Datenbankbenutzer:</Label>\n</Column>;\n","states":"import Label from \"@mittwald/flow-react-components/Label\";\n\n<Row>\n  <Label>Default</Label>\n  <Label isDisabled>Disabled</Label>\n</Row>;\n","usage":"import Section from \"@mittwald/flow-react-components/Section\";\nimport Heading from \"@mittwald/flow-react-components/Heading\";\nimport Switch from \"@mittwald/flow-react-components/Switch\";\nimport Header from \"@mittwald/flow-react-components/Header\";\nimport Text from \"@mittwald/flow-react-components/Text\";\nimport ColumnLayout from \"@mittwald/flow-react-components/ColumnLayout\";\nimport TextField from \"@mittwald/flow-react-components/TextField\";\nimport Label from \"@mittwald/flow-react-components/Label\";\nimport LabeledValue from \"@mittwald/flow-react-components/LabeledValue\";\n\n<Section>\n  <Header>\n    <Heading>Cronjob</Heading>\n    <Switch>Aktiviert</Switch>\n  </Header>\n  <ColumnLayout l={[1, 1]}>\n    <TextField>\n      <Label>Beschreibung</Label>\n    </TextField>\n    <LabeledValue>\n      <Label>Nächste Ausführung</Label>\n      <Text>10.06.2024 um 09:25 Uhr</Text>\n    </LabeledValue>\n  </ColumnLayout>\n</Section>;\n"},"slugs":["03-components","content","label"],"filename":"03-components/content/label/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"LabeledValue","description":"Das LabeledValue zeigt eine statische Information und setzt sie durch ein beschreibendes Label in den passenden Kontext."},"scope":{}},"examples":{"copy-button":"import LabeledValue from \"@mittwald/flow-react-components/LabeledValue\";\nimport Label from \"@mittwald/flow-react-components/Label\";\nimport Content from \"@mittwald/flow-react-components/Content\";\nimport CopyButton from \"@mittwald/flow-react-components/CopyButton\";\nimport Link from \"@mittwald/flow-react-components/Link\";\nimport Text from \"@mittwald/flow-react-components/Text\";\nimport { IconExternalLink } from \"@mittwald/flow-react-components/Icons\";\n\n<Row>\n  <LabeledValue>\n    <Label>Short-ID</Label>\n    <Content>p-wut3uw</Content>\n    <CopyButton text=\"p-wut3uw\" />\n  </LabeledValue>\n\n  <LabeledValue>\n    <Label>Datenbankserver</Label>\n    <Content>\n      mysql-kq3v4g.ge-s-hopovh.db.project.host\n    </Content>\n    <CopyButton text=\"mysql-kq3v4g.ge-s-hopovh.db.project.host\" />\n  </LabeledValue>\n\n  <LabeledValue>\n    <Label>Projektdomain</Label>\n    <Link>\n      <Text>p-lol3qe.project.space</Text>\n      <IconExternalLink />\n    </Link>\n    <CopyButton text=\"p-lol3qe.project.space\" />\n  </LabeledValue>\n</Row>;\n","default":"import LabeledValue from \"@mittwald/flow-react-components/LabeledValue\";\nimport Label from \"@mittwald/flow-react-components/Label\";\nimport Content from \"@mittwald/flow-react-components/Content\";\n\n<LabeledValue>\n  <Label>Speicherplatz</Label>\n  <Content>20 GB</Content>\n</LabeledValue>;\n","do":"$21","dont":"$22","inline-code":"import LabeledValue from \"@mittwald/flow-react-components/LabeledValue\";\nimport Label from \"@mittwald/flow-react-components/Label\";\nimport InlineCode from \"@mittwald/flow-react-components/InlineCode\";\n\n<LabeledValue>\n  <Label>Datenbankserver</Label>\n  <InlineCode>\n    mysql-kq3v4g.ge-s-hopovh.db.project.host\n  </InlineCode>\n</LabeledValue>;\n","link":"import LabeledValue from \"@mittwald/flow-react-components/LabeledValue\";\nimport Label from \"@mittwald/flow-react-components/Label\";\nimport Link from \"@mittwald/flow-react-components/Link\";\nimport Text from \"@mittwald/flow-react-components/Text\";\nimport { IconExternalLink } from \"@mittwald/flow-react-components/Icons\";\n\n<Row>\n  <LabeledValue>\n    <Label>Server</Label>\n    <Link>MyServ-01</Link>\n  </LabeledValue>\n\n  <LabeledValue>\n    <Label>Projektdomain</Label>\n    <Link>\n      <Text>p-lol3qe.project.space</Text>\n      <IconExternalLink />\n    </Link>\n  </LabeledValue>\n</Row>;\n"},"slugs":["03-components","content","labeled-value"],"filename":"03-components/content/labeled-value/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"Markdown","description":"Verwende die Markdown Komponente um Markdown zu rendern."},"scope":{}},"examples":{"dark":"import { Markdown } from \"@mittwald/flow-react-components/Markdown\";\n\n<Markdown color=\"dark\">\n  Lorem ipsum dolor sit amet **consectetur adipisicing**\n  elit. Cumque eius `quam quas vel voluptas` ullam aliquid\n  [fugit](#).\n</Markdown>;\n","default":"import { Markdown } from \"@mittwald/flow-react-components/Markdown\";\n\n<Markdown>\n  Lorem ipsum dolor sit amet **consectetur adipisicing**\n  elit. Cumque eius `quam quas vel voluptas` ullam aliquid\n  [fugit](#).\n</Markdown>;\n","light":"import { Markdown } from \"@mittwald/flow-react-components/Markdown\";\n\n<Markdown color=\"light\">\n  Lorem ipsum dolor sit amet **consectetur adipisicing**\n  elit. Cumque eius `quam quas vel voluptas` ullam aliquid\n  [fugit](#).\n</Markdown>;\n"},"slugs":["03-components","content","markdown"],"filename":"03-components/content/markdown/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"Message","description":"Verwende die Message Komponente um  Nachrichten, beispielsweise in einem Chat, darzustellen"},"scope":{}},"examples":{"default":"$23","responder":"$24","right":"$25"},"slugs":["03-components","content","message"],"filename":"03-components/content/message/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"Skeleton","description":"Das Skeleton kann als Platzhalter für Content im Ladezustand verwendet werden."},"scope":{}},"examples":{"custom-size":"import Skeleton from \"@mittwald/flow-react-components/Skeleton\";\n\n<Column>\n  <Skeleton style={{ height: \"100px\" }} />\n  <Skeleton\n    style={{\n      height: \"100px\",\n      width: \"100px\",\n      borderRadius: \"50%\",\n    }}\n  />\n</Column>;\n","default":"import Skeleton from \"@mittwald/flow-react-components/Skeleton\";\n\n<Skeleton />;\n"},"slugs":["03-components","content","skeleton"],"filename":"03-components/content/skeleton/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"Text","description":"Die Text-Komponente wird verwendet, um Texte zu gruppieren."},"scope":{}},"examples":{"dark":"import Text from \"@mittwald/flow-react-components/Text\";\n\n<Text color=\"dark\">Das ist ein Text</Text>;\n","default":"import Text from \"@mittwald/flow-react-components/Text\";\n\n<Text>Das ist ein Text</Text>;\n","emulateBoldWidth":"import Text from \"@mittwald/flow-react-components/Text\";\n\n<Column>\n  <Text\n    style={{ borderInline: \"2px solid red\" }}\n    emulateBoldWidth\n  >\n    Das ist ein Text\n  </Text>\n  <Text style={{ borderInline: \"2px solid red\" }}>\n    <strong>Das ist ein Text</strong>\n  </Text>\n</Column>;\n","light":"import Text from \"@mittwald/flow-react-components/Text\";\n\n<Text color=\"light\">Das ist ein Text</Text>;\n"},"slugs":["03-components","content","text"],"filename":"03-components/content/text/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"CheckboxButton","description":"Der CheckboxButton verhält sich wie eine Checkbox."},"scope":{}},"examples":{"default":"import CheckboxButton from \"@mittwald/flow-react-components/CheckboxButton\";\n\n<CheckboxButton>\n  Ich stimme den AGBs zu und bestätige, dass ich die\n  Datenschutzhinweise zur Kenntnis genommen habe.\n</CheckboxButton>;\n"},"slugs":["03-components","form-controls","checkbox-button"],"filename":"03-components/form-controls/checkbox-button/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"CheckboxGroup","description":"Die Checkbox Gruppe enthält eine logisch zusammenhängende Sammlung von Checkboxen"},"scope":{}},"examples":{"buttons":"import CheckboxButton from \"@mittwald/flow-react-components/CheckboxButton\";\nimport CheckboxGroup from \"@mittwald/flow-react-components/CheckboxGroup\";\nimport Label from \"@mittwald/flow-react-components/Label\";\n\n<CheckboxGroup>\n  <Label>Berechtigungen</Label>\n  <CheckboxButton value=\"read\">Lesen</CheckboxButton>\n  <CheckboxButton value=\"write\">Schreiben</CheckboxButton>\n</CheckboxGroup>;\n","customColumns":"import CheckboxButton from \"@mittwald/flow-react-components/CheckboxButton\";\nimport CheckboxGroup from \"@mittwald/flow-react-components/CheckboxGroup\";\nimport Label from \"@mittwald/flow-react-components/Label\";\n\n<CheckboxGroup l={[1, 1]} m={[1]}>\n  <Label>Berechtigungen</Label>\n  <CheckboxButton value=\"read\">Lesen</CheckboxButton>\n  <CheckboxButton value=\"write\">Schreiben</CheckboxButton>\n</CheckboxGroup>;\n","default":"import Checkbox from \"@mittwald/flow-react-components/Checkbox\";\nimport CheckboxGroup from \"@mittwald/flow-react-components/CheckboxGroup\";\nimport Label from \"@mittwald/flow-react-components/Label\";\n\n<CheckboxGroup>\n  <Label>Berechtigungen</Label>\n  <Checkbox value=\"read\">Lesen</Checkbox>\n  <Checkbox value=\"write\">Schreiben</Checkbox>\n</CheckboxGroup>;\n"},"slugs":["03-components","form-controls","checkbox-group"],"filename":"03-components/form-controls/checkbox-group/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"Checkbox","description":"Die Checkbox dient dazu einen Wert zu aus- oder abzuwählen."},"scope":{}},"examples":{"default":"import Checkbox from \"@mittwald/flow-react-components/Checkbox\";\n\n<Checkbox>\n  Ich stimme den AGBs zu und bestätige, dass ich die\n  Datenschutzhinweise zur Kenntnis genommen habe.\n</Checkbox>;\n","disabled":"import Checkbox from \"@mittwald/flow-react-components/Checkbox\";\n\n<Checkbox isDisabled>\n  Ich stimme den AGBs zu und bestätige, dass ich die\n  Datenschutzhinweise zur Kenntnis genommen habe.\n</Checkbox>;\n","indeterminated":"import Checkbox from \"@mittwald/flow-react-components/Checkbox\";\n\n<Checkbox isIndeterminate>\n  Ich stimme den AGBs zu und bestätige, dass ich die\n  Datenschutzhinweise zur Kenntnis genommen habe.\n</Checkbox>;\n"},"slugs":["03-components","form-controls","checkbox"],"filename":"03-components/form-controls/checkbox/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"DatePicker","description":"Der DatePicker wird dafür verwendet ein einzelnes Datum auszuwählen."},"scope":{}},"examples":{"default":"import DatePicker from \"@mittwald/flow-react-components/DatePicker\";\nimport Label from \"@mittwald/flow-react-components/Label\";\n\n<DatePicker>\n  <Label>Datum</Label>\n</DatePicker>;\n","disabled":"import DatePicker from \"@mittwald/flow-react-components/DatePicker\";\nimport Label from \"@mittwald/flow-react-components/Label\";\n\n<DatePicker isDisabled>\n  <Label>Datum</Label>\n</DatePicker>;\n","future":"import DatePicker from \"@mittwald/flow-react-components/DatePicker\";\nimport Label from \"@mittwald/flow-react-components/Label\";\nimport {\n  getLocalTimeZone,\n  today,\n} from \"@internationalized/date\";\n\n<DatePicker minValue={today(getLocalTimeZone())}>\n  <Label>Datum</Label>\n</DatePicker>;\n"},"slugs":["03-components","form-controls","date-picker"],"filename":"03-components/form-controls/date-picker/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"DateRangePicker","description":"Der DateRangePicker wird dafür verwendet eine Zeitspanne zwischen zwei Daten auszuwählen."},"scope":{}},"examples":{"default":"import DateRangePicker from \"@mittwald/flow-react-components/DateRangePicker\";\nimport Label from \"@mittwald/flow-react-components/Label\";\n\n<DateRangePicker>\n  <Label>Zeitraum</Label>\n</DateRangePicker>;\n","disabled":"import DateRangePicker from \"@mittwald/flow-react-components/DateRangePicker\";\nimport Label from \"@mittwald/flow-react-components/Label\";\n\n<DateRangePicker isDisabled>\n  <Label>Zeitraum</Label>\n</DateRangePicker>;\n","future":"import DateRangePicker from \"@mittwald/flow-react-components/DateRangePicker\";\nimport Label from \"@mittwald/flow-react-components/Label\";\nimport {\n  getLocalTimeZone,\n  today,\n} from \"@internationalized/date\";\n\n<DateRangePicker minValue={today(getLocalTimeZone())}>\n  <Label>Zeitraum</Label>\n</DateRangePicker>;\n"},"slugs":["03-components","form-controls","date-range-picker"],"filename":"03-components/form-controls/date-range-picker/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"Field","title":"Field (React Hook Form)","gitHubComponentPath":"integrations/react-hook-form/components/Field/Field.tsx","description":"Die Field Komponente \"verbindet\" Flow Eingabefelder mit React Hook Form."},"scope":{}},"examples":{"default":"import { useForm } from \"react-hook-form\";\nimport {\n  Field,\n  Form,\n} from \"@mittwald/flow-react-components/react-hook-form\";\nimport { TextField } from \"@mittwald/flow-react-components/TextField\";\nimport { Label } from \"@mittwald/flow-react-components/Label\";\nimport { FieldDescription } from \"@mittwald/flow-react-components/FieldDescription\";\n\nexport default () => {\n  interface Values {\n    name: string;\n  }\n  const form = useForm<Values>();\n\n  return (\n    <Form form={form} onSubmit={console.log}>\n      <Field\n        name=\"name\"\n        rules={{\n          required: \"The project name is required\",\n        }}\n      >\n        <TextField>\n          <Label>Name</Label>\n          <FieldDescription>\n            The name of the project\n          </FieldDescription>\n        </TextField>\n      </Field>\n    </Form>\n  );\n};\n","typed-field":"import { useForm } from \"react-hook-form\";\nimport {\n  Form,\n  typedField,\n} from \"@mittwald/flow-react-components/react-hook-form\";\nimport { TextField } from \"@mittwald/flow-react-components/TextField\";\nimport { Label } from \"@mittwald/flow-react-components/Label\";\n\nexport default () => {\n  interface Values {\n    myField: string;\n  }\n  const form = useForm<Values>();\n\n  // Only `myField` is allowed for name prop\n  const Field = typedField(form);\n\n  return (\n    <Form form={form} onSubmit={console.log}>\n      <Field name=\"myField\">\n        <TextField>\n          <Label>Name</Label>\n        </TextField>\n      </Field>\n    </Form>\n  );\n};\n"},"slugs":["03-components","form-controls","field-react-hook-form"],"filename":"03-components/form-controls/field-react-hook-form/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"FileField","description":"Das FileField dient zur Auswahl von Dateien für den Upload."},"scope":{}},"examples":{"default":"import Label from \"@mittwald/flow-react-components/Label\";\nimport { FileField } from \"@mittwald/flow-react-components/FileField\";\nimport { Button } from \"@mittwald/flow-react-components/Button\";\n\n<FileField>\n  <Label>Zertifikat</Label>\n  <Button variant=\"outline\" color=\"secondary\">\n    Auswählen\n  </Button>\n</FileField>;\n","disabled":"import Label from \"@mittwald/flow-react-components/Label\";\nimport { FileField } from \"@mittwald/flow-react-components/FileField\";\nimport { Button } from \"@mittwald/flow-react-components/Button\";\n\n<FileField isDisabled>\n  <Label>Zertifikat</Label>\n  <Button variant=\"outline\" color=\"secondary\">\n    Auswählen\n  </Button>\n</FileField>;\n","invalid":"import Label from \"@mittwald/flow-react-components/Label\";\nimport { FileField } from \"@mittwald/flow-react-components/FileField\";\nimport { Button } from \"@mittwald/flow-react-components/Button\";\nimport { FieldError } from \"@mittwald/flow-react-components/FieldError\";\n\n<FileField isInvalid>\n  <Label>Zertifikat</Label>\n  <Button variant=\"outline\" color=\"secondary\">\n    Auswählen\n  </Button>\n  <FieldError>Die Datei ist zu groß</FieldError>\n</FileField>;\n"},"slugs":["03-components","form-controls","file-field"],"filename":"03-components/form-controls/file-field/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"Form","title":"Form (React Hook Form)","gitHubComponentPath":"integrations/react-hook-form/components/Form/Form.tsx","description":"Die Form Komponente gruppiert Form-Felder und bietet einen Callback für das Abschicken des Formulars an. Diese Komponente ist ausschließlich in Kombintation mit React Hook Form zu verwenden."},"scope":{}},"examples":{"default":"$26"},"slugs":["03-components","form-controls","form-react-hook-form"],"filename":"03-components/form-controls/form-react-hook-form/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"NumberField","description":"Das NumberField dient der Eingabe von Zahlen."},"scope":{}},"examples":{"default":"import NumberField from \"@mittwald/flow-react-components/NumberField\";\nimport Label from \"@mittwald/flow-react-components/Label\";\nimport FieldDescription from \"@mittwald/flow-react-components/FieldDescription\";\n\n<NumberField minValue={0} maxValue={100}>\n  <Label>Alter</Label>\n  <FieldDescription>Gib dein Alter ein</FieldDescription>\n</NumberField>;\n","disabled":"import NumberField from \"@mittwald/flow-react-components/NumberField\";\nimport Label from \"@mittwald/flow-react-components/Label\";\n\n<NumberField isDisabled>\n  <Label>Alter</Label>\n</NumberField>;\n","invalid":"import NumberField from \"@mittwald/flow-react-components/NumberField\";\nimport Label from \"@mittwald/flow-react-components/Label\";\nimport FieldError from \"@mittwald/flow-react-components/FieldError\";\n\n<NumberField isInvalid value={-1}>\n  <Label>Alter</Label>\n  <FieldError>Ungültige Eingabe</FieldError>\n</NumberField>;\n","required":"import NumberField from \"@mittwald/flow-react-components/NumberField\";\nimport Label from \"@mittwald/flow-react-components/Label\";\n\n<NumberField isRequired>\n  <Label>Alter</Label>\n</NumberField>;\n","unit":"import NumberField from \"@mittwald/flow-react-components/NumberField\";\nimport Label from \"@mittwald/flow-react-components/Label\";\n\n<NumberField\n  formatOptions={{\n    style: \"unit\",\n    unit: \"gigabyte\",\n  }}\n  defaultValue={12}\n>\n  <Label>Speicherplatz</Label>\n</NumberField>;\n"},"slugs":["03-components","form-controls","number-field"],"filename":"03-components/form-controls/number-field/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"RadioGroup","description":"Eine RadioGroup ist ein Auswahlelement, das es dem User ermöglicht, genau eine Option aus einer vordefinierten Gruppe auszuwählen."},"scope":{}},"examples":{"buttons":"import Label from \"@mittwald/flow-react-components/Label\";\nimport RadioGroup, {\n  RadioButton,\n} from \"@mittwald/flow-react-components/RadioGroup\";\n\n<RadioGroup defaultValue=\"mysql\">\n  <Label>Datenbank-Typ</Label>\n  <RadioButton value=\"mysql\">MySQL</RadioButton>\n  <RadioButton value=\"redis\">Redis</RadioButton>\n</RadioGroup>;\n","content":"$27","customColumns":"import Label from \"@mittwald/flow-react-components/Label\";\nimport RadioGroup, {\n  RadioButton,\n} from \"@mittwald/flow-react-components/RadioGroup\";\n\n<RadioGroup\n  defaultValue=\"one\"\n  s={[1, 1]}\n  m={[1, 1, 1]}\n  l={[1, 1, 1, 1]}\n>\n  <Label>Benutzerdefinierte Spalten</Label>\n  <RadioButton value=\"one\">Spalte 1</RadioButton>\n  <RadioButton value=\"two\">Spalte 2</RadioButton>\n  <RadioButton value=\"three\">Spalte 3</RadioButton>\n</RadioGroup>;\n","default":"import Label from \"@mittwald/flow-react-components/Label\";\nimport RadioGroup, {\n  Radio,\n} from \"@mittwald/flow-react-components/RadioGroup\";\n\n<RadioGroup defaultValue=\"more\">\n  <Label>Täglicher Kaffeekonsum</Label>\n  <Radio value=\"more\">Mehr als 6 Tassen</Radio>\n  <Radio value=\"5-6\">5-6 Tassen</Radio>\n  <Radio value=\"3-4\">3-4 Tassen</Radio>\n  <Radio value=\"1-2\">1-2 Tassen</Radio>\n  <Radio value=\"none\">Trinke keinen Kaffee</Radio>\n</RadioGroup>;\n","error":"import {\n  RadioButton,\n  RadioGroup,\n} from \"@mittwald/flow-react-components/RadioGroup\";\nimport Label from \"@mittwald/flow-react-components/Label\";\nimport { FieldError } from \"@mittwald/flow-react-components/FieldError\";\n\n<RadioGroup isInvalid>\n  <Label>Datenbank-Typ</Label>\n  <RadioButton value=\"mysql\">MySQL</RadioButton>\n  <RadioButton value=\"redis\">Redis</RadioButton>\n  <FieldError>Bitte wähle eine Option aus</FieldError>\n</RadioGroup>;\n","fieldDescription":"import {\n  Radio,\n  RadioGroup,\n} from \"@mittwald/flow-react-components/RadioGroup\";\nimport { Heading } from \"@mittwald/flow-react-components/Heading\";\nimport { FieldDescription } from \"@mittwald/flow-react-components/FieldDescription\";\n\n<RadioGroup defaultValue=\"more\">\n  <Heading level={4}>\n    Wie viele Pflanzen besitzt du?\n  </Heading>\n  <Radio value=\"more\">Mehr als 9 Pflanzen</Radio>\n  <Radio value=\"6-8\">6-8 Pflanzen</Radio>\n  <Radio value=\"3-5\">3-5 9 Pflanzen</Radio>\n  <Radio value=\"1-2\">1-2 Pflanzen</Radio>\n  <Radio value=\"none\">Keine</Radio>\n  <FieldDescription>\n    Mehrere identische Pflanzen in einem Topf gelten als\n    eine Pflanze.\n  </FieldDescription>\n</RadioGroup>;\n","hierarchyDo":"import {\n  Radio,\n  RadioGroup,\n} from \"@mittwald/flow-react-components/RadioGroup\";\nimport { Label } from \"@mittwald/flow-react-components/Label\";\n\n<div style={{ display: \"flex\", justifyContent: \"center\" }}>\n  <RadioGroup defaultValue=\"espelkamp\">\n    <Label>Wohnort</Label>\n    <Radio value=\"espelkamp\">Espelkamp</Radio>\n    <Radio value=\"minden\">Minden</Radio>\n    <Radio value=\"rahden\">Rahden</Radio>\n    <Radio value=\"others\">Andere</Radio>\n  </RadioGroup>\n</div>;\n","hierarchyDont":"import {\n  Radio,\n  RadioGroup,\n} from \"@mittwald/flow-react-components/RadioGroup\";\nimport { Label } from \"@mittwald/flow-react-components/Label\";\n\n<div style={{ display: \"flex\", justifyContent: \"center\" }}>\n  <RadioGroup defaultValue=\"espelkamp\">\n    <Label>Wohnort</Label>\n    <Radio value=\"espelkamp\">Espelkamp</Radio>\n    <Radio value=\"minden\">Minden</Radio>\n    <Radio value=\"rahden\">Rahden</Radio>\n    <Radio value=\"luebbecke\">Lübbecke</Radio>\n  </RadioGroup>\n</div>;\n","introduction":"import Label from \"@mittwald/flow-react-components/Label\";\nimport RadioGroup, {\n  Radio,\n} from \"@mittwald/flow-react-components/RadioGroup\";\n\n<RadioGroup defaultValue=\"admin\">\n  <Label>Rolle</Label>\n  <Radio value=\"admin\">Administrator</Radio>\n  <Radio value=\"member\">Mitglied</Radio>\n  <Radio value=\"accountant\">Buchhalter</Radio>\n</RadioGroup>;\n","labelDo":"import { Label } from \"@mittwald/flow-react-components/Label\";\n\n<div\n  style={{\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  }}\n>\n  <Label>Filter</Label>\n  <Label>Zahlungsmethode</Label>\n</div>;\n","labelDont":"import { Label } from \"@mittwald/flow-react-components/Label\";\n\n<div\n  style={{\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  }}\n>\n  <Label>\n    Wähle hier die passende Filtermöglichkeit aus:\n  </Label>\n  <Label>Wie möchtest du den Vorgang bezahlen?</Label>\n</div>;\n","optionsDo":"import {\n  Radio,\n  RadioGroup,\n} from \"@mittwald/flow-react-components/RadioGroup\";\nimport { Label } from \"@mittwald/flow-react-components/Label\";\n\n<div style={{ display: \"flex\", justifyContent: \"center\" }}>\n  <RadioGroup defaultValue=\"0-10\">\n    <Label>Alter</Label>\n    <Radio value=\"0-10\">0-10 Jahre</Radio>\n    <Radio value=\"11-20\">11-20 Jahre</Radio>\n    <Radio value=\"21-30\">21-30 Jahre</Radio>\n    <Radio value=\"31-40\">31-40 Jahre</Radio>\n    <Radio value=\"41+\">41+ Jahre</Radio>\n  </RadioGroup>\n</div>;\n","optionsDont":"import {\n  Radio,\n  RadioGroup,\n} from \"@mittwald/flow-react-components/RadioGroup\";\nimport { Label } from \"@mittwald/flow-react-components/Label\";\n\n<div style={{ display: \"flex\", justifyContent: \"center\" }}>\n  <RadioGroup defaultValue=\"0-10\">\n    <Label>Alter</Label>\n    <Radio value=\"0-10\">0-10 Jahre</Radio>\n    <Radio value=\"10-20\">11-20 Jahre</Radio>\n    <Radio value=\"20-30\">21-30 Jahre</Radio>\n    <Radio value=\"30-40\">31-40 Jahre</Radio>\n    <Radio value=\"40+\">40+ Jahre</Radio>\n  </RadioGroup>\n</div>;\n","states":"import {\n  RadioButton,\n  RadioGroup,\n} from \"@mittwald/flow-react-components/RadioGroup\";\n\n<RadioGroup\n  defaultValue=\"selected\"\n  l={[1, 1]}\n  aria-label=\"states\"\n>\n  <RadioButton value=\"default\">Domain buchen</RadioButton>\n  <RadioButton value=\"selected\">Domain buchen</RadioButton>\n  <RadioButton isDisabled value=\"default\">\n    Domain buchen\n  </RadioButton>\n  <RadioButton isDisabled value=\"selected\">\n    Domain buchen\n  </RadioButton>\n</RadioGroup>;\n"},"slugs":["03-components","form-controls","radio-group"],"filename":"03-components/form-controls/radio-group/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"SearchField","description":"Ein SearchField ermöglicht es dem Benutzer, eine Suchanfrage einzugeben und zu löschen."},"scope":{}},"examples":{"default":"import { SearchField } from \"@mittwald/flow-react-components/SearchField\";\n\n<SearchField />;\n"},"slugs":["03-components","form-controls","search-field"],"filename":"03-components/form-controls/search-field/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"SegmentedControl","description":"Ein SegmentedControl bietet dem User eine Einfachauswahl von 2 bis 5 kurzen Optionen. Je nach Einsatzzweck kann die Auswahl des Users den Inhalt unter dem Segmented Control verändern."},"scope":{}},"examples":{"changeContent":"$28","compact":"import { Label } from \"@mittwald/flow-react-components/Label\";\nimport { ColumnLayout } from \"@mittwald/flow-react-components/ColumnLayout\";\nimport {\n  Segment,\n  SegmentedControl,\n} from \"@mittwald/flow-react-components/SegmentedControl\";\n\n<ColumnLayout m={[1, 1]}>\n  <SegmentedControl\n    defaultValue=\"entwickler\"\n    containerBreakpointSize=\"xl\"\n  >\n    <Label>Rolle</Label>\n    <Segment value=\"entwickler\">Entwickler</Segment>\n    <Segment value=\"geschäftsführer\">\n      Geschäftsführer\n    </Segment>\n    <Segment value=\"andere\">Andere</Segment>\n  </SegmentedControl>\n\n  <SegmentedControl\n    defaultValue=\"entwickler\"\n    containerBreakpointSize=\"xs\"\n  >\n    <Label>Rolle</Label>\n    <Segment value=\"entwickler\">Entwickler</Segment>\n    <Segment value=\"geschäftsführer\">\n      Geschäftsführer\n    </Segment>\n    <Segment value=\"andere\">Andere</Segment>\n  </SegmentedControl>\n</ColumnLayout>;\n","default":"import {\n  Segment,\n  SegmentedControl,\n} from \"@mittwald/flow-react-components/SegmentedControl\";\nimport { Label } from \"@mittwald/flow-react-components/Label\";\n\n<SegmentedControl defaultValue=\"lastschrift\">\n  <Label>Zahlungsart</Label>\n  <Segment value=\"lastschrift\">Lastschrift</Segment>\n  <Segment value=\"Rechnung\">Rechnung</Segment>\n</SegmentedControl>;\n","fieldDescription":"import {\n  Segment,\n  SegmentedControl,\n} from \"@mittwald/flow-react-components/SegmentedControl\";\nimport { Label } from \"@mittwald/flow-react-components/Label\";\nimport { FieldDescription } from \"@mittwald/flow-react-components/FieldDescription\";\n\n<SegmentedControl defaultValue=\"cloud\">\n  <Label>Speicherplatz</Label>\n  <Segment value=\"cloud\">Cloud</Segment>\n  <Segment value=\"lokal\">Lokal</Segment>\n  <FieldDescription>\n    Speicherplatz kann jederzeit geändert werden\n  </FieldDescription>\n</SegmentedControl>;\n","playground":"import {\n  Segment,\n  SegmentedControl,\n} from \"@mittwald/flow-react-components/SegmentedControl\";\nimport { Label } from \"@mittwald/flow-react-components/Label\";\n\n<SegmentedControl defaultValue=\"ssh-key\">\n  <Label>Authentifizierungsart</Label>\n  <Segment value=\"ssh-key\">SSH-Key</Segment>\n  <Segment value=\"passwort\">Passwort</Segment>\n</SegmentedControl>;\n","states":"import {\n  Segment,\n  SegmentedControl,\n} from \"@mittwald/flow-react-components/SegmentedControl\";\nimport { Label } from \"@mittwald/flow-react-components/Label\";\nimport { Section } from \"@mittwald/flow-react-components/Section\";\n\n<Section>\n  <SegmentedControl defaultValue=\"dev\">\n    <Label>Rolle</Label>\n    <Segment value=\"entwickler\">Entwickler</Segment>\n    <Segment value=\"designer\">Designer</Segment>\n    <Segment value=\"geschäftsführer\">\n      Geschäftsführer\n    </Segment>\n    <Segment value=\"andere\">Andere</Segment>\n  </SegmentedControl>\n  <SegmentedControl defaultValue=\"dev\" isDisabled>\n    <Label>Rolle</Label>\n    <Segment value=\"entwickler\">Entwickler</Segment>\n    <Segment value=\"designer\">Designer</Segment>\n    <Segment value=\"geschäftsführer\">\n      Geschäftsführer\n    </Segment>\n    <Segment value=\"andere\">Andere</Segment>\n  </SegmentedControl>\n</Section>;\n","textDo":"import {\n  Segment,\n  SegmentedControl,\n} from \"@mittwald/flow-react-components/SegmentedControl\";\nimport { Label } from \"@mittwald/flow-react-components/Label\";\n\n<SegmentedControl defaultValue=\"individuell\">\n  <Label>Einstellung</Label>\n  <Segment value=\"standard\">Standard</Segment>\n  <Segment value=\"individuell\">Individuell</Segment>\n</SegmentedControl>;\n","textDont":"import {\n  Segment,\n  SegmentedControl,\n} from \"@mittwald/flow-react-components/SegmentedControl\";\nimport { Label } from \"@mittwald/flow-react-components/Label\";\n\n<SegmentedControl defaultValue=\"individuell\">\n  <Label>Wähle deine Einstellungsart aus:</Label>\n  <Segment value=\"standard\">Standard-Einstellungen</Segment>\n  <Segment value=\"individuell\">\n    Individuell einstellbare Einstellungen\n  </Segment>\n</SegmentedControl>;\n"},"slugs":["03-components","form-controls","segmented-control"],"filename":"03-components/form-controls/segmented-control/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"Select","description":"Die Select-Komponente bietet eine Liste von Optionen an, von denen eine ausgewählt werden kann."},"scope":{}},"examples":{"default":"import Select, {\n  Option,\n} from \"@mittwald/flow-react-components/Select\";\nimport Label from \"@mittwald/flow-react-components/Label\";\n\n<Select>\n  <Label>App</Label>\n  <Option>WordPress</Option>\n  <Option>TYPO3</Option>\n  <Option>Contao</Option>\n  <Option>Drupal</Option>\n  <Option>Joomla!</Option>\n  <Option>Matomo</Option>\n</Select>;\n"},"slugs":["03-components","form-controls","select"],"filename":"03-components/form-controls/select/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"Slider","description":"Die Slider-Komponente dient zur Auswahl von Zahlenwerten innerhalb einer vorgegebenen Range."},"scope":{}},"examples":{"default":"import Label from \"@mittwald/flow-react-components/Label\";\nimport Slider from \"@mittwald/flow-react-components/Slider\";\n\n<Slider\n  formatOptions={{\n    style: \"unit\",\n    unit: \"gigabyte\",\n  }}\n  minValue={20}\n  maxValue={2000}\n  defaultValue={200}\n  step={20}\n  showInitialMarker\n>\n  <Label>Storage</Label>\n</Slider>;\n"},"slugs":["03-components","form-controls","slider"],"filename":"03-components/form-controls/slider/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"Switch","description":"Die Switch-Komponente stellt einen Schalter dar, mit dem eine Option aktiviert oder deaktiviert werden kann."},"scope":{}},"examples":{"default":"import Switch from \"@mittwald/flow-react-components/Switch\";\n\n<Switch defaultSelected>Autoresponder</Switch>;\n","disabled":"import Switch from \"@mittwald/flow-react-components/Switch\";\n\n<Switch isDisabled>Autoresponder</Switch>;\n","leading-label":"import Switch from \"@mittwald/flow-react-components/Switch\";\n\n<Switch labelPosition=\"leading\">Autoresponder</Switch>;\n"},"slugs":["03-components","form-controls","switch"],"filename":"03-components/form-controls/switch/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"TextArea","description":"Die Textarea dient zur Eingabe längerer Texte und stellt diese mehrzeilig dar."},"scope":{}},"examples":{"characterCount":"import Label from \"@mittwald/flow-react-components/Label\";\nimport TextArea from \"@mittwald/flow-react-components/TextArea\";\n\n<TextArea showCharacterCount maxLength={100}>\n  <Label>Nachricht</Label>\n</TextArea>;\n","default":"import Label from \"@mittwald/flow-react-components/Label\";\nimport FieldDescription from \"@mittwald/flow-react-components/FieldDescription\";\nimport TextArea from \"@mittwald/flow-react-components/TextArea\";\n\n<TextArea>\n  <Label>Public Key</Label>\n  <FieldDescription>Beginnt mit ssh-rsa</FieldDescription>\n</TextArea>;\n","disabled":"import Label from \"@mittwald/flow-react-components/Label\";\nimport TextArea from \"@mittwald/flow-react-components/TextArea\";\n\n<TextArea isDisabled>\n  <Label>Public Key</Label>\n</TextArea>;\n","invalid":"import Label from \"@mittwald/flow-react-components/Label\";\nimport TextArea from \"@mittwald/flow-react-components/TextArea\";\nimport FieldError from \"@mittwald/flow-react-components/FieldError\";\n\n<TextArea isInvalid defaultValue=\"hello\">\n  <Label>Public Key</Label>\n  <FieldError>Ungültiger Key</FieldError>\n</TextArea>;\n","required":"import Label from \"@mittwald/flow-react-components/Label\";\nimport TextArea from \"@mittwald/flow-react-components/TextArea\";\n\n<TextArea isRequired>\n  <Label>Public Key</Label>\n</TextArea>;\n","resizeable":"import Label from \"@mittwald/flow-react-components/Label\";\nimport TextArea from \"@mittwald/flow-react-components/TextArea\";\n\n<TextArea rows={1} autoResizeMaxRows={5}>\n  <Label>Nachricht</Label>\n</TextArea>;\n"},"slugs":["03-components","form-controls","text-area"],"filename":"03-components/form-controls/text-area/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"TextField","description":"Ein TextField ermöglicht es dem Nutzer, Text über die Tastatur in ein User Interface einzugeben. Ein Label und eine optionale FieldDescription unterstützen dabei, die Anforderungen an die Eingabe klar zu kommunizieren."},"scope":{}},"examples":{"characterCount":"import Label from \"@mittwald/flow-react-components/Label\";\nimport TextField from \"@mittwald/flow-react-components/TextField\";\n\n<TextField showCharacterCount maxLength={10}>\n  <Label>Benutzername</Label>\n</TextField>;\n","columnLayout":"import Label from \"@mittwald/flow-react-components/Label\";\nimport TextField from \"@mittwald/flow-react-components/TextField\";\nimport ColumnLayout from \"@mittwald/flow-react-components/ColumnLayout\";\n\n<ColumnLayout m={[1, 1]}>\n  <TextField isRequired>\n    <Label>Vorname</Label>\n  </TextField>\n  <TextField isRequired>\n    <Label>Nachname</Label>\n  </TextField>\n  <ColumnLayout s={[2, 1]}>\n    <TextField isRequired>\n      <Label>Straße</Label>\n    </TextField>\n    <TextField isRequired>\n      <Label>Hausnummer</Label>\n    </TextField>\n  </ColumnLayout>\n  <ColumnLayout s={[2, 1]}>\n    <TextField isRequired>\n      <Label>Stadt</Label>\n    </TextField>\n    <TextField isRequired>\n      <Label>PLZ</Label>\n    </TextField>\n  </ColumnLayout>\n  <TextField isRequired>\n    <Label>Land</Label>\n  </TextField>\n</ColumnLayout>;\n","default":"import Label from \"@mittwald/flow-react-components/Label\";\nimport TextField from \"@mittwald/flow-react-components/TextField\";\nimport FieldDescription from \"@mittwald/flow-react-components/FieldDescription\";\n\n<TextField>\n  <Label>URL</Label>\n  <FieldDescription>Beginnt mit https://</FieldDescription>\n</TextField>;\n","defaultValue":"import Label from \"@mittwald/flow-react-components/Label\";\nimport TextField from \"@mittwald/flow-react-components/TextField\";\n\n<TextField defaultValue=\"https://mittwald.de\">\n  <Label>URL</Label>\n</TextField>;\n","disabled":"import Label from \"@mittwald/flow-react-components/Label\";\nimport TextField from \"@mittwald/flow-react-components/TextField\";\n\n<TextField isDisabled>\n  <Label>URL</Label>\n</TextField>;\n","inputProps":"import Label from \"@mittwald/flow-react-components/Label\";\nimport TextField from \"@mittwald/flow-react-components/TextField\";\n\n<TextField name=\"email\" type=\"email\">\n  <Label>E-Mail</Label>\n</TextField>;\n","invalid":"import Label from \"@mittwald/flow-react-components/Label\";\nimport TextField from \"@mittwald/flow-react-components/TextField\";\nimport FieldError from \"@mittwald/flow-react-components/FieldError\";\n\n<TextField isInvalid defaultValue=\"hello\">\n  <Label>URL</Label>\n  <FieldError>Das ist keine URL</FieldError>\n</TextField>;\n","placeholder":"import Label from \"@mittwald/flow-react-components/Label\";\nimport TextField from \"@mittwald/flow-react-components/TextField\";\n\n<TextField placeholder=\"https://\">\n  <Label>URL</Label>\n</TextField>;\n","required":"import Label from \"@mittwald/flow-react-components/Label\";\nimport TextField from \"@mittwald/flow-react-components/TextField\";\nimport { ColumnLayout } from \"@mittwald/flow-react-components/ColumnLayout\";\n\n<ColumnLayout m={[1, 1]}>\n  <TextField isRequired>\n    <Label>URL</Label>\n  </TextField>\n  <TextField>\n    <Label>URL</Label>\n  </TextField>\n</ColumnLayout>;\n","withoutLabel":"import TextField from \"@mittwald/flow-react-components/TextField\";\nimport FieldDescription from \"@mittwald/flow-react-components/FieldDescription\";\n\n<TextField aria-label=\"URL\">\n  <FieldDescription>Beginnt mit https://</FieldDescription>\n</TextField>;\n"},"slugs":["03-components","form-controls","text-field"],"filename":"03-components/form-controls/text-field/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"TimeField","description":"Das TimeField wird dafür verwendet eine Uhrzeit auszuwählen."},"scope":{}},"examples":{"default":"import Label from \"@mittwald/flow-react-components/Label\";\nimport TimeField from \"@mittwald/flow-react-components/TimeField\";\n\n<TimeField>\n  <Label>Uhrzeit</Label>\n</TimeField>;\n","disabled":"import Label from \"@mittwald/flow-react-components/Label\";\nimport TimeField from \"@mittwald/flow-react-components/TimeField\";\n\n<TimeField isDisabled>\n  <Label>Datum</Label>\n</TimeField>;\n","granularity":"import Label from \"@mittwald/flow-react-components/Label\";\nimport { TimeField } from \"@mittwald/flow-react-components/TimeField\";\n\n<Row>\n  <TimeField granularity=\"hour\">\n    <Label>Stunde</Label>\n  </TimeField>\n  <TimeField>\n    <Label>Stunde und Minute</Label>\n  </TimeField>\n  <TimeField granularity=\"second\">\n    <Label>Stunde, Minute und Sekunde</Label>\n  </TimeField>\n</Row>;\n","minMax":"import Label from \"@mittwald/flow-react-components/Label\";\nimport { Time } from \"@internationalized/date\";\nimport { TimeField } from \"@mittwald/flow-react-components/TimeField\";\nimport { FieldDescription } from \"@mittwald/flow-react-components/FieldDescription\";\n\n<TimeField\n  minValue={new Time(8, 0)}\n  maxValue={new Time(16, 0)}\n>\n  <Label>Uhrzeit</Label>\n  <FieldDescription>Zwischen 8 und 16 Uhr</FieldDescription>\n</TimeField>;\n"},"slugs":["03-components","form-controls","time-field"],"filename":"03-components/form-controls/time-field/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"Breadcrumb","description":"Die Breadcrumb zeigt die aktuelle Position in der Hierarchie der Website und bietet die Möglichkeit schnell zu höheren Navigationsebenen zu springen."},"scope":{}},"examples":{"dark":"import Breadcrumb from \"@mittwald/flow-react-components/Breadcrumb\";\nimport Link from \"@mittwald/flow-react-components/Link\";\n\n<Breadcrumb color=\"dark\">\n  <Link href=\"#\">Projekte</Link>\n  <Link href=\"#\">Apps</Link>\n  <Link href=\"#\">Meine App</Link>\n</Breadcrumb>;\n","default":"import Breadcrumb from \"@mittwald/flow-react-components/Breadcrumb\";\nimport Link from \"@mittwald/flow-react-components/Link\";\n\n<Breadcrumb>\n  <Link href=\"#\">Projekte</Link>\n  <Link href=\"#\">Apps</Link>\n  <Link href=\"#\">Meine App</Link>\n</Breadcrumb>;\n","light":"import Breadcrumb from \"@mittwald/flow-react-components/Breadcrumb\";\nimport Link from \"@mittwald/flow-react-components/Link\";\n\n<Breadcrumb color=\"light\">\n  <Link href=\"#\">Projekte</Link>\n  <Link href=\"#\">Apps</Link>\n  <Link href=\"#\">Meine App</Link>\n</Breadcrumb>;\n"},"slugs":["03-components","navigation","breadcrumb"],"filename":"03-components/navigation/breadcrumb/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"HeaderNavigation","description":"Bei der HeaderNavigation handelt es sich um eine horizontal dargestellte Navigation, die als Hauptnavigation einer Seite verwendet werden kann."},"scope":{}},"examples":{"contextMenu":"$29","dark":"import Link from \"@mittwald/flow-react-components/Link\";\nimport Button from \"@mittwald/flow-react-components/Button\";\nimport { IconSearch } from \"@mittwald/flow-react-components/Icons\";\nimport HeaderNavigation from \"@mittwald/flow-react-components/HeaderNavigation\";\n\n<HeaderNavigation\n  aria-label=\"Header navigation\"\n  color=\"dark\"\n>\n  <Link href=\"#\">Getting startet</Link>\n  <Link href=\"#\" aria-current=\"page\">\n    Components\n  </Link>\n  <Button>\n    <IconSearch />\n  </Button>\n</HeaderNavigation>;\n","default":"import Link from \"@mittwald/flow-react-components/Link\";\nimport Button from \"@mittwald/flow-react-components/Button\";\nimport { IconSearch } from \"@mittwald/flow-react-components/Icons\";\nimport HeaderNavigation from \"@mittwald/flow-react-components/HeaderNavigation\";\n\n<HeaderNavigation aria-label=\"Header navigation\">\n  <Link href=\"#\">Getting startet</Link>\n  <Link href=\"#\" aria-current=\"page\">\n    Komponenten\n  </Link>\n  <Button>\n    <IconSearch />\n  </Button>\n</HeaderNavigation>;\n","light":"import Link from \"@mittwald/flow-react-components/Link\";\nimport Button from \"@mittwald/flow-react-components/Button\";\nimport { IconSearch } from \"@mittwald/flow-react-components/Icons\";\nimport HeaderNavigation from \"@mittwald/flow-react-components/HeaderNavigation\";\n\n<HeaderNavigation\n  aria-label=\"Header navigation\"\n  color=\"light\"\n>\n  <Link href=\"#\">Getting startet</Link>\n  <Link href=\"#\" aria-current=\"page\">\n    Components\n  </Link>\n  <Button>\n    <IconSearch />\n  </Button>\n</HeaderNavigation>;\n"},"slugs":["03-components","navigation","header-navigation"],"filename":"03-components/navigation/header-navigation/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"Link","description":"Die Link-Komponente kann zur Navigation innerhalb der Seite oder zu externen Zielen genutzt werden."},"scope":{}},"examples":{"dark":"import Link from \"@mittwald/flow-react-components/Link\";\n\n<Link href=\"#\" color=\"dark\">\n  Dark\n</Link>;\n","default":"import Link from \"@mittwald/flow-react-components/Link\";\n\n<Link href=\"#\">Zum Dashboard</Link>;\n","disabled":"import Link from \"@mittwald/flow-react-components/Link\";\n\n<Link href=\"#\" isDisabled>\n  Disabled\n</Link>;\n","download":"import Link from \"@mittwald/flow-react-components/Link\";\n\n<Link download>Rechnung herunterladen</Link>;\n","external":"import Link from \"@mittwald/flow-react-components/Link\";\n\n<Link href=\"https://mittwald.de\" target=\"_blank\">\n  Externer Link\n</Link>;\n","inlineText":"import Link from \"@mittwald/flow-react-components/Link\";\nimport Text from \"@mittwald/flow-react-components/Text\";\n\n<Text>\n  Sieh dir unser <Link href=\"#\">Onboarding</Link> an, um\n  weitere Informationen zu erhalten.\n</Text>;\n","light":"import Link from \"@mittwald/flow-react-components/Link\";\n\n<Link href=\"#\" color=\"light\">\n  Light\n</Link>;\n","position1":"import { Heading } from \"@mittwald/flow-react-components/Heading\";\nimport { Link } from \"@mittwald/flow-react-components/Link\";\nimport { Section } from \"@mittwald/flow-react-components/Section\";\nimport { Header } from \"@mittwald/flow-react-components/Header\";\nimport { Text } from \"@mittwald/flow-react-components/Text\";\n\n<Section>\n  <Header>\n    <Heading>Heading 2</Heading>\n    <Link href=\"#\">Textlink</Link>\n  </Header>\n  <Text>\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n  </Text>\n</Section>;\n","position2":"import { Heading } from \"@mittwald/flow-react-components/Heading\";\nimport { Link } from \"@mittwald/flow-react-components/Link\";\nimport { Section } from \"@mittwald/flow-react-components/Section\";\nimport { Header } from \"@mittwald/flow-react-components/Header\";\nimport { Text } from \"@mittwald/flow-react-components/Text\";\n\n<Section>\n  <Header>\n    <Heading>Heading 2</Heading>\n  </Header>\n  <Text>\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n  </Text>\n  <Link href=\"#\">Textlink</Link>\n</Section>;\n","primary":"import Link from \"@mittwald/flow-react-components/Link\";\n\n<Link href=\"#\">Primary</Link>;\n","writingExtraDo":"import { Link } from \"@mittwald/flow-react-components/Link\";\nimport { Text } from \"@mittwald/flow-react-components/Text\";\n\n<>\n  <Text>\n    Links sind wichte Navigationselemente innerhalb von\n    Benutzeroberflächen.\n  </Text>\n  <Link href=\"#\">Erfahre mehr über Links</Link>\n</>;\n","writingExtraDont":"import { Link } from \"@mittwald/flow-react-components/Link\";\nimport { Text } from \"@mittwald/flow-react-components/Text\";\n\n<>\n  <Text>\n    Links sind wichte Navigationselemente innerhalb von\n    Benutzeroberflächen.\n  </Text>\n  <Link href=\"#\">Erfahre mehr</Link>\n</>;\n","writingInlineDo":"import { Link } from \"@mittwald/flow-react-components/Link\";\nimport { Text } from \"@mittwald/flow-react-components/Text\";\n\n<Text>\n  Mit Hilfe des <Link href=\"#\">Onboardings</Link> kannst du\n  direkt loslegen.\n</Text>;\n","writingInlineDont":"import { Link } from \"@mittwald/flow-react-components/Link\";\nimport { Text } from \"@mittwald/flow-react-components/Text\";\n\n<Text>\n  <Link href=\"#\">\n    Mit Hilfe des Onboardings kannst du direkt loslegen.\n  </Link>\n</Text>;\n"},"slugs":["03-components","navigation","link"],"filename":"03-components/navigation/link/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"Navigation","description":"Bei der Navigation handelt es sich um eine Liste von Links, die optional auch in Gruppen unterteilt werden kann."},"scope":{}},"examples":{"collapsable":"import Navigation, {\n  NavigationGroup,\n} from \"@mittwald/flow-react-components/Navigation\";\nimport Link from \"@mittwald/flow-react-components/Link\";\nimport Label from \"@mittwald/flow-react-components/Label\";\n\n<Navigation aria-label=\"Main navigation\">\n  <NavigationGroup collapsable>\n    <Label>Allgemein</Label>\n    <Link href=\"#\">Dashboard</Link>\n    <Link href=\"#\" aria-current=\"page\">\n      Performance\n    </Link>\n  </NavigationGroup>\n  <NavigationGroup collapsable>\n    <Label>Komponenten</Label>\n    <Link href=\"#\">Apps</Link>\n    <Link href=\"#\">Datenbanken</Link>\n    <Link href=\"#\">Domains</Link>\n  </NavigationGroup>\n</Navigation>;\n","default":"import Navigation from \"@mittwald/flow-react-components/Navigation\";\nimport Link from \"@mittwald/flow-react-components/Link\";\n\n<Navigation aria-label=\"Companies\">\n  <Link href=\"https://www.apple.com\">Apple</Link>\n  <Link href=\"https://www.mittwald.de\" aria-current=\"page\">\n    mittwald\n  </Link>\n  <Link href=\"https://www.adobe.com\">Adobe</Link>\n  <Link href=\"https://www.google.com\">Google</Link>\n</Navigation>;\n","groups":"import Navigation, {\n  NavigationGroup,\n} from \"@mittwald/flow-react-components/Navigation\";\nimport Link from \"@mittwald/flow-react-components/Link\";\nimport Label from \"@mittwald/flow-react-components/Label\";\n\n<Navigation aria-label=\"Main navigation\">\n  <NavigationGroup>\n    <Label>Allgemein</Label>\n    <Link href=\"#\">Dashboard</Link>\n    <Link href=\"#\" aria-current=\"page\">\n      Performance\n    </Link>\n  </NavigationGroup>\n  <NavigationGroup>\n    <Label>Komponenten</Label>\n    <Link href=\"#\">Apps</Link>\n    <Link href=\"#\">Datenbanken</Link>\n    <Link href=\"#\">Domains</Link>\n  </NavigationGroup>\n</Navigation>;\n","icons":"import Navigation from \"@mittwald/flow-react-components/Navigation\";\nimport Text from \"@mittwald/flow-react-components/Text\";\nimport {\n  IconCustomer,\n  IconProject,\n  IconServer,\n} from \"@mittwald/flow-react-components/Icons\";\nimport Link from \"@mittwald/flow-react-components/Link\";\n\n<Navigation aria-label=\"Main menu\">\n  <Link href=\"#\">\n    <IconCustomer />\n    <Text>Organisationen</Text>\n  </Link>\n  <Link href=\"#\" aria-current=\"page\">\n    <IconServer />\n    <Text>Server</Text>\n  </Link>\n  <Link href=\"#\">\n    <IconProject />\n    <Text>Projekte</Text>\n  </Link>\n</Navigation>;\n","separator":"import Navigation, {\n  NavigationGroup,\n} from \"@mittwald/flow-react-components/Navigation\";\nimport Link from \"@mittwald/flow-react-components/Link\";\nimport Label from \"@mittwald/flow-react-components/Label\";\nimport Separator from \"@mittwald/flow-react-components/Separator\";\n\n<Navigation aria-label=\"Main navigation\">\n  <NavigationGroup>\n    <Label>Allgemein</Label>\n    <Link href=\"#\">Dashboard</Link>\n    <Link href=\"#\" aria-current=\"page\">\n      Performance\n    </Link>\n  </NavigationGroup>\n\n  <Separator />\n\n  <NavigationGroup>\n    <Label>Komponenten</Label>\n    <Link href=\"#\">Apps</Link>\n    <Link href=\"#\">Datenbanken</Link>\n    <Link href=\"#\">Domains</Link>\n  </NavigationGroup>\n</Navigation>;\n"},"slugs":["03-components","navigation","navigation"],"filename":"03-components/navigation/navigation/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"Tabs","description":"Tabs erlauben dem Nutzer zwischen verschiedenen Inhaltsbereichen zu wechseln."},"scope":{}},"examples":{"collapsed":"import Tabs, {\n  Tab,\n  TabTitle,\n} from \"@mittwald/flow-react-components/Tabs\";\n\n<Tabs style={{ width: \"250px\" }}>\n  <Tab>\n    <TabTitle>Allgemein</TabTitle>\n    Allgemeiner Inhalt\n  </Tab>\n  <Tab id=\"storage\">\n    <TabTitle>Speicherplatz</TabTitle>\n    Speicherplatz Inhalt\n  </Tab>\n  <Tab>\n    <TabTitle>Spamschutz</TabTitle>\n    Spamschutz Inhalt\n  </Tab>\n</Tabs>;\n","content":"$2a","default":"import Tabs, {\n  Tab,\n  TabTitle,\n} from \"@mittwald/flow-react-components/Tabs\";\n\n<Tabs>\n  <Tab>\n    <TabTitle>Allgemein</TabTitle>\n    Allgemeiner Inhalt\n  </Tab>\n  <Tab id=\"storage\">\n    <TabTitle>Speicherplatz</TabTitle>\n    Speicherplatz Inhalt\n  </Tab>\n  <Tab>\n    <TabTitle>Spamschutz</TabTitle>\n    Spamschutz Inhalt\n  </Tab>\n</Tabs>;\n","status":"import {\n  Tab,\n  Tabs,\n  TabTitle,\n} from \"@mittwald/flow-react-components/Tabs\";\nimport { Alert } from \"@mittwald/flow-react-components/Alert\";\nimport { Heading } from \"@mittwald/flow-react-components/Heading\";\nimport { AlertIcon } from \"@mittwald/flow-react-components/AlertIcon\";\n\n<Tabs>\n  <Tab>\n    <TabTitle>Allgemein</TabTitle>\n    Allgemeiner Inhalt\n  </Tab>\n  <Tab id=\"storage\">\n    <TabTitle>\n      Speicherplatz\n      <AlertIcon status=\"danger\" />\n    </TabTitle>\n    <Alert status=\"danger\">\n      <Heading>Dein Speicherplatz ist voll</Heading>\n    </Alert>\n  </Tab>\n  <Tab>\n    <TabTitle>Spamschutz</TabTitle>\n    Spamschutz Inhalt\n  </Tab>\n</Tabs>;\n"},"slugs":["03-components","navigation","tabs"],"filename":"03-components/navigation/tabs/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"ContextualHelp","description":"Die ContextualHelp zeigt zusätzliche Informationen in einem Overlay an. Sie wird über den Klick auf einen Button mit Info Icon getriggert."},"scope":{}},"examples":{"default":"import {\n  ContextualHelp,\n  ContextualHelpTrigger,\n} from \"@mittwald/flow-react-components/ContextualHelp\";\nimport { Heading } from \"@mittwald/flow-react-components/Heading\";\nimport { Text } from \"@mittwald/flow-react-components/Text\";\nimport { Link } from \"@mittwald/flow-react-components/Link\";\nimport { Button } from \"@mittwald/flow-react-components/Button\";\n\n<ContextualHelpTrigger>\n  <Button />\n\n  <ContextualHelp>\n    <Heading>Rechte & Rollen</Heading>\n    <Text>\n      Jedem Benutzer-Profil wird im mStudio je Projekt\n      und/oder Organisation eine Rolle zugewiesen. Das\n      ermöglicht dir ein ganz neues und modernes Arbeiten.\n    </Text>\n    <Link>Mehr erfahren</Link>\n  </ContextualHelp>\n</ContextualHelpTrigger>;\n"},"slugs":["03-components","overlays","contextual-help"],"filename":"03-components/overlays/contextual-help/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    example: \"static\",\n    editorDisabled: true,\n    bgColor: \"dark\",\n    zoom: 0.7\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"LightBox","description":"Die LightBox dient dazu einzelne Elemente, wie Bilder, in einem Overlay anzuzeigen."},"scope":{}},"examples":{"actions":"import ActionGroup from \"@mittwald/flow-react-components/ActionGroup\";\nimport Button from \"@mittwald/flow-react-components/Button\";\nimport {\n  LightBox,\n  LightBoxTrigger,\n} from \"@mittwald/flow-react-components/LightBox\";\nimport { Image } from \"@mittwald/flow-react-components/Image\";\nimport {\n  IconDelete,\n  IconDownload,\n} from \"@mittwald/flow-react-components/Icons\";\n\n<LightBoxTrigger>\n  <Button>Open LightBox</Button>\n  <LightBox>\n    <Image src=\"https://mittwald.github.io/flow/assets/mittwald_logo_rgb.jpg\" />\n    <ActionGroup>\n      <Button>\n        <IconDownload />\n      </Button>\n      <Button>\n        <IconDelete />\n      </Button>\n    </ActionGroup>\n  </LightBox>\n</LightBoxTrigger>;\n","default":"import Button from \"@mittwald/flow-react-components/Button\";\nimport {\n  LightBox,\n  LightBoxTrigger,\n} from \"@mittwald/flow-react-components/LightBox\";\nimport { Image } from \"@mittwald/flow-react-components/Image\";\n\n<LightBoxTrigger>\n  <Button>Open LightBox</Button>\n  <LightBox>\n    <Image src=\"https://mittwald.github.io/flow/assets/mittwald_logo_rgb.jpg\" />\n  </LightBox>\n</LightBoxTrigger>;\n","fitScreenFalse":"import Button from \"@mittwald/flow-react-components/Button\";\nimport {\n  LightBox,\n  LightBoxTrigger,\n} from \"@mittwald/flow-react-components/LightBox\";\nimport { Image } from \"@mittwald/flow-react-components/Image\";\n\n<LightBoxTrigger>\n  <Button>Open LightBox</Button>\n  <LightBox fitScreen={false}>\n    <Image src=\"https://mittwald.github.io/flow/assets/mittwald_logo_rgb.jpg\" />\n  </LightBox>\n</LightBoxTrigger>;\n","static":"import { Button } from \"@mittwald/flow-react-components/Button\";\nimport { IconClose } from \"@mittwald/flow-react-components/Icons\";\nimport { Image } from \"@mittwald/flow-react-components/Image\";\n\n<div\n  className=\"flow--light-box flow--light-box--fit-screen\"\n  style={{ backgroundColor: \"transparent\" }}\n>\n  <section role=\"dialog\">\n    <div className=\"flow--light-box--content\">\n      <Image\n        width={200}\n        src=\"https://mittwald.github.io/flow/assets/mittwald_logo_rgb.jpg\"\n      />\n    </div>\n    <div className=\"flow--light-box--actions\">\n      <Button color=\"light\" variant=\"soft\">\n        <IconClose />\n      </Button>\n    </div>\n  </section>\n</div>;\n"},"slugs":["03-components","overlays","light-box"],"filename":"03-components/overlays/light-box/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    example: \"static\",\n    editorDisabled: true,\n    bgColor: \"light\",\n    zoom: 0.7\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"Modal","description":"Ein Modal zeigt Inhalte zentriert als Overlay über der Hauptseite an, wodurch der Nutzer sich voll auf den Inhalt des Modals konzentrieren kann."},"scope":{}},"examples":{"controller":"$2b","default":"$2c","email":"$2d","form":"$2e","headingsDo":"import Heading from \"@mittwald/flow-react-components/Heading\";\n\n<Column>\n  <Heading level={4}>E-Mail-Adresse bearbeiten</Heading>\n  <Heading level={4}>Projekt wirklich löschen?</Heading>\n  <Heading level={4}>\n    Projekt wirklich löschen? - App auswählen\n  </Heading>\n</Column>;\n","headingsDont":"import Heading from \"@mittwald/flow-react-components/Heading\";\n\n<Column>\n  <Heading level={4}>\n    Bearbeite hier deine E-Mail-Adresse\n  </Heading>\n  <Heading level={4}>Projektlöschvorgang starten</Heading>\n  <Heading level={4}>Wähle hier eine App aus</Heading>\n</Column>;\n","noAction":"import ActionGroup from \"@mittwald/flow-react-components/ActionGroup\";\nimport Button from \"@mittwald/flow-react-components/Button\";\nimport Heading from \"@mittwald/flow-react-components/Heading\";\nimport Action from \"@mittwald/flow-react-components/Action\";\nimport Switch from \"@mittwald/flow-react-components/Switch\";\nimport Section from \"@mittwald/flow-react-components/Section\";\n\n<StaticModal>\n  <header className=\"flow--modal--header\">\n    <Heading>Einstellungen</Heading>\n  </header>\n  <div className=\"flow--modal--content\">\n    <Section>\n      <Switch defaultSelected>\n        Container Frontend anzeigen\n      </Switch>\n      <Switch>Extensions anzeigen</Switch>\n    </Section>\n  </div>\n  <ActionGroup className=\"flow--modal--action-group\">\n    <Action closeOverlay=\"Modal\">\n      <Button variant=\"soft\" color=\"secondary\">\n        Schließen\n      </Button>\n    </Action>\n  </ActionGroup>\n</StaticModal>;\n","offCanvas":"$2f","size":"$30","static":"$31"},"slugs":["03-components","overlays","modal"],"filename":"03-components/overlays/modal/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"Tooltip","description":"Ein Tooltip zeigt dem Benutzer zusätzliche Informationen beim hovern an."},"scope":{}},"examples":{"default":"import Tooltip, {\n  TooltipTrigger,\n} from \"@mittwald/flow-react-components/Tooltip\";\nimport Button from \"@mittwald/flow-react-components/Button\";\nimport { IconEdit } from \"@mittwald/flow-react-components/Icons\";\n\n<TooltipTrigger>\n  <Button aria-label=\"Bearbeiten\" variant=\"plain\">\n    <IconEdit />\n  </Button>\n  <Tooltip>Bearbeiten</Tooltip>\n</TooltipTrigger>;\n"},"slugs":["03-components","overlays","tooltip"],"filename":"03-components/overlays/tooltip/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"AlertBadge","description":"Der AlertBadge zeigt Informationen zum Zustand eines Elements."},"scope":{}},"examples":{"default":"import AlertBadge from \"@mittwald/flow-react-components/AlertBadge\";\n\n<AlertBadge>Archiviert</AlertBadge>;\n","status":"import AlertBadge from \"@mittwald/flow-react-components/AlertBadge\";\n\n<Row>\n  <AlertBadge status=\"info\">Archiviert</AlertBadge>\n  <AlertBadge status=\"success\">\n    Update erfolgreich\n  </AlertBadge>\n  <AlertBadge status=\"warning\">\n    Speicher fast voll\n  </AlertBadge>\n  <AlertBadge status=\"danger\">Speicher voll</AlertBadge>\n</Row>;\n"},"slugs":["03-components","status","alert-badge"],"filename":"03-components/status/alert-badge/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"AlertIcon","description":"Das AlertIcon dient zur Veranschaulichung eines Status, beispielsweise in einem AlertBadge oder Alert"},"scope":{}},"examples":{"default":"import AlertIcon from \"@mittwald/flow-react-components/AlertIcon\";\n\n<AlertIcon />;\n","status":"import AlertIcon from \"@mittwald/flow-react-components/AlertIcon\";\n\n<Row>\n  <AlertIcon status=\"info\" />\n  <AlertIcon status=\"success\" />\n  <AlertIcon status=\"warning\" />\n  <AlertIcon status=\"danger\" />\n</Row>;\n"},"slugs":["03-components","status","alert-icon"],"filename":"03-components/status/alert-icon/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"Alert","description":"Der Alert zeigt relevante Hinweise innerhalb des Contents an."},"scope":{}},"examples":{"default":"import Alert from \"@mittwald/flow-react-components/Alert\";\nimport Heading from \"@mittwald/flow-react-components/Heading\";\n\n<Alert>\n  <Heading>E-Mail-Adresse wurde archiviert</Heading>\n</Alert>;\n","status":"$32","with-content":"import Alert from \"@mittwald/flow-react-components/Alert\";\nimport Heading from \"@mittwald/flow-react-components/Heading\";\nimport Content from \"@mittwald/flow-react-components/Content\";\nimport Button from \"@mittwald/flow-react-components/Button\";\n\n<Alert>\n  <Heading>E-Mail-Adresse wurde archiviert</Heading>\n  <Content>\n    Da deine Domain gelöscht wurde, wurde diese\n    E-Mail-Adresse archiviert. Um E-Mails empfangen und\n    senden zu können musst du die Adresse wieder umbenennen.\n    <Button>E-Mail-Adresse anpassen</Button>\n  </Content>\n</Alert>;\n"},"slugs":["03-components","status","alert"],"filename":"03-components/status/alert/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"Badge","description":"Der Badge wird üblicherweise dafür genutzt Gruppen von zusammengehörigen Metadaten anzuzeigen."},"scope":{}},"examples":{"colors":"import Badge from \"@mittwald/flow-react-components/Badge\";\nimport Label from \"@mittwald/flow-react-components/Label\";\nimport Text from \"@mittwald/flow-react-components/Text\";\n\n<Row>\n  <Badge color=\"neutral\">\n    <Label>Scope</Label>\n    <Text>Value</Text>\n  </Badge>\n  <Badge color=\"blue\">\n    <Label>Scope</Label>\n    <Text>Value</Text>\n  </Badge>\n  <Badge color=\"navy\">\n    <Label>Scope</Label>\n    <Text>Value</Text>\n  </Badge>\n  <Badge color=\"violet\">\n    <Label>Scope</Label>\n    <Text>Value</Text>\n  </Badge>\n  <Badge color=\"teal\">\n    <Label>Scope</Label>\n    <Text>Value</Text>\n  </Badge>\n  <Badge color=\"lilac\">\n    <Label>Scope</Label>\n    <Text>Value</Text>\n  </Badge>\n  <Badge color=\"green\">\n    <Label>Scope</Label>\n    <Text>Value</Text>\n  </Badge>\n  <Badge color=\"orange\">\n    <Label>Scope</Label>\n    <Text>Value</Text>\n  </Badge>\n  <Badge color=\"red\">\n    <Label>Scope</Label>\n    <Text>Value</Text>\n  </Badge>\n</Row>;\n","dark":"import Badge from \"@mittwald/flow-react-components/Badge\";\nimport Label from \"@mittwald/flow-react-components/Label\";\nimport Text from \"@mittwald/flow-react-components/Text\";\n\n<Badge color=\"dark\">\n  <Label>Scope</Label>\n  <Text>Value</Text>\n</Badge>;\n","default":"import Badge from \"@mittwald/flow-react-components/Badge\";\n\n<Badge>Value</Badge>;\n","disabled":"import Badge from \"@mittwald/flow-react-components/Badge\";\nimport Label from \"@mittwald/flow-react-components/Label\";\nimport Text from \"@mittwald/flow-react-components/Text\";\n\n<Badge color=\"neutral\" isDisabled>\n  <Label>Scope</Label>\n  <Text>Value</Text>\n</Badge>;\n","light":"import Badge from \"@mittwald/flow-react-components/Badge\";\nimport Label from \"@mittwald/flow-react-components/Label\";\nimport Text from \"@mittwald/flow-react-components/Text\";\n\n<Badge color=\"light\">\n  <Label>Scope</Label>\n  <Text>Value</Text>\n</Badge>;\n","onClose":"import Badge from \"@mittwald/flow-react-components/Badge\";\n\n<Badge\n  onClose={() => {\n    alert(\"closed!\");\n  }}\n>\n  Value\n</Badge>;\n","onPress":"import Badge from \"@mittwald/flow-react-components/Badge\";\n\n<Badge\n  onPress={() => {\n    alert(\"pressed!\");\n  }}\n>\n  Value\n</Badge>;\n","scope":"import Badge from \"@mittwald/flow-react-components/Badge\";\nimport Label from \"@mittwald/flow-react-components/Label\";\nimport Text from \"@mittwald/flow-react-components/Text\";\n\n<Badge color=\"neutral\">\n  <Label>Scope</Label>\n  <Text>Value</Text>\n</Badge>;\n"},"slugs":["03-components","status","badge"],"filename":"03-components/status/badge/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"CounterBadge","description":"Das CounterBadge wird verwendet, um Veränderungen an einem Element, wie beispielsweise die Anzahl neuer Notifications, anzuzeigen."},"scope":{}},"examples":{"default":"import CounterBadge from \"@mittwald/flow-react-components/CounterBadge\";\n\n<CounterBadge count={5} />;\n","high-number":"import CounterBadge from \"@mittwald/flow-react-components/CounterBadge\";\n\n<CounterBadge count={120} />;\n","with-button":"import Button from \"@mittwald/flow-react-components/Button\";\nimport { IconNotification } from \"@mittwald/flow-react-components/Icons\";\nimport CounterBadge from \"@mittwald/flow-react-components/CounterBadge\";\n\n<Button aria-label=\"Benachrichtigungen: 7\">\n  <IconNotification />\n  <CounterBadge count={7} />\n</Button>;\n","without-content":"import CounterBadge from \"@mittwald/flow-react-components/CounterBadge\";\n\n<CounterBadge />;\n"},"slugs":["03-components","status","counter-label"],"filename":"03-components/status/counter-label/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"LoadingSpinner","description":"Der Loading Spinner zeigt an, dass sich ein Element oder eine Seite im Ladezustand befindet."},"scope":{}},"examples":{"default":"import LoadingSpinner from \"@mittwald/flow-react-components/LoadingSpinner\";\n\n<LoadingSpinner />;\n"},"slugs":["03-components","status","loading-spinner"],"filename":"03-components/status/loading-spinner/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"NotificationProvider","description":"Die NotificationProvider dient zur Anzeige und Steuerung von Notifications"},"scope":{}},"examples":{"auto-close":"import { Button } from \"@mittwald/flow-react-components/Button\";\nimport { Heading } from \"@mittwald/flow-react-components/Heading\";\nimport { Text } from \"@mittwald/flow-react-components/Text\";\nimport { useNotificationController } from \"@mittwald/flow-react-components/NotificationProvider\";\nimport { Notification } from \"@mittwald/flow-react-components/Notification\";\n\nexport default () => {\n  const controller = useNotificationController();\n\n  return (\n    <Button\n      onPress={() =>\n        controller.add(\n          <Notification\n            onClick={() => alert(\"Notification clicked\")}\n            status=\"warning\"\n            autoClose\n          >\n            <Heading>No SSL certificate</Heading>\n            <Text>\n              No SSL certificate could be issued for\n              examples.de.\n            </Text>\n          </Notification>,\n        )\n      }\n    >\n      Trigger Notification\n    </Button>\n  );\n};\n","default":"import { Button } from \"@mittwald/flow-react-components/Button\";\nimport { useNotificationController } from \"@mittwald/flow-react-components/NotificationProvider\";\nimport { Heading } from \"@mittwald/flow-react-components/Heading\";\nimport { Text } from \"@mittwald/flow-react-components/Text\";\nimport { Notification } from \"@mittwald/flow-react-components/Notification\";\n\nexport default () => {\n  const controller = useNotificationController();\n\n  return (\n    <Button\n      onPress={() =>\n        controller.add(\n          <Notification\n            onClick={() => alert(\"Notification clicked\")}\n            status=\"warning\"\n          >\n            <Heading>No SSL certificate</Heading>\n            <Text>\n              No SSL certificate could be issued for\n              examples.de.\n            </Text>\n          </Notification>,\n        )\n      }\n    >\n      Trigger Notification\n    </Button>\n  );\n};\n","provider":"import { NotificationProvider } from \"@mittwald/flow-react-components/NotificationProvider\";\n\n<NotificationProvider>Meine App</NotificationProvider>;\n"},"slugs":["03-components","status","notification-provider"],"filename":"03-components/status/notification-provider/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"Notification","description":"Die Notification dient dazu den User zu benachrichtigen, ohne dessen aktuelle Handlung zu unterbrechen."},"scope":{}},"examples":{"default":"import Heading from \"@mittwald/flow-react-components/Heading\";\nimport Text from \"@mittwald/flow-react-components/Text\";\nimport Notification from \"@mittwald/flow-react-components/Notification\";\n\n<Notification>\n  <Heading>E-Mail-Adresse archiviert</Heading>\n  <Text>\n    Die E-Mail-Adresse <b>example@mittwald.de</b> wurde\n    archiviert.\n  </Text>\n</Notification>;\n","status":"import Heading from \"@mittwald/flow-react-components/Heading\";\nimport Text from \"@mittwald/flow-react-components/Text\";\nimport Notification from \"@mittwald/flow-react-components/Notification\";\n\n<Row>\n  <Notification status=\"info\">\n    <Heading>E-Mail-Adresse archiviert</Heading>\n    <Text>\n      Die E-Mail-Adresse <b>example@mittwald.de</b> wurde\n      archiviert.\n    </Text>\n  </Notification>\n\n  <Notification status=\"warning\">\n    <Heading>Speicher fast voll</Heading>\n    <Text>\n      Der Speicherplatz im Projekt <b>My Project</b> ist zu\n      80% voll.\n    </Text>\n  </Notification>\n\n  <Notification status=\"danger\">\n    <Heading>Kein SSL-Zertifikat</Heading>\n    <Text>\n      Für <b>example.de</b> konnte kein SSL-Zertifikat\n      ausgestellt werden.\n    </Text>\n  </Notification>\n\n  <Notification status=\"success\">\n    <Heading>App installiert</Heading>\n    <Text>\n      Deine App <b>My WordPress</b> wurde erfolgreich\n      installiert.\n    </Text>\n  </Notification>\n</Row>;\n"},"slugs":["03-components","status","notification"],"filename":"03-components/status/notification/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"ProgressBar","description":"Die Progressbar zeigt an wie weit ein Vorgang fortgeschritten ist."},"scope":{}},"examples":{"decimal":"import ProgressBar from \"@mittwald/flow-react-components/ProgressBar\";\nimport Label from \"@mittwald/flow-react-components/Label\";\n\n<ProgressBar\n  value={500}\n  maxValue={1000}\n  minValue={0}\n  formatOptions={{ style: \"decimal\" }}\n>\n  <Label>Stückzahl</Label>\n</ProgressBar>;\n","default":"import ProgressBar from \"@mittwald/flow-react-components/ProgressBar\";\nimport Label from \"@mittwald/flow-react-components/Label\";\n\n<ProgressBar value={50}>\n  <Label>Speicher</Label>\n</ProgressBar>;\n","maxValue":"import ProgressBar from \"@mittwald/flow-react-components/ProgressBar\";\nimport Label from \"@mittwald/flow-react-components/Label\";\n\n<ProgressBar\n  showMaxValue\n  value={500}\n  maxValue={1000}\n  minValue={0}\n  formatOptions={{ style: \"unit\", unit: \"gigabyte\" }}\n>\n  <Label>Speicher</Label>\n</ProgressBar>;\n","small":"import ProgressBar from \"@mittwald/flow-react-components/ProgressBar\";\nimport Label from \"@mittwald/flow-react-components/Label\";\n\n<ProgressBar size=\"s\" value={50}>\n  <Label>Speicher</Label>\n</ProgressBar>;\n","status":"import ProgressBar from \"@mittwald/flow-react-components/ProgressBar\";\n\n<Row>\n  <ProgressBar value={100} status=\"success\">\n    Success\n  </ProgressBar>\n  <ProgressBar value={50} status=\"info\">\n    Info\n  </ProgressBar>\n  <ProgressBar value={70} status=\"warning\">\n    Warning\n  </ProgressBar>\n  <ProgressBar value={90} status=\"danger\">\n    Danger\n  </ProgressBar>\n</Row>;\n","unit":"import ProgressBar from \"@mittwald/flow-react-components/ProgressBar\";\nimport Label from \"@mittwald/flow-react-components/Label\";\n\n<ProgressBar\n  value={500}\n  maxValue={1000}\n  minValue={0}\n  formatOptions={{ style: \"unit\", unit: \"gigabyte\" }}\n>\n  <Label>Speicher</Label>\n</ProgressBar>;\n"},"slugs":["03-components","status","progress-bar"],"filename":"03-components/status/progress-bar/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"Accordion","description":"Das Accordion dient dazu Content-Bereiche ein- und auszublenden."},"scope":{}},"examples":{"default-expanded":"import Heading from \"@mittwald/flow-react-components/Heading\";\nimport Accordion from \"@mittwald/flow-react-components/Accordion\";\nimport Content from \"@mittwald/flow-react-components/Content\";\n\n<Accordion defaultExpanded>\n  <Heading>Accordion Titel</Heading>\n  <Content>Inhalt des Accordions</Content>\n</Accordion>;\n","default":"import Heading from \"@mittwald/flow-react-components/Heading\";\nimport Accordion from \"@mittwald/flow-react-components/Accordion\";\nimport Content from \"@mittwald/flow-react-components/Content\";\n\n<Accordion>\n  <Heading>Accordion Titel</Heading>\n  <Content>Inhalt des Accordions</Content>\n</Accordion>;\n","label":"import Accordion from \"@mittwald/flow-react-components/Accordion\";\nimport Content from \"@mittwald/flow-react-components/Content\";\nimport Label from \"@mittwald/flow-react-components/Label\";\n\n<Accordion>\n  <Label>Accordion Titel</Label>\n  <Content>Inhalt des Accordions</Content>\n</Accordion>;\n","outline":"import Accordion from \"@mittwald/flow-react-components/Accordion\";\nimport Content from \"@mittwald/flow-react-components/Content\";\nimport Heading from \"@mittwald/flow-react-components/Heading\";\n\n<Accordion variant=\"outline\">\n  <Heading>Accordion Titel</Heading>\n  <Content>Inhalt des Accordions</Content>\n</Accordion>;\n"},"slugs":["03-components","structure","accordion"],"filename":"03-components/structure/accordion/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"Align","description":"Die Align Komponente dient dazu Komponenten miteinander zu kombinieren"},"scope":{}},"examples":{"default":"import { Align } from \"@mittwald/flow-react-components/Align\";\nimport { Avatar } from \"@mittwald/flow-react-components/Avatar\";\nimport { Initials } from \"@mittwald/flow-react-components/Initials\";\nimport { Text } from \"@mittwald/flow-react-components/Text\";\n\n<Align>\n  <Avatar>\n    <Initials>Max Mustermann</Initials>\n  </Avatar>\n  <Text>\n    <b>Max Mustermann</b>\n    Organisationsinhaber\n  </Text>\n</Align>;\n","input-button":"import { Align } from \"@mittwald/flow-react-components/Align\";\nimport { TextField } from \"@mittwald/flow-react-components/TextField\";\nimport { Label } from \"@mittwald/flow-react-components/Label\";\nimport { Button } from \"@mittwald/flow-react-components/Button\";\n\n<Align>\n  <TextField>\n    <Label>Weiterleitungsziel</Label>\n  </TextField>\n  <Button>Hinzufügen</Button>\n</Align>;\n","text-copy-button":"import { Align } from \"@mittwald/flow-react-components/Align\";\nimport { Text } from \"@mittwald/flow-react-components/Text\";\nimport { CopyButton } from \"@mittwald/flow-react-components/CopyButton\";\n\n<Align>\n  <Text>mail.agenturserver.de</Text>\n  <CopyButton text=\"mail.agenturserver.de\" />\n</Align>;\n"},"slugs":["03-components","structure","align"],"filename":"03-components/structure/align/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true,\n    example: \"main\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"ColumnLayout","description":"Das ColumnLayout organisiert Inhalte in Spalten. Sowohl die Anzahl der Spalten als auch deren Größe lassen sich flexibel für verschiedene Breakpoints definieren"},"scope":{}},"examples":{"custom-values":"import ColumnLayout from \"@mittwald/flow-react-components/ColumnLayout\";\nimport TextField from \"@mittwald/flow-react-components/TextField\";\nimport Label from \"@mittwald/flow-react-components/Label\";\n\n<ColumnLayout m={[2, 1]}>\n  <TextField isRequired>\n    <Label>Straße</Label>\n  </TextField>\n  <TextField isRequired>\n    <Label>Hausnummer</Label>\n  </TextField>\n</ColumnLayout>;\n","default":"import ColumnLayout from \"@mittwald/flow-react-components/ColumnLayout\";\nimport TextField from \"@mittwald/flow-react-components/TextField\";\nimport Label from \"@mittwald/flow-react-components/Label\";\n\n<ColumnLayout rowGap=\"s\" columnGap=\"l\">\n  <TextField isRequired>\n    <Label>Vorname</Label>\n  </TextField>\n  <TextField isRequired>\n    <Label>Nachname</Label>\n  </TextField>\n  <TextField isRequired>\n    <Label>Straße</Label>\n  </TextField>\n  <TextField isRequired>\n    <Label>Hausnummer</Label>\n  </TextField>\n</ColumnLayout>;\n","gaps":"import ColumnLayout from \"@mittwald/flow-react-components/ColumnLayout\";\nimport TextField from \"@mittwald/flow-react-components/TextField\";\nimport Label from \"@mittwald/flow-react-components/Label\";\n\n<ColumnLayout m={[1, 1]} rowGap=\"s\" columnGap=\"l\">\n  <TextField isRequired>\n    <Label>Vorname</Label>\n  </TextField>\n  <TextField isRequired>\n    <Label>Nachname</Label>\n  </TextField>\n  <ColumnLayout s={[2, 1]} columnGap=\"m\">\n    <TextField isRequired>\n      <Label>Straße</Label>\n    </TextField>\n    <TextField isRequired>\n      <Label>Hausnummer</Label>\n    </TextField>\n  </ColumnLayout>\n  <TextField isRequired>\n    <Label>Ort</Label>\n  </TextField>\n</ColumnLayout>;\n","main":"import ColumnLayout from \"@mittwald/flow-react-components/ColumnLayout\";\nimport TextField from \"@mittwald/flow-react-components/TextField\";\nimport Label from \"@mittwald/flow-react-components/Label\";\n\n<ColumnLayout s={[1, 1]}>\n  <TextField isRequired>\n    <Label>Vorname</Label>\n  </TextField>\n  <TextField isRequired>\n    <Label>Nachname</Label>\n  </TextField>\n</ColumnLayout>;\n"},"slugs":["03-components","structure","column-layout"],"filename":"03-components/structure/column-layout/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"LayoutCard","description":"Eine LayoutCard ist ein Struktur-Element, das mit beliebigem Inhalt gefüllt werden kann"},"scope":{}},"examples":{"default":"import LayoutCard from \"@mittwald/flow-react-components/LayoutCard\";\n\n<LayoutCard>Inhalt der Layout Card</LayoutCard>;\n"},"slugs":["03-components","structure","layout-card"],"filename":"03-components/structure/layout-card/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true,\n    example: \"main\",\n    zoom: 0.6\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"List","description":"Die List stellt mehrere ListItems übersichtlich in einer Liste dar. Sie bietet eine Sortierung, einen Filter und eine Suche."},"scope":{}},"examples":{"accordion":"$33","actionGroup":"$34","default":"$35","filter":"$36","filterCategory":"$37","filterGeneralCategory":"$38","main":"$39","mobile":"$3a","namingDo":"$3b","namingDont":"$3c","pagination":"$3d","search":"$3e","sorting":"$3f","sortingDo":"$40","sortingDont":"$41","summary":"$42","table":"$43"},"slugs":["03-components","structure","list"],"filename":"03-components/structure/list/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"Section","description":"Eine Section erhöht die Übersichtlichkeit, indem sie den Content in vertikale Teilbereiche mit festen Abständen trennt. Um die Teilbereiche optisch voneinander zu trennen, wird zwischen mehreren Sections automatisch ein Separator eingefügt."},"scope":{}},"examples":{"alert-badge-dont":"$44","alert-badge":"$45","context-menu":"$46","default":"import Heading from \"@mittwald/flow-react-components/Heading\";\nimport Text from \"@mittwald/flow-react-components/Text\";\nimport Section from \"@mittwald/flow-react-components/Section\";\n\n<Section>\n  <Heading>Newsletter</Heading>\n  <Text>\n    Kommende Releases, neue Features und Tipps rund um dein\n    Hosting – wir bringen dir das Wichtigste in dein\n    Postfach. Abonniere unseren Newsletter und bleib auf dem\n    Laufenden.\n  </Text>\n</Section>;\n","hierarchy-do":"import { Heading } from \"@mittwald/flow-react-components/Heading\";\nimport { Section } from \"@mittwald/flow-react-components/Section\";\nimport { IconStar } from \"@mittwald/flow-react-components/Icons\";\nimport { Link } from \"@mittwald/flow-react-components/Link\";\nimport { Text } from \"@mittwald/flow-react-components/Text\";\n\n<Section>\n  <Heading>\n    <IconStar />\n    Erste Schritte\n  </Heading>\n  <Text>\n    Im Onboarding erklären wir dir alles Wichtige – etwa die\n    Organisationsstrukturen deines Hostings, das Rechte- und\n    Rollensystem oder auch den Zugang über SSH.\n  </Text>\n  <Link href=\"#\">Starten</Link>\n</Section>;\n","link":"import { Section } from \"@mittwald/flow-react-components/Section\";\nimport { Heading } from \"@mittwald/flow-react-components/Heading\";\nimport { Text } from \"@mittwald/flow-react-components/Text\";\nimport Header from \"@mittwald/flow-react-components/Header\";\nimport { Link } from \"@mittwald/flow-react-components/Link\";\n\n<Section>\n  <Header>\n    <Heading>Newsletter</Heading>\n    <Link href=\"#\">Zur Anmeldung</Link>\n  </Header>\n  <Text>\n    Kommende Releases, neue Features und Tipps rund um dein\n    Hosting – wir bringen dir das Wichtigste in dein\n    Postfach. Abonniere unseren Newsletter und bleib auf dem\n    Laufenden.\n  </Text>\n</Section>;\n","long-heading":"$47","multiple":"import Heading from \"@mittwald/flow-react-components/Heading\";\nimport Text from \"@mittwald/flow-react-components/Text\";\nimport Section from \"@mittwald/flow-react-components/Section\";\nimport Header from \"@mittwald/flow-react-components/Header\";\nimport { Button } from \"@mittwald/flow-react-components/Button\";\n\n<>\n  <Section>\n    <Header>\n      <Heading>Datenbanken</Heading>\n      <Button>Datenbank verknüpfen</Button>\n    </Header>\n    <Text>\n      Eine Datenbank, die mit einer App verknüpft ist, kann\n      nicht gelöscht werden. Die App nutzt immer die\n      verknüpfte Datenbank.\n    </Text>\n  </Section>\n  <Section>\n    <Heading>Cronjobs</Heading>\n    <Text>\n      Ein Cronjob ist immer fest einer App zugeordnet, du\n      kannst ihn unter dem Menüpunkt Cronjobs bearbeiten und\n      löschen.\n    </Text>\n  </Section>\n</>;\n","sub-heading":"import Section from \"@mittwald/flow-react-components/Section\";\nimport Heading from \"@mittwald/flow-react-components/Heading\";\nimport Text from \"@mittwald/flow-react-components/Text\";\nimport { LabeledValue } from \"@mittwald/flow-react-components/LabeledValue\";\nimport { Label } from \"@mittwald/flow-react-components/Label\";\nimport { InlineCode } from \"@mittwald/flow-react-components/InlineCode\";\n\n<Section>\n  <Heading>DNS Verwaltung</Heading>\n  <Text>\n    Da du externe Nameserver nutzt, empfehlen wir dir\n    folgende Records bei deinem Provider einzutragen.\n  </Text>\n  <Heading level={3}>A-Record</Heading>\n  <LabeledValue>\n    <Label>IPv4-Adresse</Label>\n    <InlineCode>12.123.123.12</InlineCode>\n  </LabeledValue>\n</Section>;\n","switch":"import Header from \"@mittwald/flow-react-components/Header\";\nimport Text from \"@mittwald/flow-react-components/Text\";\nimport Section from \"@mittwald/flow-react-components/Section\";\nimport Switch from \"@mittwald/flow-react-components/Switch\";\nimport Heading from \"@mittwald/flow-react-components/Heading\";\n\n<Section>\n  <Header>\n    <Heading>Autoresponder</Heading>\n    <Switch>Aktivieren</Switch>\n  </Header>\n  <Text>\n    Lasse den Autoresponder für dich arbeiten. Er kann\n    automatisch auf eingehende E-Mails antworten.\n  </Text>\n</Section>;\n"},"slugs":["03-components","structure","section"],"filename":"03-components/structure/section/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"Separator","description":"A Separator is a horizontal line that separates content."},"scope":{}},"examples":{"default":"import Separator from \"@mittwald/flow-react-components/Separator\";\n\n<Separator />;\n"},"slugs":["03-components","structure","separator"],"filename":"03-components/structure/separator/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true,\n    zoom: 0.6\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"Table","description":"Die Table Komponente stellt eine einfache Tabelle bereit, um Listen von Informationen anzuzeigen"},"scope":{}},"examples":{"default":"$48","withFooter":"import {\n  Table,\n  TableBody,\n  TableCell,\n  TableColumn,\n  TableFooterRow,\n  TableHeader,\n  TableRow,\n} from \"@mittwald/flow-react-components/Table\";\n\n<Table aria-label=\"Bestellübersicht\">\n  <TableHeader>\n    <TableColumn>Artikel</TableColumn>\n    <TableColumn>Preis</TableColumn>\n  </TableHeader>\n  <TableBody>\n    <TableRow>\n      <TableCell>proSpace (2 vCPU / 4 GB RAM)</TableCell>\n      <TableCell>32,00 €</TableCell>\n    </TableRow>\n    <TableRow>\n      <TableCell>20 GB Speicherplatz</TableCell>\n      <TableCell>Inklusive</TableCell>\n    </TableRow>\n    <TableRow>\n      <TableCell>20 GB Zusatzspeicherplatz</TableCell>\n      <TableCell>2,00 €</TableCell>\n    </TableRow>\n    <TableFooterRow>\n      <TableCell>Gesamtpreis</TableCell>\n      <TableCell>34,00 €</TableCell>\n    </TableFooterRow>\n  </TableBody>\n</Table>;\n"},"slugs":["03-components","structure","table"],"filename":"03-components/structure/table/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true,\n    zoom: 0.6\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"FileCardList","description":"Die FileCardList Komponente ordnet FileCards in einem ColumnLayout an"},"scope":{}},"examples":{"default":"import { FileCardList } from \"@mittwald/flow-react-components/FileCardList\";\nimport FileCard from \"@mittwald/flow-react-components/FileCard\";\n\n<FileCardList aria-label=\"Hochgeladene Dateien\">\n  <FileCard\n    name=\"file1.txt\"\n    onDelete={() => {\n      console.log(\"delete\");\n    }}\n  />\n  <FileCard\n    name=\"file2.txt\"\n    onDelete={() => {\n      console.log(\"delete\");\n    }}\n  />\n  <FileCard\n    name=\"file3.txt\"\n    onDelete={() => {\n      console.log(\"delete\");\n    }}\n  />\n  <FileCard\n    name=\"file4.txt\"\n    onDelete={() => {\n      console.log(\"delete\");\n    }}\n  />\n  <FileCard\n    type=\"image/jpg\"\n    name=\"image.jpg\"\n    onDelete={() => {\n      console.log(\"delete\");\n    }}\n  />\n</FileCardList>;\n"},"slugs":["03-components","upload","file-card-list"],"filename":"03-components/upload/file-card-list/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"FileCard","description":"Mit FileCard Komponente können Informationen zu einer Datei angezeigt werden"},"scope":{}},"examples":{"default":"import FileCard from \"@mittwald/flow-react-components/FileCard\";\n\n<FileCard\n  type=\"image/jpg\"\n  name=\"image.jpg\"\n  sizeInBytes={47500}\n/>;\n","delete":"import FileCard from \"@mittwald/flow-react-components/FileCard\";\n\n<FileCard\n  type=\"image/jpg\"\n  name=\"image.jpg\"\n  sizeInBytes={47500}\n  onDelete={() => {\n    console.log(\"delete\");\n  }}\n/>;\n","image":"import FileCard from \"@mittwald/flow-react-components/FileCard\";\n\n<FileCard\n  type=\"image/jpg\"\n  name=\"image.jpg\"\n  sizeInBytes={47500}\n  imageSrc=\"https://mittwald.github.io/flow/assets/mittwald_logo_rgb.jpg\"\n/>;\n","link":"import FileCard from \"@mittwald/flow-react-components/FileCard\";\n\n<FileCard\n  type=\"image/jpg\"\n  name=\"image.jpg\"\n  sizeInBytes={47500}\n  href=\"#\"\n/>;\n"},"slugs":["03-components","upload","file-card"],"filename":"03-components/upload/file-card/index.mdx"}]}],["$","$L49",null,{"className":"layout_mobileNavigation__1XY9K","children":["$","$L4a",null,{"children":["$","$L4b",null,{"children":[["$","$L4c",null,{"color":"secondary","variant":"plain","children":["$","$L4d",null,{}]}],["$","$L4e",null,{"offCanvas":true,"className":"layout_mobileNavigationOffCanvas__coBZM","children":[["$","$L4f",null,{"children":"Menü"}],["$","$L4a",null,{"children":["$","$L50",null,{"children":[["$","$L14",null,{"docs":[{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:0:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:0:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:0:slugs","filename":"01-get-started/installation/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:1:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:1:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:1:slugs","filename":"01-get-started/stylesheet/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:2:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:2:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:2:slugs","filename":"02-foundations/01-design/01-design-tokens/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:3:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:3:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:3:slugs","filename":"02-foundations/01-design/02-colors/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:4:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:4:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:4:slugs","filename":"02-foundations/01-design/05-typography/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:5:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:5:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:5:slugs","filename":"02-foundations/02-structure/01-layout/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:6:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:6:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:6:slugs","filename":"02-foundations/02-structure/02-spacing/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:7:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:7:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:7:slugs","filename":"02-foundations/03-content-guidelines/01-sprach-guide/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:8:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:8:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:8:slugs","filename":"02-foundations/03-content-guidelines/02-fehlermeldungen/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:9:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:9:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:9:slugs","filename":"02-foundations/04-ui-patterns/01-dashboard/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:10:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:10:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:10:slugs","filename":"02-foundations/04-ui-patterns/02-anlegeprozess/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:11:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:11:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:11:slugs","filename":"02-foundations/04-ui-patterns/03-struktur/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:12:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:12:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:12:slugs","filename":"02-foundations/04-ui-patterns/04-bearbeitungsprozess/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:13:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:13:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:13:slugs","filename":"03-components/actions/action-group/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:14:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:14:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:14:slugs","filename":"03-components/actions/action/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:15:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:15:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:15:slugs","filename":"03-components/actions/button/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:16:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:16:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:16:slugs","filename":"03-components/actions/context-menu/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:17:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:17:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:17:slugs","filename":"03-components/actions/copy-button/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:18:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:18:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:18:slugs","filename":"03-components/content/avatar/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:19:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:19:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:19:slugs","filename":"03-components/content/code-block/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:20:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:20:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:20:slugs","filename":"03-components/content/heading/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:21:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:21:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:21:slugs","filename":"03-components/content/icon/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:22:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:22:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:22:slugs","filename":"03-components/content/illustrated-message/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:23:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:23:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:23:slugs","filename":"03-components/content/image/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:24:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:24:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:24:slugs","filename":"03-components/content/inline-code/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:25:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:25:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:25:slugs","filename":"03-components/content/label/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:26:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:26:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:26:slugs","filename":"03-components/content/labeled-value/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:27:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:27:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:27:slugs","filename":"03-components/content/markdown/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:28:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:28:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:28:slugs","filename":"03-components/content/message/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:29:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:29:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:29:slugs","filename":"03-components/content/skeleton/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:30:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:30:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:30:slugs","filename":"03-components/content/text/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:31:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:31:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:31:slugs","filename":"03-components/form-controls/checkbox-button/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:32:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:32:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:32:slugs","filename":"03-components/form-controls/checkbox-group/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:33:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:33:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:33:slugs","filename":"03-components/form-controls/checkbox/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:34:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:34:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:34:slugs","filename":"03-components/form-controls/date-picker/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:35:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:35:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:35:slugs","filename":"03-components/form-controls/date-range-picker/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:36:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:36:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:36:slugs","filename":"03-components/form-controls/field-react-hook-form/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:37:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:37:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:37:slugs","filename":"03-components/form-controls/file-field/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:38:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:38:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:38:slugs","filename":"03-components/form-controls/form-react-hook-form/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:39:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:39:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:39:slugs","filename":"03-components/form-controls/number-field/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:40:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:40:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:40:slugs","filename":"03-components/form-controls/radio-group/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:41:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:41:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:41:slugs","filename":"03-components/form-controls/search-field/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:42:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:42:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:42:slugs","filename":"03-components/form-controls/segmented-control/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:43:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:43:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:43:slugs","filename":"03-components/form-controls/select/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:44:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:44:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:44:slugs","filename":"03-components/form-controls/slider/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:45:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:45:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:45:slugs","filename":"03-components/form-controls/switch/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:46:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:46:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:46:slugs","filename":"03-components/form-controls/text-area/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:47:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:47:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:47:slugs","filename":"03-components/form-controls/text-field/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:48:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:48:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:48:slugs","filename":"03-components/form-controls/time-field/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:49:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:49:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:49:slugs","filename":"03-components/navigation/breadcrumb/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:50:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:50:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:50:slugs","filename":"03-components/navigation/header-navigation/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:51:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:51:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:51:slugs","filename":"03-components/navigation/link/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:52:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:52:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:52:slugs","filename":"03-components/navigation/navigation/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:53:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:53:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:53:slugs","filename":"03-components/navigation/tabs/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:54:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:54:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:54:slugs","filename":"03-components/overlays/contextual-help/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:55:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:55:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:55:slugs","filename":"03-components/overlays/light-box/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:56:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:56:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:56:slugs","filename":"03-components/overlays/modal/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:57:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:57:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:57:slugs","filename":"03-components/overlays/tooltip/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:58:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:58:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:58:slugs","filename":"03-components/status/alert-badge/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:59:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:59:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:59:slugs","filename":"03-components/status/alert-icon/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:60:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:60:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:60:slugs","filename":"03-components/status/alert/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:61:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:61:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:61:slugs","filename":"03-components/status/badge/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:62:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:62:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:62:slugs","filename":"03-components/status/counter-label/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:63:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:63:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:63:slugs","filename":"03-components/status/loading-spinner/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:64:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:64:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:64:slugs","filename":"03-components/status/notification-provider/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:65:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:65:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:65:slugs","filename":"03-components/status/notification/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:66:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:66:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:66:slugs","filename":"03-components/status/progress-bar/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:67:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:67:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:67:slugs","filename":"03-components/structure/accordion/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:68:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:68:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:68:slugs","filename":"03-components/structure/align/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:69:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:69:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:69:slugs","filename":"03-components/structure/column-layout/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:70:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:70:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:70:slugs","filename":"03-components/structure/layout-card/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:71:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:71:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:71:slugs","filename":"03-components/structure/list/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:72:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:72:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:72:slugs","filename":"03-components/structure/section/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:73:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:73:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:73:slugs","filename":"03-components/structure/separator/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:74:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:74:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:74:slugs","filename":"03-components/structure/table/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:75:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:75:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:75:slugs","filename":"03-components/upload/file-card-list/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:76:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:76:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:76:slugs","filename":"03-components/upload/file-card/index.mdx"}]}],["$","$L51",null,{"docs":"$5:props:children:props:children:props:children:props:children:0:props:children:2:props:children:props:children:props:children:1:props:children:1:props:children:props:children:0:props:docs","mobileNavigation":true}]]}]}]]}]]}]}]}]]}],["$","div",null,{"className":"layout_center__e1uqg","children":[["$","$L51",null,{"docs":[{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:0:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:0:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:0:slugs","filename":"01-get-started/installation/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:1:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:1:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:1:slugs","filename":"01-get-started/stylesheet/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:2:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:2:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:2:slugs","filename":"02-foundations/01-design/01-design-tokens/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:3:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:3:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:3:slugs","filename":"02-foundations/01-design/02-colors/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:4:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:4:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:4:slugs","filename":"02-foundations/01-design/05-typography/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:5:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:5:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:5:slugs","filename":"02-foundations/02-structure/01-layout/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:6:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:6:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:6:slugs","filename":"02-foundations/02-structure/02-spacing/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:7:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:7:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:7:slugs","filename":"02-foundations/03-content-guidelines/01-sprach-guide/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:8:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:8:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:8:slugs","filename":"02-foundations/03-content-guidelines/02-fehlermeldungen/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:9:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:9:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:9:slugs","filename":"02-foundations/04-ui-patterns/01-dashboard/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:10:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:10:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:10:slugs","filename":"02-foundations/04-ui-patterns/02-anlegeprozess/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:11:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:11:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:11:slugs","filename":"02-foundations/04-ui-patterns/03-struktur/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:12:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:12:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:12:slugs","filename":"02-foundations/04-ui-patterns/04-bearbeitungsprozess/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:13:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:13:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:13:slugs","filename":"03-components/actions/action-group/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:14:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:14:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:14:slugs","filename":"03-components/actions/action/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:15:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:15:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:15:slugs","filename":"03-components/actions/button/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:16:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:16:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:16:slugs","filename":"03-components/actions/context-menu/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:17:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:17:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:17:slugs","filename":"03-components/actions/copy-button/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:18:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:18:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:18:slugs","filename":"03-components/content/avatar/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:19:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:19:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:19:slugs","filename":"03-components/content/code-block/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:20:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:20:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:20:slugs","filename":"03-components/content/heading/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:21:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:21:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:21:slugs","filename":"03-components/content/icon/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:22:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:22:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:22:slugs","filename":"03-components/content/illustrated-message/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:23:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:23:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:23:slugs","filename":"03-components/content/image/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:24:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:24:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:24:slugs","filename":"03-components/content/inline-code/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:25:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:25:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:25:slugs","filename":"03-components/content/label/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:26:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:26:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:26:slugs","filename":"03-components/content/labeled-value/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:27:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:27:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:27:slugs","filename":"03-components/content/markdown/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:28:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:28:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:28:slugs","filename":"03-components/content/message/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:29:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:29:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:29:slugs","filename":"03-components/content/skeleton/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:30:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:30:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:30:slugs","filename":"03-components/content/text/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:31:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:31:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:31:slugs","filename":"03-components/form-controls/checkbox-button/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:32:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:32:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:32:slugs","filename":"03-components/form-controls/checkbox-group/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:33:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:33:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:33:slugs","filename":"03-components/form-controls/checkbox/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:34:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:34:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:34:slugs","filename":"03-components/form-controls/date-picker/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:35:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:35:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:35:slugs","filename":"03-components/form-controls/date-range-picker/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:36:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:36:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:36:slugs","filename":"03-components/form-controls/field-react-hook-form/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:37:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:37:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:37:slugs","filename":"03-components/form-controls/file-field/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:38:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:38:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:38:slugs","filename":"03-components/form-controls/form-react-hook-form/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:39:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:39:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:39:slugs","filename":"03-components/form-controls/number-field/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:40:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:40:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:40:slugs","filename":"03-components/form-controls/radio-group/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:41:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:41:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:41:slugs","filename":"03-components/form-controls/search-field/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:42:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:42:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:42:slugs","filename":"03-components/form-controls/segmented-control/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:43:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:43:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:43:slugs","filename":"03-components/form-controls/select/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:44:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:44:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:44:slugs","filename":"03-components/form-controls/slider/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:45:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:45:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:45:slugs","filename":"03-components/form-controls/switch/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:46:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:46:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:46:slugs","filename":"03-components/form-controls/text-area/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:47:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:47:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:47:slugs","filename":"03-components/form-controls/text-field/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:48:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:48:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:48:slugs","filename":"03-components/form-controls/time-field/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:49:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:49:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:49:slugs","filename":"03-components/navigation/breadcrumb/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:50:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:50:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:50:slugs","filename":"03-components/navigation/header-navigation/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:51:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:51:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:51:slugs","filename":"03-components/navigation/link/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:52:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:52:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:52:slugs","filename":"03-components/navigation/navigation/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:53:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:53:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:53:slugs","filename":"03-components/navigation/tabs/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:54:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:54:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:54:slugs","filename":"03-components/overlays/contextual-help/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:55:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:55:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:55:slugs","filename":"03-components/overlays/light-box/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:56:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:56:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:56:slugs","filename":"03-components/overlays/modal/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:57:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:57:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:57:slugs","filename":"03-components/overlays/tooltip/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:58:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:58:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:58:slugs","filename":"03-components/status/alert-badge/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:59:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:59:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:59:slugs","filename":"03-components/status/alert-icon/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:60:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:60:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:60:slugs","filename":"03-components/status/alert/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:61:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:61:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:61:slugs","filename":"03-components/status/badge/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:62:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:62:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:62:slugs","filename":"03-components/status/counter-label/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:63:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:63:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:63:slugs","filename":"03-components/status/loading-spinner/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:64:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:64:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:64:slugs","filename":"03-components/status/notification-provider/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:65:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:65:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:65:slugs","filename":"03-components/status/notification/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:66:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:66:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:66:slugs","filename":"03-components/status/progress-bar/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:67:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:67:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:67:slugs","filename":"03-components/structure/accordion/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:68:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:68:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:68:slugs","filename":"03-components/structure/align/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:69:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:69:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:69:slugs","filename":"03-components/structure/column-layout/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:70:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:70:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:70:slugs","filename":"03-components/structure/layout-card/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:71:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:71:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:71:slugs","filename":"03-components/structure/list/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:72:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:72:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:72:slugs","filename":"03-components/structure/section/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:73:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:73:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:73:slugs","filename":"03-components/structure/separator/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:74:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:74:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:74:slugs","filename":"03-components/structure/table/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:75:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:75:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:75:slugs","filename":"03-components/upload/file-card-list/index.mdx"},{"mdxSource":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:76:mdxSource","examples":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:76:examples","slugs":"$5:props:children:props:children:props:children:props:children:0:props:children:1:props:docs:76:slugs","filename":"03-components/upload/file-card/index.mdx"}]}],["$","main",null,{"className":"layout_main__30FUz","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[]}]}]]}],["$","$L52",null,{}]]}]}]}]}]
53:I[89950,["94","static/chunks/23c7f145-0aa2dbc4a2641275.js","149","static/chunks/d709487a-c1e7dea80a4aa964.js","990","static/chunks/990-5cb72a1901c58310.js","300","static/chunks/300-24657c56af128b38.js","80","static/chunks/80-4bb10c8c76b4f644.js","91","static/chunks/91-3ec8ebe2ed161b8e.js","602","static/chunks/602-d94794cea8e36815.js","48","static/chunks/app/%5B...slug%5D/page-85d1e35f61e7e7c3.js"],"LayoutCard"]
54:I[77198,["94","static/chunks/23c7f145-0aa2dbc4a2641275.js","149","static/chunks/d709487a-c1e7dea80a4aa964.js","990","static/chunks/990-5cb72a1901c58310.js","300","static/chunks/300-24657c56af128b38.js","80","static/chunks/80-4bb10c8c76b4f644.js","91","static/chunks/91-3ec8ebe2ed161b8e.js","602","static/chunks/602-d94794cea8e36815.js","48","static/chunks/app/%5B...slug%5D/page-85d1e35f61e7e7c3.js"],"ColumnLayout"]
55:I[91916,["94","static/chunks/23c7f145-0aa2dbc4a2641275.js","149","static/chunks/d709487a-c1e7dea80a4aa964.js","990","static/chunks/990-5cb72a1901c58310.js","300","static/chunks/300-24657c56af128b38.js","80","static/chunks/80-4bb10c8c76b4f644.js","91","static/chunks/91-3ec8ebe2ed161b8e.js","602","static/chunks/602-d94794cea8e36815.js","48","static/chunks/app/%5B...slug%5D/page-85d1e35f61e7e7c3.js"],"default"]
56:I[37485,["94","static/chunks/23c7f145-0aa2dbc4a2641275.js","149","static/chunks/d709487a-c1e7dea80a4aa964.js","990","static/chunks/990-5cb72a1901c58310.js","300","static/chunks/300-24657c56af128b38.js","80","static/chunks/80-4bb10c8c76b4f644.js","91","static/chunks/91-3ec8ebe2ed161b8e.js","602","static/chunks/602-d94794cea8e36815.js","48","static/chunks/app/%5B...slug%5D/page-85d1e35f61e7e7c3.js"],"default"]
8:[["$","$L53",null,{"children":["$","$L54",null,{"l":[1],"m":[1],"children":[["$","$L50",null,{"children":[["$","$L55",null,{"level":1,"children":"Fehlermeldungen"}],"$undefined","$undefined"]}],["$","$L56",null,{"mdxFile":{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    p: \"p\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsx(_components.p, {\n    children: \"Fehler entstehen, wenn User auf unerwartete Ergebnisse stoßen – das führt oft zu\\nFrustration, Verwirrung und zusätzlichem Aufwand. Daher ist der beste Fehler\\nder, der gar nicht erst auftritt. Sollte dennoch ein Fehler auftreten, muss die\\nFehlermeldung klar, hilfreich und leicht verständlich formuliert sein, um den\\nUser bestmöglich zu unterstützen.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{"title":"Fehlermeldungen"},"scope":{}},"examples":{},"slugs":["02-foundations","03-content-guidelines","02-fehlermeldungen"],"filename":"02-foundations/03-content-guidelines/02-fehlermeldungen/index.mdx"}}]]}]}],["$","$L53",null,{"children":"$L57"}],false,"$undefined"]
58:T210c,"use strict";
const {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];
const {useMDXComponents: _provideComponents} = arguments[0];
function _createMdxContent(props) {
  const _components = {
    h1: "h1",
    h2: "h2",
    hr: "hr",
    li: "li",
    p: "p",
    ul: "ul",
    ..._provideComponents(),
    ...props.components
  }, {Do, DoAndDont, Dont} = _components;
  if (!Do) _missingMdxReference("Do", true);
  if (!DoAndDont) _missingMdxReference("DoAndDont", true);
  if (!Dont) _missingMdxReference("Dont", true);
  return _jsxs(_Fragment, {
    children: [_jsx(_components.h1, {
      children: "Best Practices"
    }), "\n", _jsxs(_components.ul, {
      children: ["\n", _jsx(_components.li, {
        children: "Platziere Fehlermeldungen in unmittelbarer Nähe zur Ursache des Problems."
      }), "\n", _jsx(_components.li, {
        children: "Stelle sicher, dass Fehlermeldungen kurz, verständlich, hilfreich und\nhandlungsorientiert sind."
      }), "\n", _jsx(_components.li, {
        children: "Versuche bei jeder Fehlermeldung eine Lösung zu kommunizieren."
      }), "\n", _jsx(_components.li, {
        children: "Unterscheide verschiedene Arten von Fehlermeldungen, basierend auf ihrem\nUmfang und ihrer Dringlichkeit."
      }), "\n"]
    }), "\n", _jsx(_components.hr, {}), "\n", _jsx(_components.h1, {
      children: "Grundlagen"
    }), "\n", _jsx(_components.h2, {
      children: "Kurz und hilfreich"
    }), "\n", _jsx(_components.p, {
      children: "Fehlermeldungen sollten kurz, sinnvoll und hilfreich für den Nutzer sein. Es\ngilt: So kurz wie möglich, aber so lang wie nötig. Das bedeutet allerdings auch,\ndass es in manchen Fällen ausreichend sein kann, nur die Lösung zu nennen."
    }), "\n", _jsxs(DoAndDont, {
      children: [_jsx(Do, {
        exampleText: "Bitte gib eine E-Mail-Adresse im Format name@domain.de ein."
      }), _jsx(Dont, {
        exampleText: "Wir unterstützen die Formatierung nicht. Bitte gib eine E-Mail-Adresse im Format\nname@domain.de ein."
      })]
    }), "\n", _jsx(_components.h2, {
      children: "Verständliche Sprache auf Augenhöhe"
    }), "\n", _jsx(_components.p, {
      children: "Wähle eine Sprache, die dem Kontext der jeweiligen Benutzeroberfläche\nentspricht. Fehlermeldungen müssen klar und verständlich formuliert sein. In\nbestimmten Fällen kann dabei eine etwas technischere Sprache hilfreich sein."
    }), "\n", _jsxs(DoAndDont, {
      children: [_jsx(Do, {
        exampleText: "Wir konnten keine Verbindung zum Server herstellen. Bitte versuche es erneut."
      }), _jsx(Dont, {
        exampleText: "Fehlercode 503: Verbindung zum Server fehlgeschlagen."
      })]
    }), "\n", _jsx(_components.h2, {
      children: "Schuldzuweisungen vermeiden"
    }), "\n", _jsx(_components.p, {
      children: "Ein Fehler an sich ist bereits unangenehm und frustrierend. Daher sollte die\nFehlermeldung dem Nutzer das Gefühl von Unterstützung und Fürsorge vermitteln,\nanstatt ihm ein Schuldgefühl zu vermitteln oder seine Frustration zu verstärken."
    }), "\n", _jsxs(DoAndDont, {
      children: [_jsx(Do, {
        exampleText: "Wir konnten das Bild nicht hochladen. Bitte überprüfe die Dateigröße und\nversuche es erneut."
      }), _jsx(Dont, {
        exampleText: "Du hast ein ungültiges Bild hochgeladen. Überprüfe die Dateigröße und versuche\nes erneut."
      })]
    }), "\n", _jsx(_components.h2, {
      children: "Fehler eingestehen, Verständnis erleichtern"
    }), "\n", _jsx(_components.p, {
      children: "Fehlermeldungen sind einfacher zu verstehen, wenn sie sich auf das System als\n\"wir\" und den Nutzer als \"du\" beziehen. So werden die Fragen \"Wo ist etwas\nschiefgegangen?\" und \"Wer muss handeln, um es zu beheben?\" einfach und\nverständlich beantwortet."
    }), "\n", _jsxs(DoAndDont, {
      children: [_jsx(Do, {
        exampleText: "Wir konnten dein Passwort nicht zurücksetzen. Bitte überprüfe die E-Mail-Adresse\nund versuche es erneut."
      }), _jsx(Dont, {
        exampleText: "Fehler beim Zurücksetzen des Passworts. Bitte versuche es erneut."
      })]
    }), "\n", _jsx(_components.h2, {
      children: "Keine ungerechtfertigten Entschuldigungen"
    }), "\n", _jsx(_components.p, {
      children: "Entschuldige dich nicht für kleine Fehler. Dies kann Fehler oft schlimmer\nerscheinen lassen und vom wichtigen Teil der Nachricht ablenken.\nEntschuldigungen sollten für ernsthafte Fehler aufgespart werden, wie den\nVerlust von Daten oder wenn der Nutzer eine größere Aktion zur Behebung des\nProblems ausführen muss."
    }), "\n", _jsxs(DoAndDont, {
      children: [_jsx(Do, {
        exampleText: "Es tut uns Leid, durch einen Serverfehler konnten wir deine Eingabe nicht speichern. Bitte versuche es erneut.",
        children: _jsx(_components.p, {
          children: "Entschuldige Dich bei ernsthaften Fehlern, z.B. einem systembedingten Verlust von Daten."
        })
      }), _jsx(Dont, {
        exampleText: "Es tut uns leid, wir unterstützen das Dateiformat nicht.",
        children: _jsx(_components.p, {
          children: "Entschuldige dich nicht für Kleinigkeiten oder wenn das System keine Schuld\nträgt."
        })
      })]
    }), "\n", _jsx(_components.h2, {
      children: "Wahrscheinlichsten Fehler nennen"
    }), "\n", _jsx(_components.p, {
      children: "Wenn ein Fehler genau eine Ursache hat, dann erkläre, wie der Fehler zu beheben\nist. Gibt es mehrere mögliche Gründe, so sollte die Fehlermeldung beschreiben,\nwie der wahrscheinlichste Grund zu beheben ist."
    }), "\n", _jsxs(DoAndDont, {
      children: [_jsx(Do, {
        exampleText: "Bitte wähle ein Passwort mit mindestens 8 Zeichen."
      }), _jsx(Dont, {
        exampleText: "Das eingegebene Passwort entspricht nicht den Mindestanforderungen. Stelle\nsicher, dass es min. 8 Zeichen, einen Groß- und Kleinbuchstaben, eine Ziffer und\nein Sonderzeichen enthält."
      })]
    }), "\n", _jsx(_components.h2, {
      children: "Nicht zu spezifisch"
    }), "\n", _jsx(_components.p, {
      children: "Formuliere Fehlermeldungen lieber etwas allgemeiner als zu spezifisch. Oft ist\nes nicht erforderlich, spezifische Details wie Dateinamen, Benutzernamen oder\nOrdner zu nennen, da der Nutzer diese Informationen an anderen Stellen in der\nBenutzeroberfläche finden kann."
    }), "\n", _jsxs(DoAndDont, {
      children: [_jsx(Do, {
        exampleText: "Wir konnten die Datei nicht hochladen. Bitte verwende eine Datei vom Typ XY."
      }), _jsx(Dont, {
        exampleText: "Wir konnten die Datei „example_file-20.4.24.xy“ nicht hochladen. Bitte verwende\neine Datei vom Typ XY."
      })]
    }), "\n", _jsx(_components.h2, {
      children: "Aktiv schreiben"
    }), "\n", _jsx(_components.p, {
      children: "Fehlermeldungen werden aktiv formuliert, um das Verständnis zu erleichtern."
    }), "\n", _jsxs(DoAndDont, {
      children: [_jsx(Do, {
        exampleText: "Wir unterstützen nur Dateien vom Typ XY."
      }), _jsx(Dont, {
        exampleText: "Es werden nur Dateien vom Typ XY unterstützt."
      })]
    }), "\n", _jsx(_components.h2, {
      children: "Positiv formulieren"
    }), "\n", _jsx(_components.p, {
      children: "Versuche, Fehlermeldungen positiv zu formulieren und auf negativ besetzte\nBegriffe (z.B. Fehler, Problem, fehlgeschlagen, falsch, ungültig, verboten, ...)\nzu verzichten. Konzentriere dich stattdessen auf die Lösung und was als nächstes\ngetan werden kann. Beachte jedoch, dass dies in Fällen von Systemfehlern, für\ndie es keine direkte Lösung gibt, nicht immer möglich ist."
    }), "\n", _jsxs(DoAndDont, {
      children: [_jsx(Do, {
        exampleText: "Wir konnten keine Verbindung zum Server herstellen. Bitte versuche es erneut."
      }), _jsx(Dont, {
        exampleText: "Durch ein Problem mit dem Server ist die Verbindung fehlgeschlagen."
      })]
    })]
  });
}
function MDXContent(props = {}) {
  const {wrapper: MDXLayout} = {
    ..._provideComponents(),
    ...props.components
  };
  return MDXLayout ? _jsx(MDXLayout, {
    ...props,
    children: _jsx(_createMdxContent, {
      ...props
    })
  }) : _createMdxContent(props);
}
return {
  default: MDXContent
};
function _missingMdxReference(id, component) {
  throw new Error("Expected " + (component ? "component" : "object") + " `" + id + "` to be defined: you likely forgot to import, pass, or provide it.");
}
57:[" ",["$","div",null,{"className":"layout_tabContent__XP2n_","children":["$","$L56",null,{"mdxFile":{"mdxSource":{"compiledSource":"$58","frontmatter":{},"scope":{}},"examples":{},"slugs":["02-foundations","03-content-guidelines","02-fehlermeldungen"],"filename":"02-foundations/03-content-guidelines/02-fehlermeldungen/overview.mdx"},"indexFile":{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    p: \"p\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsx(_components.p, {\n    children: \"Fehler entstehen, wenn User auf unerwartete Ergebnisse stoßen – das führt oft zu\\nFrustration, Verwirrung und zusätzlichem Aufwand. Daher ist der beste Fehler\\nder, der gar nicht erst auftritt. Sollte dennoch ein Fehler auftreten, muss die\\nFehlermeldung klar, hilfreich und leicht verständlich formuliert sein, um den\\nUser bestmöglich zu unterstützen.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{"title":"Fehlermeldungen"},"scope":{}},"examples":{},"slugs":["src","content","02-foundations","03-content-guidelines","02-fehlermeldungen"],"filename":"src/content/02-foundations/03-content-guidelines/02-fehlermeldungen/index.mdx"}}]}]," "]
e:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
c:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"Fehlermeldungen"}],["$","link","2",{"rel":"icon","href":"/flow-previews/docs/995-missing-property-descriptions/favicon.ico","type":"image/x-icon","sizes":"48x48"}]]
a:null
