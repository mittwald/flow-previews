0:["piN6B6HcGDWs4u4WtIxv8",[[["",{"children":["__PAGE__",{}]},"$undefined","$undefined",true],["",{"children":["__PAGE__",{},[["$L1","$L2"],null],null]},["$L3",null],null],[[["$","link","0",{"rel":"stylesheet","href":"/flow-previews/docs/close-context-menu-on-navigation/_next/static/css/fdfdcb9b995a549b.css","precedence":"next","crossOrigin":"$undefined"}],["$","link","1",{"rel":"stylesheet","href":"/flow-previews/docs/close-context-menu-on-navigation/_next/static/css/8b4ac0b39bf237ba.css","precedence":"next","crossOrigin":"$undefined"}]],"$L4"]]]]
2:E{"digest":"NEXT_REDIRECT;replace;01-get-started/installation;307;"}
5:I[70592,["449","static/chunks/5829abfd-6e2fe215f1b289f6.js","812","static/chunks/812-5aa639302195cb7b.js","984","static/chunks/984-1a5be819eca4b2ac.js","185","static/chunks/app/layout-662755b181f1fc47.js"],"LinkProvider"]
6:I[37002,["449","static/chunks/5829abfd-6e2fe215f1b289f6.js","812","static/chunks/812-5aa639302195cb7b.js","984","static/chunks/984-1a5be819eca4b2ac.js","185","static/chunks/app/layout-662755b181f1fc47.js"],"NotificationProvider"]
7:I[88874,["449","static/chunks/5829abfd-6e2fe215f1b289f6.js","802","static/chunks/d709487a-5631ee5ab5812d10.js","812","static/chunks/812-5aa639302195cb7b.js","264","static/chunks/264-6a71a5584dcb70b5.js","984","static/chunks/984-1a5be819eca4b2ac.js","877","static/chunks/app/%5B...slug%5D/page-902f505acc554d22.js"],"IconMittwald"]
8:I[97252,["449","static/chunks/5829abfd-6e2fe215f1b289f6.js","802","static/chunks/d709487a-5631ee5ab5812d10.js","812","static/chunks/812-5aa639302195cb7b.js","264","static/chunks/264-6a71a5584dcb70b5.js","984","static/chunks/984-1a5be819eca4b2ac.js","877","static/chunks/app/%5B...slug%5D/page-902f505acc554d22.js"],"default"]
9:I[60939,["449","static/chunks/5829abfd-6e2fe215f1b289f6.js","812","static/chunks/812-5aa639302195cb7b.js","984","static/chunks/984-1a5be819eca4b2ac.js","185","static/chunks/app/layout-662755b181f1fc47.js"],"default"]
a:I[78825,["449","static/chunks/5829abfd-6e2fe215f1b289f6.js","812","static/chunks/812-5aa639302195cb7b.js","984","static/chunks/984-1a5be819eca4b2ac.js","185","static/chunks/app/layout-662755b181f1fc47.js"],"default"]
1d:I[79503,["449","static/chunks/5829abfd-6e2fe215f1b289f6.js","812","static/chunks/812-5aa639302195cb7b.js","984","static/chunks/984-1a5be819eca4b2ac.js","185","static/chunks/app/layout-662755b181f1fc47.js"],"HeaderNavigation"]
1e:I[74453,["449","static/chunks/5829abfd-6e2fe215f1b289f6.js","812","static/chunks/812-5aa639302195cb7b.js","984","static/chunks/984-1a5be819eca4b2ac.js","185","static/chunks/app/layout-662755b181f1fc47.js"],"Content"]
1f:I[63997,["449","static/chunks/5829abfd-6e2fe215f1b289f6.js","812","static/chunks/812-5aa639302195cb7b.js","984","static/chunks/984-1a5be819eca4b2ac.js","185","static/chunks/app/layout-662755b181f1fc47.js"],"OffCanvasTrigger"]
20:I[68493,["449","static/chunks/5829abfd-6e2fe215f1b289f6.js","812","static/chunks/812-5aa639302195cb7b.js","984","static/chunks/984-1a5be819eca4b2ac.js","185","static/chunks/app/layout-662755b181f1fc47.js"],"Button"]
21:I[88874,["449","static/chunks/5829abfd-6e2fe215f1b289f6.js","802","static/chunks/d709487a-5631ee5ab5812d10.js","812","static/chunks/812-5aa639302195cb7b.js","264","static/chunks/264-6a71a5584dcb70b5.js","984","static/chunks/984-1a5be819eca4b2ac.js","877","static/chunks/app/%5B...slug%5D/page-902f505acc554d22.js"],"IconMenu"]
22:I[63997,["449","static/chunks/5829abfd-6e2fe215f1b289f6.js","812","static/chunks/812-5aa639302195cb7b.js","984","static/chunks/984-1a5be819eca4b2ac.js","185","static/chunks/app/layout-662755b181f1fc47.js"],"OffCanvas"]
23:I[97252,["449","static/chunks/5829abfd-6e2fe215f1b289f6.js","802","static/chunks/d709487a-5631ee5ab5812d10.js","812","static/chunks/812-5aa639302195cb7b.js","264","static/chunks/264-6a71a5584dcb70b5.js","984","static/chunks/984-1a5be819eca4b2ac.js","877","static/chunks/app/%5B...slug%5D/page-902f505acc554d22.js"],"Heading"]
24:I[32796,["449","static/chunks/5829abfd-6e2fe215f1b289f6.js","802","static/chunks/d709487a-5631ee5ab5812d10.js","812","static/chunks/812-5aa639302195cb7b.js","264","static/chunks/264-6a71a5584dcb70b5.js","984","static/chunks/984-1a5be819eca4b2ac.js","877","static/chunks/app/%5B...slug%5D/page-902f505acc554d22.js"],"Section"]
145:I[40062,["449","static/chunks/5829abfd-6e2fe215f1b289f6.js","812","static/chunks/812-5aa639302195cb7b.js","984","static/chunks/984-1a5be819eca4b2ac.js","185","static/chunks/app/layout-662755b181f1fc47.js"],"default"]
17d:I[3481,["449","static/chunks/5829abfd-6e2fe215f1b289f6.js","802","static/chunks/d709487a-5631ee5ab5812d10.js","812","static/chunks/812-5aa639302195cb7b.js","264","static/chunks/264-6a71a5584dcb70b5.js","984","static/chunks/984-1a5be819eca4b2ac.js","877","static/chunks/app/%5B...slug%5D/page-902f505acc554d22.js"],"default"]
17e:I[48978,[],""]
17f:I[71828,[],""]
b:Tbd8,"use strict";
const {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];
const {useMDXComponents: _provideComponents} = arguments[0];
function _createMdxContent(props) {
  const _components = {
    code: "code",
    h2: "h2",
    hr: "hr",
    p: "p",
    pre: "pre",
    strong: "strong",
    ..._provideComponents(),
    ...props.components
  }, {Content, Heading, InlineAlert} = _components;
  if (!Content) _missingMdxReference("Content", true);
  if (!Heading) _missingMdxReference("Heading", true);
  if (!InlineAlert) _missingMdxReference("InlineAlert", true);
  return _jsxs(_Fragment, {
    children: [_jsxs(InlineAlert, {
      children: [_jsx(Heading, {
        children: "Hinweis zu frühem Entwicklungsstand und Stabilität"
      }), _jsx(Content, {
        children: _jsxs(_components.p, {
          children: ["Dieses Projekt befindet sich in einer ", _jsx(_components.strong, {
            children: "frühen Entwicklungsphase"
          }), ", weswegen\nwir keine Garantie zur Stabilität bieten können. Du kannst dieses Projekt\ndennoch gerne ausprobieren, verlasse dich aber bitte nicht darauf, dass die\naktuellen Inhalte in dieser Form bestehen bleiben. Wir freuen uns über jedes\nFeedback zum aktuellen Entwicklungsstand!"]
        })
      })]
    }), "\n", _jsx(_components.hr, {}), "\n", _jsx(_components.h2, {
      children: "Installation der Flow React Component Library"
    }), "\n", _jsxs(_components.p, {
      children: ["Die Flow React Component Library kann mit einem Package Manager wie ", _jsx(_components.code, {
        children: "npm"
      }), " or\n", _jsx(_components.code, {
        children: "yarn"
      }), " installiert werden."]
    }), "\n", _jsx(_components.pre, {
      children: _jsx(_components.code, {
        className: "language-shell",
        children: "yarn add @mittwald/flow-react-components\n"
      })
    }), "\n", _jsx(_components.p, {
      children: "Zur leichteren Verwaltung der Abhängigkeiten werden alle Komponenten innerhalb\ndiese Packages bereitgestellt."
    }), "\n", _jsx(_components.hr, {}), "\n", _jsx(_components.h2, {
      children: "Styles importieren"
    }), "\n", _jsx(_components.p, {
      children: "Um die Komponenten Styles zu verwenden, musst du das Stylesheet importieren.\nFüge diese Zeile zum Einstiegspunkt deines Projektes hinzu."
    }), "\n", _jsx(_components.pre, {
      children: _jsx(_components.code, {
        children: "import \"@mittwald/flow-react-components/styles\";\n"
      })
    })]
  });
}
function MDXContent(props = {}) {
  const {wrapper: MDXLayout} = {
    ..._provideComponents(),
    ...props.components
  };
  return MDXLayout ? _jsx(MDXLayout, {
    ...props,
    children: _jsx(_createMdxContent, {
      ...props
    })
  }) : _createMdxContent(props);
}
return {
  default: MDXContent
};
function _missingMdxReference(id, component) {
  throw new Error("Expected " + (component ? "component" : "object") + " `" + id + "` to be defined: you likely forgot to import, pass, or provide it.");
}
c:T1887,"use strict";
const {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];
const {useMDXComponents: _provideComponents} = arguments[0];
function _createMdxContent(props) {
  const _components = {
    code: "code",
    h2: "h2",
    h3: "h3",
    h4: "h4",
    hr: "hr",
    p: "p",
    pre: "pre",
    strong: "strong",
    ..._provideComponents(),
    ...props.components
  }, {LiveCodeEditor} = _components;
  if (!LiveCodeEditor) _missingMdxReference("LiveCodeEditor", true);
  return _jsxs(_Fragment, {
    children: [_jsx(_components.p, {
      children: "Die Flow-Komponenten-Bibliotheken werden über ein gemeinsames Stylesheet, das\nauch für sich alleine verwendet werden kann, gestyled. Das kann nützlich sein,\nwenn du dein eigenes Framework verwendest, um Komponenten zu bauen, und dich\ndabei an die mittwald Styling Guidelines halten willst."
    }), "\n", _jsx(_components.p, {
      children: "Auf dieser Seite findest du alle Informationen darüber, wie du das Stylesheet\ninstallieren kannst und wie die Klassennamen strukturiert sind."
    }), "\n", _jsx(_components.hr, {}), "\n", _jsx(_components.h2, {
      children: "Installation des Standalone Stylesheets"
    }), "\n", _jsxs(_components.p, {
      children: ["Zum aktuellen Entwicklungsstand des Projektes kannst du das Stylesheet nur über\nNPM installieren. Die Flow-Stylesheet-Bibliothek kann über einen Package Manager\nwie ", _jsx(_components.code, {
        children: "npm"
      }), " or ", _jsx(_components.code, {
        children: "yarn"
      }), " installiert werden."]
    }), "\n", _jsx(_components.pre, {
      children: _jsx(_components.code, {
        children: "yarn add @mittwald/flow-stylesheet\n"
      })
    }), "\n", _jsx(_components.hr, {}), "\n", _jsx(_components.h2, {
      children: "Styles importieren"
    }), "\n", _jsx(_components.p, {
      children: "Um die Komponenten Styles zu verwenden, musst du das Stylesheet importieren.\nFüge diese Zeile zum Einstiegspunkt deines Projektes hinzu."
    }), "\n", _jsx(_components.pre, {
      children: _jsx(_components.code, {
        children: "import \"@mittwald/flow-stylesheet/css\";\n"
      })
    }), "\n", _jsx(_components.hr, {}), "\n", _jsx(_components.h2, {
      children: "Anwendung des Stylesheets"
    }), "\n", _jsx(_components.p, {
      children: "Um anfangen zu können, solltest du verstehen, wie die Klassennamen strukturiert\nsind. Die im Stylesheet bereitgestellten Klassennamen folgen einem konsistenten,\nkomponentenbasierten und leicht zu verstehendem Schema."
    }), "\n", _jsx(_components.hr, {}), "\n", _jsx(_components.h3, {
      children: "Generelle Klassennamen-Auszeichnungen"
    }), "\n", _jsxs(_components.p, {
      children: ["Alle Klassennamen sind in Lowercase geschrieben und benutzen ", _jsx(_components.code, {
        children: "-"
      }), " um Wörter zu\ntrennen und ", _jsx(_components.code, {
        children: "--"
      }), " um logische Abschnitte zu unterteilen."]
    }), "\n", _jsxs(_components.p, {
      children: ["Der erste logische Abschnitt ist immer der ", _jsx(_components.code, {
        children: "flow"
      }), " Namespace. Andere Abschnitte\nkönnten beispielsweise so aussehen:"]
    }), "\n", _jsx(_components.h4, {
      children: "Komponenten"
    }), "\n", _jsx(_components.pre, {
      children: _jsx(_components.code, {
        children: ".flow--button\n.flow--heading\n.flow--status-icon\n"
      })
    }), "\n", _jsx(_components.h4, {
      children: "Sub-Komponenten"
    }), "\n", _jsx(_components.pre, {
      children: _jsx(_components.code, {
        children: ".flow--navigation\n.flow--navigation--navigation-item\n"
      })
    }), "\n", _jsx(_components.h4, {
      children: "Spezialisierung: Verschiedene Varianten"
    }), "\n", _jsx(_components.pre, {
      children: _jsx(_components.code, {
        children: ".flow--button--primary\n.flow--inline-alert--danger\n.flow--icon--fixed-width\n"
      })
    }), "\n", _jsx(_components.h4, {
      children: "Spezialisierung: In einer Komposition verwendete Komponenten"
    }), "\n", _jsx(_components.pre, {
      children: _jsx(_components.code, {
        children: ".flow--button--icon\n.flow--inline-alert--status-icon\n"
      })
    }), "\n", _jsx(_components.hr, {}), "\n", _jsx(_components.h3, {
      children: "Ein Hinweis zur Spezialisierung"
    }), "\n", _jsxs(_components.p, {
      children: ["Klassennamen die verwendet werden, um die Basiskomponente zu spezialisieren,\nmüssen immer ", _jsx(_components.strong, {
        children: "zusätzlich zum Basis-Klassennamen"
      }), " verwendet werden."]
    }), "\n", _jsx(_components.p, {
      children: "Hier ein paar Beispiele um die diese Anforderung zu verdeutlichen:"
    }), "\n", _jsx(LiveCodeEditor, {
      example: "variants"
    }), "\n", _jsx(_components.h4, {
      children: "Kombinierte Varianten"
    }), "\n", _jsx(LiveCodeEditor, {
      example: "multiple-variants"
    }), "\n", _jsx(_components.h4, {
      children: "In einer Komposition verwendete Komponenten"
    }), "\n", _jsxs(_components.p, {
      children: ["Es ist gängige Praxis, größere Komponenten aus bereits bestehenden kleineren\nKomponenten zusammenzusetzen. Der InlineAlert besteht beispielsweise aus einem\nIcon, einer Heading und optionalem Inhalt. Die verwendeten Komponenten müssen\nihren Basis-Klassennamen für das grundsätzliche Styling erhalten (", _jsx(_components.code, {
        children: "flow--icon"
      }), "),\nsowie den spezialisierten Klassennamen (", _jsx(_components.code, {
        children: "flow--inline-alert--status-icon"
      }), "), um\nspezifische Styles des Inline Alerts zu erhalten."]
    }), "\n", _jsx(LiveCodeEditor, {
      example: "composition"
    })]
  });
}
function MDXContent(props = {}) {
  const {wrapper: MDXLayout} = {
    ..._provideComponents(),
    ...props.components
  };
  return MDXLayout ? _jsx(MDXLayout, {
    ...props,
    children: _jsx(_createMdxContent, {
      ...props
    })
  }) : _createMdxContent(props);
}
return {
  default: MDXContent
};
function _missingMdxReference(id, component) {
  throw new Error("Expected " + (component ? "component" : "object") + " `" + id + "` to be defined: you likely forgot to import, pass, or provide it.");
}
d:T265c,"use strict";
const {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];
const {useMDXComponents: _provideComponents} = arguments[0];
function _createMdxContent(props) {
  const _components = {
    h2: "h2",
    h3: "h3",
    h4: "h4",
    hr: "hr",
    li: "li",
    p: "p",
    ul: "ul",
    ..._provideComponents(),
    ...props.components
  }, {Do, DoAndDont, Dont} = _components;
  if (!Do) _missingMdxReference("Do", true);
  if (!DoAndDont) _missingMdxReference("DoAndDont", true);
  if (!Dont) _missingMdxReference("Dont", true);
  return _jsxs(_Fragment, {
    children: [_jsx(_components.h2, {
      children: "Best Practices"
    }), "\n", _jsxs(_components.ul, {
      children: ["\n", _jsx(_components.li, {
        children: "Platziere Fehlermeldungen in unmittelbarer Nähe zur Ursache des Problems."
      }), "\n", _jsx(_components.li, {
        children: "Stelle sicher, dass Fehlermeldungen kurz, verständlich, hilfreich und\nhandlungsorientiert sind."
      }), "\n", _jsx(_components.li, {
        children: "Versuche bei jeder Fehlermeldung eine Lösung zu kommunizieren."
      }), "\n", _jsx(_components.li, {
        children: "Unterscheide verschiedene Arten von Fehlermeldungen, basierend auf ihrem\nUmfang und ihrer Dringlichkeit."
      }), "\n"]
    }), "\n", _jsx(_components.hr, {}), "\n", _jsx(_components.h2, {
      children: "Grundlagen"
    }), "\n", _jsx(_components.h3, {
      children: "Kurz und hilfreich"
    }), "\n", _jsx(_components.p, {
      children: "Fehlermeldungen sollten kurz, sinnvoll und hilfreich für den Nutzer sein. Es\ngilt: So kurz wie möglich, aber so lang wie nötig. Das bedeutet allerdings auch,\ndass es in manchen Fällen ausreichend sein kann, nur die Lösung zu nennen."
    }), "\n", _jsxs(DoAndDont, {
      children: [_jsx(Dont, {
        exampleText: "Wir unterstützen die Formatierung nicht. Bitte gib eine E-Mail-Adresse im Format\nname@domain.de ein.",
        children: _jsx(_components.h4, {
          children: "Don't"
        })
      }), _jsx(Do, {
        exampleText: "Bitte gib eine E-Mail-Adresse im Format name@domain.de ein.",
        children: _jsx(_components.h4, {
          children: "Do"
        })
      })]
    }), "\n", _jsx(_components.h3, {
      children: "Verständliche Sprache, keine Fachsprache"
    }), "\n", _jsx(_components.p, {
      children: "Vermeide technische Begriffe und konzentriere dich auf eine einfach\nverständliche Sprache. Nutzer verstehen so am ehesten, was schiefgelaufen ist\nund wie sie das Problem lösen können."
    }), "\n", _jsxs(DoAndDont, {
      children: [_jsx(Dont, {
        exampleText: "Fehlercode 503: Verbindung zum Server fehlgeschlagen.",
        children: _jsx(_components.h4, {
          children: "Don't"
        })
      }), _jsx(Do, {
        exampleText: "Wir konnten keine Verbindung zum Server herstellen. Bitte versuche es erneut.",
        children: _jsx(_components.h4, {
          children: "Do"
        })
      })]
    }), "\n", _jsx(_components.h3, {
      children: "Schuldzuweisungen vermeiden"
    }), "\n", _jsx(_components.p, {
      children: "Ein Fehler an sich ist bereits unangenehm und frustrierend. Daher sollte die\nFehlermeldung dem Nutzer das Gefühl von Unterstützung und Fürsorge vermitteln,\nanstatt ihm ein Schuldgefühl zu vermitteln oder seine Frustration zu verstärken."
    }), "\n", _jsxs(DoAndDont, {
      children: [_jsx(Dont, {
        exampleText: "Du hast ein ungültiges Bild hochgeladen. Überprüfe die Dateigröße und versuche\nes erneut.",
        children: _jsx(_components.h4, {
          children: "Don't"
        })
      }), _jsx(Do, {
        exampleText: "Wir konnten das Bild nicht hochladen. Bitte überprüfe die Dateigröße und\nversuche es erneut.",
        children: _jsx(_components.h4, {
          children: "Do"
        })
      })]
    }), "\n", _jsx(_components.h3, {
      children: "Fehler eingestehen, Verständnis erleichtern"
    }), "\n", _jsx(_components.p, {
      children: "Fehlermeldungen sind einfacher zu verstehen, wenn sie sich auf das System als\n\"wir\" und den Nutzer als \"du\" beziehen. So werden die Fragen \"Wo ist etwas\nschiefgegangen?\" und \"Wer muss handeln, um es zu beheben?\" einfach und\nverständlich beantwortet."
    }), "\n", _jsxs(DoAndDont, {
      children: [_jsx(Dont, {
        exampleText: "Fehler beim Zurücksetzen des Passworts. Bitte versuche es erneut.",
        children: _jsx(_components.h4, {
          children: "Don't"
        })
      }), _jsx(Do, {
        exampleText: "Wir konnten dein Passwort nicht zurücksetzen. Bitte überprüfe die E-Mail-Adresse\nund versuche es erneut.",
        children: _jsx(_components.h4, {
          children: "Do"
        })
      })]
    }), "\n", _jsx(_components.h3, {
      children: "Keine ungerechtfertigten Entschuldigungen"
    }), "\n", _jsx(_components.p, {
      children: "Entschuldige dich nicht für kleine Fehler. Dies kann Fehler oft schlimmer\nerscheinen lassen und vom wichtigen Teil der Nachricht ablenken.\nEntschuldigungen sollten für ernsthafte Fehler aufgespart werden, wie den\nVerlust von Daten oder wenn der Nutzer eine größere Aktion zur Behebung des\nProblems ausführen muss."
    }), "\n", _jsxs(DoAndDont, {
      children: [_jsxs(Dont, {
        exampleText: "Es tut uns leid, wir unterstützen das Dateiformat nicht.",
        children: [_jsx(_components.h4, {
          children: "Don't"
        }), _jsx(_components.p, {
          children: "Entschuldige dich nicht für Kleinigkeiten oder wenn das System keine Schuld\nträgt."
        })]
      }), _jsxs(Do, {
        exampleText: "Wir konnten die Datei nicht hochladen. Bitte verwende eine Datei vom Typ XY.",
        children: [_jsx(_components.h4, {
          children: "Do"
        }), _jsx(_components.p, {
          children: "Entschuldige Dich bei ernsthaften Fehlern, z.B. einem systembedingten Verlust von Daten."
        })]
      })]
    }), "\n", _jsx(_components.h3, {
      children: "Wahrscheinlichsten Fehler nennen"
    }), "\n", _jsx(_components.p, {
      children: "Wenn ein Fehler genau eine Ursache hat, dann erkläre, wie der Fehler zu beheben\nist. Gibt es mehrere mögliche Gründe, so sollte die Fehlermeldung beschreiben,\nwie der wahrscheinlichste Grund zu beheben ist."
    }), "\n", _jsxs(DoAndDont, {
      children: [_jsx(Dont, {
        exampleText: "Das eingegebene Passwort entspricht nicht den Mindestanforderungen. Stelle\nsicher, dass es min. 8 Zeichen, einen Groß- und Kleinbuchstaben, eine Ziffer und\nein Sonderzeichen enthält.",
        children: _jsx(_components.h4, {
          children: "Don't"
        })
      }), _jsx(Do, {
        exampleText: "Dein Passwort muss mindestens 8 Zeichen enthalten.",
        children: _jsx(_components.h4, {
          children: "Do"
        })
      })]
    }), "\n", _jsx(_components.h3, {
      children: "Nicht zu spezifisch"
    }), "\n", _jsx(_components.p, {
      children: "Formuliere Fehlermeldungen lieber etwas allgemeiner als zu spezifisch. Oft ist\nes nicht erforderlich, spezifische Details wie Dateinamen, Benutzernamen oder\nOrdner zu nennen, da der Nutzer diese Informationen an anderen Stellen in der\nBenutzeroberfläche finden kann."
    }), "\n", _jsxs(DoAndDont, {
      children: [_jsx(Dont, {
        exampleText: "Wir konnten die Datei „example_file-20.4.24.xy“ nicht hochladen. Bitte verwende\neine Datei vom Typ XY.",
        children: _jsx(_components.h4, {
          children: "Don't"
        })
      }), _jsx(Do, {
        exampleText: "Wir konnten die Datei nicht hochladen. Bitte verwende eine Datei vom Typ XY.",
        children: _jsx(_components.h4, {
          children: "Do"
        })
      })]
    }), "\n", _jsx(_components.h3, {
      children: "Aktiv schreiben"
    }), "\n", _jsx(_components.p, {
      children: "Fehlermeldungen werden aktiv formuliert, um das Verständnis zu erleichtern."
    }), "\n", _jsxs(DoAndDont, {
      children: [_jsx(Dont, {
        exampleText: "Es werden nur Dateien vom Typ XY unterstützt.",
        children: _jsx(_components.h4, {
          children: "Don't"
        })
      }), _jsx(Do, {
        exampleText: "Wir unterstützen nur Dateien vom Typ XY.",
        children: _jsx(_components.h4, {
          children: "Do"
        })
      })]
    }), "\n", _jsx(_components.h3, {
      children: "Positiv formulieren"
    }), "\n", _jsx(_components.p, {
      children: "Versuche, Fehlermeldungen positiv zu formulieren und auf negativ besetzte\nBegriffe (z.B. Fehler, Problem, fehlgeschlagen, falsch, ungültig, verboten, ...)\nzu verzichten. Konzentriere dich stattdessen auf die Lösung und was als nächstes\ngetan werden kann. Beachte jedoch, dass dies in Fällen von Systemfehlern, für\ndie es keine direkte Lösung gibt, nicht immer möglich ist."
    }), "\n", _jsxs(DoAndDont, {
      children: [_jsx(Dont, {
        exampleText: "Durch ein Problem mit dem Server ist die Verbindung fehlgeschlagen.",
        children: _jsx(_components.h4, {
          children: "Don't"
        })
      }), _jsx(Do, {
        exampleText: "Es tut uns leid, wir konnten keine Verbindung zum Server herstellen. Bitte\nversuche es erneut.",
        children: _jsx(_components.h4, {
          children: "Do"
        })
      })]
    })]
  });
}
function MDXContent(props = {}) {
  const {wrapper: MDXLayout} = {
    ..._provideComponents(),
    ...props.components
  };
  return MDXLayout ? _jsx(MDXLayout, {
    ...props,
    children: _jsx(_createMdxContent, {
      ...props
    })
  }) : _createMdxContent(props);
}
return {
  default: MDXContent
};
function _missingMdxReference(id, component) {
  throw new Error("Expected " + (component ? "component" : "object") + " `" + id + "` to be defined: you likely forgot to import, pass, or provide it.");
}
e:T412,import Button from "@mittwald/flow-react-components/Button";
import Action from "@mittwald/flow-react-components/Action";
import { sleepLong } from "@/content/03-components/actions/action/examples/lib";
import { Modal } from "@mittwald/flow-react-components/Modal";
import Heading from "@mittwald/flow-react-components/Heading";
import { Content } from "@mittwald/flow-react-components/Content";
import ActionGroup from "@mittwald/flow-react-components/ActionGroup";

<Action action={sleepLong}>
  <Modal slot="actionConfirm">
    <Heading>Projekt löschen</Heading>
    <Content>
      Das Löschen eines Projektes kann nicht rückgängig
      gemacht werden. Möchtest Du das Projekt
      &quot;Test&quot; dennoch löschen?
    </Content>
    <ActionGroup>
      <Button color="danger">
        Unwiederbringlich löschen
      </Button>
      <Button color="secondary" variant="soft">
        Abbrechen
      </Button>
    </ActionGroup>
  </Modal>
  <Button color="secondary" variant="soft">
    Projekt löschen
  </Button>
</Action>;
f:Tdb8,import {
  IconApp,
  IconBackup,
  IconCalendar,
  IconCamera,
  IconChangelog,
  IconClock,
  IconContractPosition,
  IconCredit,
  IconCronjob,
  IconCustomer,
  IconDatabase,
  IconDomain,
  IconEmail,
  IconExtension,
  IconInbox,
  IconInvoice,
  IconMember,
  IconNumber,
  IconOrder,
  IconPerformance,
  IconProject,
  IconSearchEngine,
  IconServer,
  IconSpamProtectionOff,
  IconSpamProtectionOn,
  IconSshSftp,
  IconStar,
  IconStarFilled,
  IconSubdomain,
  IconSupport,
  IconTicket,
} from "@mittwald/flow-react-components/Icons";
import Label from "@mittwald/flow-react-components/Label";
import LabeledValue from "@mittwald/flow-react-components/LabeledValue";
import ColumnLayout from "@mittwald/flow-react-components/ColumnLayout";

<ColumnLayout l={[1, 1, 1, 1, 1]} m={[1, 1, 1]} s={[1, 1]}>
  <LabeledValue>
    <Label>Star</Label>
    <IconStar />
  </LabeledValue>
  <LabeledValue>
    <Label>Star Filled</Label>
    <IconStarFilled />
  </LabeledValue>
  <LabeledValue>
    <Label>Project</Label>
    <IconProject />
  </LabeledValue>
  <LabeledValue>
    <Label>Server</Label>
    <IconServer />
  </LabeledValue>
  <LabeledValue>
    <Label>Customer</Label>
    <IconCustomer />
  </LabeledValue>
  <LabeledValue>
    <Label>Support</Label>
    <IconSupport />
  </LabeledValue>
  <LabeledValue>
    <Label>E-Mail</Label>
    <IconEmail />
  </LabeledValue>
  <LabeledValue>
    <Label>App</Label>
    <IconApp />
  </LabeledValue>
  <LabeledValue>
    <Label>Domain</Label>
    <IconDomain />
  </LabeledValue>
  <LabeledValue>
    <Label>Subdomain</Label>
    <IconSubdomain />
  </LabeledValue>
  <LabeledValue>
    <Label>Database</Label>
    <IconDatabase />
  </LabeledValue>
  <LabeledValue>
    <Label>Changelog</Label>
    <IconChangelog />
  </LabeledValue>
  <LabeledValue>
    <Label>Extension</Label>
    <IconExtension />
  </LabeledValue>
  <LabeledValue>
    <Label>Order</Label>
    <IconOrder />
  </LabeledValue>
  <LabeledValue>
    <Label>Performance</Label>
    <IconPerformance />
  </LabeledValue>
  <LabeledValue>
    <Label>Ticket</Label>
    <IconTicket />
  </LabeledValue>
  <LabeledValue>
    <Label>Invoice</Label>
    <IconInvoice />
  </LabeledValue>
  <LabeledValue>
    <Label>Credit</Label>
    <IconCredit />
  </LabeledValue>
  <LabeledValue>
    <Label>Contract Position</Label>
    <IconContractPosition />
  </LabeledValue>
  <LabeledValue>
    <Label>Camera</Label>
    <IconCamera />
  </LabeledValue>
  <LabeledValue>
    <Label>Backup</Label>
    <IconBackup />
  </LabeledValue>
  <LabeledValue>
    <Label>Cronjob</Label>
    <IconCronjob />
  </LabeledValue>
  <LabeledValue>
    <Label>Member</Label>
    <IconMember />
  </LabeledValue>
  <LabeledValue>
    <Label>User</Label>
    <IconMember />
  </LabeledValue>
  <LabeledValue>
    <Label>Search Engine</Label>
    <IconSearchEngine />
  </LabeledValue>
  <LabeledValue>
    <Label>Ssh Sftp</Label>
    <IconSshSftp />
  </LabeledValue>
  <LabeledValue>
    <Label>Inbox</Label>
    <IconInbox />
  </LabeledValue>
  <LabeledValue>
    <Label>Spam Protection Off</Label>
    <IconSpamProtectionOff />
  </LabeledValue>
  <LabeledValue>
    <Label>Spam Protection On</Label>
    <IconSpamProtectionOn />
  </LabeledValue>
  <LabeledValue>
    <Label>Number</Label>
    <IconNumber />
  </LabeledValue>
  <LabeledValue>
    <Label>Clock</Label>
    <IconClock />
  </LabeledValue>
  <LabeledValue>
    <Label>Calendar</Label>
    <IconCalendar />
  </LabeledValue>
</ColumnLayout>;
10:T1077,import {
  IconBackLink,
  IconCheck,
  IconCheckboxChecked,
  IconCheckboxEmpty,
  IconCheckboxIndeterminate,
  IconChevronDown,
  IconChevronLeft,
  IconChevronRight,
  IconChevronUp,
  IconClose,
  IconCode,
  IconContextMenu,
  IconCopy,
  IconDashboard,
  IconDelete,
  IconEdit,
  IconExternalLink,
  IconFilter,
  IconHide,
  IconHome,
  IconListView,
  IconLogout,
  IconMaximize,
  IconMenu,
  IconMinimize,
  IconMinus,
  IconNotification,
  IconPlus,
  IconRadioOff,
  IconRadioOn,
  IconRandom,
  IconSave,
  IconSearch,
  IconSettings,
  IconShare,
  IconShow,
  IconSorting,
  IconTerminate,
  IconTileView,
} from "@mittwald/flow-react-components/Icons";
import Label from "@mittwald/flow-react-components/Label";
import LabeledValue from "@mittwald/flow-react-components/LabeledValue";
import ColumnLayout from "@mittwald/flow-react-components/ColumnLayout";

<ColumnLayout l={[1, 1, 1, 1, 1]} m={[1, 1, 1]} s={[1, 1]}>
  <LabeledValue>
    <Label>Home</Label>
    <IconHome />
  </LabeledValue>
  <LabeledValue>
    <Label>Notification</Label>
    <IconNotification />
  </LabeledValue>
  <LabeledValue>
    <Label>Dashboard</Label>
    <IconDashboard />
  </LabeledValue>
  <LabeledValue>
    <Label>Logout</Label>
    <IconLogout />
  </LabeledValue>
  <LabeledValue>
    <Label>Search</Label>
    <IconSearch />
  </LabeledValue>
  <LabeledValue>
    <Label>TileView</Label>
    <IconTileView />
  </LabeledValue>
  <LabeledValue>
    <Label>ListView</Label>
    <IconListView />
  </LabeledValue>
  <LabeledValue>
    <Label>Filter</Label>
    <IconFilter />
  </LabeledValue>
  <LabeledValue>
    <Label>Sorting</Label>
    <IconSorting />
  </LabeledValue>
  <LabeledValue>
    <Label>Menu</Label>
    <IconMenu />
  </LabeledValue>
  <LabeledValue>
    <Label>Maximize</Label>
    <IconMaximize />
  </LabeledValue>
  <LabeledValue>
    <Label>Minimize</Label>
    <IconMinimize />
  </LabeledValue>
  <LabeledValue>
    <Label>Edit</Label>
    <IconEdit />
  </LabeledValue>
  <LabeledValue>
    <Label>Share</Label>
    <IconShare />
  </LabeledValue>
  <LabeledValue>
    <Label>Save</Label>
    <IconSave />
  </LabeledValue>
  <LabeledValue>
    <Label>Settings</Label>
    <IconSettings />
  </LabeledValue>
  <LabeledValue>
    <Label>Delete</Label>
    <IconDelete />
  </LabeledValue>
  <LabeledValue>
    <Label>Terminate</Label>
    <IconTerminate />
  </LabeledValue>
  <LabeledValue>
    <Label>Copy</Label>
    <IconCopy />
  </LabeledValue>
  <LabeledValue>
    <Label>Backlink</Label>
    <IconBackLink />
  </LabeledValue>
  <LabeledValue>
    <Label>Random</Label>
    <IconRandom />
  </LabeledValue>
  <LabeledValue>
    <Label>External Link</Label>
    <IconExternalLink />
  </LabeledValue>
  <LabeledValue>
    <Label>Chevron Down</Label>
    <IconChevronDown />
  </LabeledValue>
  <LabeledValue>
    <Label>Chevron Left</Label>
    <IconChevronLeft />
  </LabeledValue>
  <LabeledValue>
    <Label>Chevron Right</Label>
    <IconChevronRight />
  </LabeledValue>
  <LabeledValue>
    <Label>ChevronUp</Label>
    <IconChevronUp />
  </LabeledValue>
  <LabeledValue>
    <Label>Close</Label>
    <IconClose />
  </LabeledValue>
  <LabeledValue>
    <Label>Show</Label>
    <IconShow />
  </LabeledValue>
  <LabeledValue>
    <Label>Hide</Label>
    <IconHide />
  </LabeledValue>
  <LabeledValue>
    <Label>Plus</Label>
    <IconPlus />
  </LabeledValue>
  <LabeledValue>
    <Label>Minus</Label>
    <IconMinus />
  </LabeledValue>
  <LabeledValue>
    <Label>Context Menu</Label>
    <IconContextMenu />
  </LabeledValue>
  <LabeledValue>
    <Label>Code</Label>
    <IconCode />
  </LabeledValue>
  <LabeledValue>
    <Label>Checkbox Checked</Label>
    <IconCheckboxChecked />
  </LabeledValue>
  <LabeledValue>
    <Label>Checkbox Empty</Label>
    <IconCheckboxEmpty />
  </LabeledValue>
  <LabeledValue>
    <Label>Checkbox Indeterminate</Label>
    <IconCheckboxIndeterminate />
  </LabeledValue>
  <LabeledValue>
    <Label>RadioOff</Label>
    <IconRadioOff />
  </LabeledValue>
  <LabeledValue>
    <Label>RadioOn</Label>
    <IconRadioOn />
  </LabeledValue>
  <LabeledValue>
    <Label>Check</Label>
    <IconCheck />
  </LabeledValue>
</ColumnLayout>;
11:T4f4,import { useForm } from "react-hook-form";
import {
  Field,
  Form,
} from "@mittwald/flow-react-components/react-hook-form";
import { TextField } from "@mittwald/flow-react-components/TextField";
import { Label } from "@mittwald/flow-react-components/Label";
import { ActionGroup } from "@mittwald/flow-react-components/ActionGroup";
import { Button } from "@mittwald/flow-react-components/Button";
import { Section } from "@mittwald/flow-react-components/Section";
import { FieldDescription } from "@mittwald/flow-react-components/FieldDescription";

export default () => {
  interface Values {
    name: string;
  }
  const form = useForm<Values>();

  const handleOnSubmit = (values: Values) =>
    alert(JSON.stringify(values));

  return (
    <Form form={form} onSubmit={handleOnSubmit}>
      <Section>
        <Field
          name="name"
          rules={{
            required: "The project name is required",
          }}
        >
          <TextField>
            <Label>Name</Label>
            <FieldDescription>
              The name of the project
            </FieldDescription>
          </TextField>
        </Field>
        <ActionGroup>
          <Button type="submit">Save</Button>
        </ActionGroup>
      </Section>
    </Form>
  );
};
12:T50e,import Button from "@mittwald/flow-react-components/Button";
import HeaderNavigation from "@mittwald/flow-react-components/HeaderNavigation";
import {
  IconLogout,
  IconNotification,
  IconSettings,
  IconSupport,
  IconSearch,
} from "@mittwald/flow-react-components/Icons";
import ContextMenu, {
  ContextMenuTrigger,
} from "@mittwald/flow-react-components/ContextMenu";
import Avatar from "@mittwald/flow-react-components/Avatar";
import Image from "@mittwald/flow-react-components/Image";
import Text from "@mittwald/flow-react-components/Text";
import MenuItem from "@mittwald/flow-react-components/MenuItem";

<HeaderNavigation aria-label="Header navigation">
  <Button>
    <IconSearch />
  </Button>
  <Button>
    <IconSupport />
  </Button>
  <Button>
    <IconNotification />
  </Button>
  <ContextMenuTrigger>
    <Button>
      <Avatar>
        <Image
          alt="Gopher"
          src="https://cdn.shopify.com/s/files/1/2022/6883/products/IMG_2002_250x250@2x.JPG?v=1538235544"
        />
      </Avatar>
    </Button>
    <ContextMenu>
      <MenuItem>
        <IconSettings />
        <Text>Profil</Text>
      </MenuItem>
      <MenuItem>
        <IconLogout />
        <Text>Logout</Text>
      </MenuItem>
    </ContextMenu>
  </ContextMenuTrigger>
</HeaderNavigation>;
13:T5cf,import Tabs, {
  Tab,
  TabTitle,
} from "@mittwald/flow-react-components/Tabs";
import Section from "@mittwald/flow-react-components/Section";
import Heading from "@mittwald/flow-react-components/Heading";
import TextField from "@mittwald/flow-react-components/TextField";
import Label from "@mittwald/flow-react-components/Label";
import LabeledValue from "@mittwald/flow-react-components/LabeledValue";
import Text from "@mittwald/flow-react-components/Text";
import Header from "@mittwald/flow-react-components/Header";
import Switch from "@mittwald/flow-react-components/Switch";

<Tabs>
  <Tab>
    <TabTitle>Allgemein</TabTitle>
    <Section>
      <Heading>Allgemein</Heading>
      <TextField defaultValue="example@mittwald.de">
        <Label>E-Mail-Adresse</Label>
      </TextField>
    </Section>
  </Tab>
  <Tab id="storage">
    <TabTitle>Speicherplatz</TabTitle>
    <Section>
      <Heading>Speicherplatz</Heading>
      <LabeledValue>
        <Label>Verfügbarer Speicherplatz</Label>
        <Text>2.4 GB</Text>
      </LabeledValue>
    </Section>
  </Tab>
  <Tab>
    <TabTitle>Spamschutz</TabTitle>
    <Section>
      <Header>
        <Heading>Spamschutz</Heading>
        <Switch>Spamfilter</Switch>
      </Header>
      <Text>
        Der Spamfilter schützt dich vor ungewollten E-Mails.
        Niemand will Müll in seinem Postfach, daher
        empfehlen wir den Spamschutz immer aktiviert zu
        lassen.
      </Text>
    </Section>
  </Tab>
</Tabs>;
14:T5bb,import Modal, {
  ModalTrigger,
} from "@mittwald/flow-react-components/Modal";
import Content from "@mittwald/flow-react-components/Content";
import Text from "@mittwald/flow-react-components/Text";
import TextField from "@mittwald/flow-react-components/TextField";
import Label from "@mittwald/flow-react-components/Label";
import ActionGroup from "@mittwald/flow-react-components/ActionGroup";
import Button from "@mittwald/flow-react-components/Button";
import Heading from "@mittwald/flow-react-components/Heading";
import Action from "@mittwald/flow-react-components/Action";
import { sleepLong } from "@/content/03-components/actions/action/examples/lib";

<ModalTrigger>
  <Button color="accent">Organisation anlegen</Button>
  <Modal>
    <Heading>Neue Organisation</Heading>
    <Content>
      <Text>
        Eine Organisation kannst du dir wie ein Unternehmen
        vorstellen. An diesem Ort verwaltest du deine
        Mitarbeiter, Zahlungsmodalitäten und kannst deine
        Rechnungen einsehen.
      </Text>
      <TextField>
        <Label>Organisationsname</Label>
      </TextField>
    </Content>
    <ActionGroup>
      <Action closeOverlay="Modal">
        <Action action={sleepLong}>
          <Button color="accent">
            Organisation anlegen
          </Button>
        </Action>
        <Button variant="soft" color="secondary">
          Abbrechen
        </Button>
      </Action>
    </ActionGroup>
  </Modal>
</ModalTrigger>;
15:T5c5,import Modal, {
  ModalTrigger,
} from "@mittwald/flow-react-components/Modal";
import Content from "@mittwald/flow-react-components/Content";
import Text from "@mittwald/flow-react-components/Text";
import TextField from "@mittwald/flow-react-components/TextField";
import Label from "@mittwald/flow-react-components/Label";
import ActionGroup from "@mittwald/flow-react-components/ActionGroup";
import Button from "@mittwald/flow-react-components/Button";
import Heading from "@mittwald/flow-react-components/Heading";
import Action from "@mittwald/flow-react-components/Action";
import { sleepLong } from "@/content/03-components/actions/action/examples/lib";

<ModalTrigger>
  <Button color="accent">Organisation anlegen</Button>
  <Modal offCanvas>
    <Heading>Neue Organisation</Heading>
    <Content>
      <Text>
        Eine Organisation kannst du dir wie ein Unternehmen
        vorstellen. An diesem Ort verwaltest du deine
        Mitarbeiter, Zahlungsmodalitäten und kannst deine
        Rechnungen einsehen.
      </Text>
      <TextField>
        <Label>Organisationsname</Label>
      </TextField>
    </Content>
    <ActionGroup>
      <Action closeOverlay="Modal">
        <Action action={sleepLong}>
          <Button color="accent">
            Organisation anlegen
          </Button>
        </Action>
        <Button variant="soft" color="secondary">
          Abbrechen
        </Button>
      </Action>
    </ActionGroup>
  </Modal>
</ModalTrigger>;
16:T44a,import Text from "@mittwald/flow-react-components/Text";
import Button from "@mittwald/flow-react-components/Button";
import OffCanvas, {
  OffCanvasTrigger,
} from "@mittwald/flow-react-components/OffCanvas";
import {
  IconCustomer,
  IconMenu,
  IconProject,
  IconServer,
} from "@mittwald/flow-react-components/Icons";
import Link from "@mittwald/flow-react-components/Link";
import Navigation from "@mittwald/flow-react-components/Navigation";
import { Heading } from "@mittwald/flow-react-components/Heading";
import { Section } from "@mittwald/flow-react-components/Section";

<OffCanvasTrigger>
  <Button>
    <IconMenu />
  </Button>
  <OffCanvas>
    <Heading>Menü</Heading>
    <Section>
      <Navigation aria-label="Main menu">
        <Link>
          <IconCustomer />
          <Text>Customer</Text>
        </Link>
        <Link aria-current="page">
          <IconServer />
          <Text>Server</Text>
        </Link>
        <Link>
          <IconProject />
          <Text>Project</Text>
        </Link>
      </Navigation>
    </Section>
  </OffCanvas>
</OffCanvasTrigger>;
17:T513,import InlineAlert from "@mittwald/flow-react-components/InlineAlert";
import Heading from "@mittwald/flow-react-components/Heading";
import Content from "@mittwald/flow-react-components/Content";

<Row>
  <InlineAlert status="info">
    <Heading>E-Mail-Adresse wurde archiviert</Heading>
    <Content>
      Da deine Domain gelöscht wurde, wurde diese
      E-Mail-Adresse archiviert. Um E-Mails empfangen und
      senden zu können musst du die Adresse wieder
      umbenennen.
    </Content>
  </InlineAlert>

  <InlineAlert status="warning">
    <Heading>Dein Speicher ist fast voll</Heading>
    <Content>
      Dein Speicher ist zu über 80% belegt. Wir empfehlen
      dir deinen Speicherplatz zu erweitern, um Problemen
      vorzubeugen.
    </Content>
  </InlineAlert>

  <InlineAlert status="danger">
    <Heading>
      Es konnte kein SSL-Zertifikat ausgestellt werden
    </Heading>
    <Content>
      Für diese Domain konnte kein SSL-Zertifikat
      ausgestellt werden, da die Domain per IP nicht auf
      deine Server-IP zeigt.
    </Content>
  </InlineAlert>

  <InlineAlert status="success">
    <Heading>Deine App wurde aktualisiert</Heading>
    <Content>
      Deine App wurde erfolgreich auf die neueste Version
      aktualisiert.
    </Content>
  </InlineAlert>
</Row>;
18:T66f,import List, {
  ListFilter,
  ListItem,
  ListItemView,
  ListSorting,
  ListStaticData,
} from "@mittwald/flow-react-components/List";
import {
  type Domain,
  domains,
} from "@/content/03-components/structure/list/examples/domainApi";
import Avatar from "@mittwald/flow-react-components/Avatar";
import Heading from "@mittwald/flow-react-components/Heading";
import Text from "@mittwald/flow-react-components/Text";
import ContextMenu from "@mittwald/flow-react-components/ContextMenu";
import {
  IconDomain,
  IconSubdomain,
} from "@mittwald/flow-react-components/Icons";
import StatusBadge from "@mittwald/flow-react-components/StatusBadge";
import MenuItem from "@mittwald/flow-react-components/MenuItem";

<List batchSize={5}>
  <ListStaticData data={domains} />
  <ListFilter<Domain>
    property="type"
    mode="some"
    name="Type"
  />
  <ListSorting<Domain> property="domain" name="Domain" />
  <ListSorting<Domain> property="type" name="Type" />
  <ListItemView<Domain>>
    {(domain) => (
      <ListItem>
        <Avatar variant={domain.type === "Domain" ? 1 : 2}>
          {domain.type === "Domain" ? (
            <IconDomain />
          ) : (
            <IconSubdomain />
          )}
        </Avatar>
        <Heading>{domain.hostname}</Heading>
        {domain.verified ? (
          <Text>{domain.type}</Text>
        ) : (
          <StatusBadge status="warning">
            Nicht verifiziert
          </StatusBadge>
        )}
        <ContextMenu>
          <MenuItem>Details anzeigen</MenuItem>
          <MenuItem>Löschen</MenuItem>
        </ContextMenu>
      </ListItem>
    )}
  </ListItemView>
</List>;
19:T563,import List, {
  ListItem,
  ListItemView,
  ListStaticData,
} from "@mittwald/flow-react-components/List";
import {
  type Domain,
  domains,
} from "@/content/03-components/structure/list/examples/domainApi";
import Avatar from "@mittwald/flow-react-components/Avatar";
import Heading from "@mittwald/flow-react-components/Heading";
import Text from "@mittwald/flow-react-components/Text";
import ContextMenu, {
  MenuItem,
} from "@mittwald/flow-react-components/ContextMenu";
import {
  IconDomain,
  IconSubdomain,
} from "@mittwald/flow-react-components/Icons";
import StatusBadge from "@mittwald/flow-react-components/StatusBadge";

<List batchSize={2}>
  <ListStaticData data={domains} />
  <ListItemView<Domain>>
    {(domain) => (
      <ListItem>
        <Avatar variant={domain.type === "Domain" ? 1 : 2}>
          {domain.type === "Domain" ? (
            <IconDomain />
          ) : (
            <IconSubdomain />
          )}
        </Avatar>
        <Heading>{domain.hostname}</Heading>
        {domain.verified ? (
          <Text>{domain.type}</Text>
        ) : (
          <StatusBadge status="warning">
            Nicht verifiziert
          </StatusBadge>
        )}
        <ContextMenu>
          <MenuItem>Details anzeigen</MenuItem>
          <MenuItem>Löschen</MenuItem>
        </ContextMenu>
      </ListItem>
    )}
  </ListItemView>
</List>;
1a:T56c,import List, {
  ListItem,
  ListItemView,
  ListStaticData,
} from "@mittwald/flow-react-components/List";
import {
  type Domain,
  domains,
} from "@/content/03-components/structure/list/examples/domainApi";
import Avatar from "@mittwald/flow-react-components/Avatar";
import Heading from "@mittwald/flow-react-components/Heading";
import Text from "@mittwald/flow-react-components/Text";
import ContextMenu, {
  MenuItem,
} from "@mittwald/flow-react-components/ContextMenu";
import {
  IconDomain,
  IconSubdomain,
} from "@mittwald/flow-react-components/Icons";
import StatusBadge from "@mittwald/flow-react-components/StatusBadge";

<List batchSize={5}>
  <ListStaticData data={domains} />
  <ListItemView<Domain>>
    {(domain) => (
      <ListItem href="#">
        <Avatar variant={domain.type === "Domain" ? 1 : 2}>
          {domain.type === "Domain" ? (
            <IconDomain />
          ) : (
            <IconSubdomain />
          )}
        </Avatar>
        <Heading>{domain.hostname}</Heading>
        {domain.verified ? (
          <Text>{domain.type}</Text>
        ) : (
          <StatusBadge status="warning">
            Nicht verifiziert
          </StatusBadge>
        )}
        <ContextMenu>
          <MenuItem>Details anzeigen</MenuItem>
          <MenuItem>Löschen</MenuItem>
        </ContextMenu>
      </ListItem>
    )}
  </ListItemView>
</List>;
1b:T42a,import Heading from "@mittwald/flow-react-components/Heading";
import Text from "@mittwald/flow-react-components/Text";
import Link from "@mittwald/flow-react-components/Link";
import Section from "@mittwald/flow-react-components/Section";
import TextField from "@mittwald/flow-react-components/TextField";
import Label from "@mittwald/flow-react-components/Label";
import { IconMember } from "@mittwald/flow-react-components/Icons";

<>
  <Section>
    <Heading>
      <IconMember />
      Persönliche Informationen
    </Heading>
    <TextField isRequired defaultValue="John">
      <Label>Vorname</Label>
    </TextField>
    <TextField isRequired defaultValue="Doe">
      <Label>Nachname</Label>
    </TextField>
  </Section>
  <Section>
    <Heading>Newsletter</Heading>
    <Text>
      Kommende Releases, neue Features und Tipps rund um
      dein Hosting – wir bringen dir das Wichtigste in dein
      Postfach. Abonniere unseren Newsletter und bleib auf
      dem Laufenden.
    </Text>
    <Link href="#">Newsletter abonnieren</Link>
  </Section>
</>;
1c:T4c5,import {
  Table,
  TableBody,
  TableCell,
  TableColumn,
  TableHeader,
  TableRow,
} from "@mittwald/flow-react-components/Table";
import { InlineCode } from "@mittwald/flow-react-components/InlineCode";

<Table aria-label="Button Props">
  <TableHeader>
    <TableColumn>Name</TableColumn>
    <TableColumn>Type</TableColumn>
    <TableColumn>Default</TableColumn>
    <TableColumn>Description</TableColumn>
  </TableHeader>
  <TableBody>
    <TableRow>
      <TableCell>
        <InlineCode>color</InlineCode>
      </TableCell>
      <TableCell>
        primary | accent | secondary | danger
      </TableCell>
      <TableCell>primary</TableCell>
      <TableCell>The color of the button</TableCell>
    </TableRow>
    <TableRow>
      <TableCell>
        <InlineCode>variant</InlineCode>
      </TableCell>
      <TableCell>plain | solid | soft</TableCell>
      <TableCell>solid</TableCell>
      <TableCell>The variant of the button</TableCell>
    </TableRow>
    <TableRow>
      <TableCell>
        <InlineCode>size</InlineCode>
      </TableCell>
      <TableCell>m | s</TableCell>
      <TableCell>m</TableCell>
      <TableCell>The size of the button</TableCell>
    </TableRow>
  </TableBody>
</Table>;
26:Tbd8,"use strict";
const {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];
const {useMDXComponents: _provideComponents} = arguments[0];
function _createMdxContent(props) {
  const _components = {
    code: "code",
    h2: "h2",
    hr: "hr",
    p: "p",
    pre: "pre",
    strong: "strong",
    ..._provideComponents(),
    ...props.components
  }, {Content, Heading, InlineAlert} = _components;
  if (!Content) _missingMdxReference("Content", true);
  if (!Heading) _missingMdxReference("Heading", true);
  if (!InlineAlert) _missingMdxReference("InlineAlert", true);
  return _jsxs(_Fragment, {
    children: [_jsxs(InlineAlert, {
      children: [_jsx(Heading, {
        children: "Hinweis zu frühem Entwicklungsstand und Stabilität"
      }), _jsx(Content, {
        children: _jsxs(_components.p, {
          children: ["Dieses Projekt befindet sich in einer ", _jsx(_components.strong, {
            children: "frühen Entwicklungsphase"
          }), ", weswegen\nwir keine Garantie zur Stabilität bieten können. Du kannst dieses Projekt\ndennoch gerne ausprobieren, verlasse dich aber bitte nicht darauf, dass die\naktuellen Inhalte in dieser Form bestehen bleiben. Wir freuen uns über jedes\nFeedback zum aktuellen Entwicklungsstand!"]
        })
      })]
    }), "\n", _jsx(_components.hr, {}), "\n", _jsx(_components.h2, {
      children: "Installation der Flow React Component Library"
    }), "\n", _jsxs(_components.p, {
      children: ["Die Flow React Component Library kann mit einem Package Manager wie ", _jsx(_components.code, {
        children: "npm"
      }), " or\n", _jsx(_components.code, {
        children: "yarn"
      }), " installiert werden."]
    }), "\n", _jsx(_components.pre, {
      children: _jsx(_components.code, {
        className: "language-shell",
        children: "yarn add @mittwald/flow-react-components\n"
      })
    }), "\n", _jsx(_components.p, {
      children: "Zur leichteren Verwaltung der Abhängigkeiten werden alle Komponenten innerhalb\ndiese Packages bereitgestellt."
    }), "\n", _jsx(_components.hr, {}), "\n", _jsx(_components.h2, {
      children: "Styles importieren"
    }), "\n", _jsx(_components.p, {
      children: "Um die Komponenten Styles zu verwenden, musst du das Stylesheet importieren.\nFüge diese Zeile zum Einstiegspunkt deines Projektes hinzu."
    }), "\n", _jsx(_components.pre, {
      children: _jsx(_components.code, {
        children: "import \"@mittwald/flow-react-components/styles\";\n"
      })
    })]
  });
}
function MDXContent(props = {}) {
  const {wrapper: MDXLayout} = {
    ..._provideComponents(),
    ...props.components
  };
  return MDXLayout ? _jsx(MDXLayout, {
    ...props,
    children: _jsx(_createMdxContent, {
      ...props
    })
  }) : _createMdxContent(props);
}
return {
  default: MDXContent
};
function _missingMdxReference(id, component) {
  throw new Error("Expected " + (component ? "component" : "object") + " `" + id + "` to be defined: you likely forgot to import, pass, or provide it.");
}
27:{"description":"Willkommen in der Flow Dokumentation!"}
28:{}
25:{"compiledSource":"$26","frontmatter":"$27","scope":"$28"}
29:{}
2a:["01-get-started","installation"]
2c:T1887,"use strict";
const {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];
const {useMDXComponents: _provideComponents} = arguments[0];
function _createMdxContent(props) {
  const _components = {
    code: "code",
    h2: "h2",
    h3: "h3",
    h4: "h4",
    hr: "hr",
    p: "p",
    pre: "pre",
    strong: "strong",
    ..._provideComponents(),
    ...props.components
  }, {LiveCodeEditor} = _components;
  if (!LiveCodeEditor) _missingMdxReference("LiveCodeEditor", true);
  return _jsxs(_Fragment, {
    children: [_jsx(_components.p, {
      children: "Die Flow-Komponenten-Bibliotheken werden über ein gemeinsames Stylesheet, das\nauch für sich alleine verwendet werden kann, gestyled. Das kann nützlich sein,\nwenn du dein eigenes Framework verwendest, um Komponenten zu bauen, und dich\ndabei an die mittwald Styling Guidelines halten willst."
    }), "\n", _jsx(_components.p, {
      children: "Auf dieser Seite findest du alle Informationen darüber, wie du das Stylesheet\ninstallieren kannst und wie die Klassennamen strukturiert sind."
    }), "\n", _jsx(_components.hr, {}), "\n", _jsx(_components.h2, {
      children: "Installation des Standalone Stylesheets"
    }), "\n", _jsxs(_components.p, {
      children: ["Zum aktuellen Entwicklungsstand des Projektes kannst du das Stylesheet nur über\nNPM installieren. Die Flow-Stylesheet-Bibliothek kann über einen Package Manager\nwie ", _jsx(_components.code, {
        children: "npm"
      }), " or ", _jsx(_components.code, {
        children: "yarn"
      }), " installiert werden."]
    }), "\n", _jsx(_components.pre, {
      children: _jsx(_components.code, {
        children: "yarn add @mittwald/flow-stylesheet\n"
      })
    }), "\n", _jsx(_components.hr, {}), "\n", _jsx(_components.h2, {
      children: "Styles importieren"
    }), "\n", _jsx(_components.p, {
      children: "Um die Komponenten Styles zu verwenden, musst du das Stylesheet importieren.\nFüge diese Zeile zum Einstiegspunkt deines Projektes hinzu."
    }), "\n", _jsx(_components.pre, {
      children: _jsx(_components.code, {
        children: "import \"@mittwald/flow-stylesheet/css\";\n"
      })
    }), "\n", _jsx(_components.hr, {}), "\n", _jsx(_components.h2, {
      children: "Anwendung des Stylesheets"
    }), "\n", _jsx(_components.p, {
      children: "Um anfangen zu können, solltest du verstehen, wie die Klassennamen strukturiert\nsind. Die im Stylesheet bereitgestellten Klassennamen folgen einem konsistenten,\nkomponentenbasierten und leicht zu verstehendem Schema."
    }), "\n", _jsx(_components.hr, {}), "\n", _jsx(_components.h3, {
      children: "Generelle Klassennamen-Auszeichnungen"
    }), "\n", _jsxs(_components.p, {
      children: ["Alle Klassennamen sind in Lowercase geschrieben und benutzen ", _jsx(_components.code, {
        children: "-"
      }), " um Wörter zu\ntrennen und ", _jsx(_components.code, {
        children: "--"
      }), " um logische Abschnitte zu unterteilen."]
    }), "\n", _jsxs(_components.p, {
      children: ["Der erste logische Abschnitt ist immer der ", _jsx(_components.code, {
        children: "flow"
      }), " Namespace. Andere Abschnitte\nkönnten beispielsweise so aussehen:"]
    }), "\n", _jsx(_components.h4, {
      children: "Komponenten"
    }), "\n", _jsx(_components.pre, {
      children: _jsx(_components.code, {
        children: ".flow--button\n.flow--heading\n.flow--status-icon\n"
      })
    }), "\n", _jsx(_components.h4, {
      children: "Sub-Komponenten"
    }), "\n", _jsx(_components.pre, {
      children: _jsx(_components.code, {
        children: ".flow--navigation\n.flow--navigation--navigation-item\n"
      })
    }), "\n", _jsx(_components.h4, {
      children: "Spezialisierung: Verschiedene Varianten"
    }), "\n", _jsx(_components.pre, {
      children: _jsx(_components.code, {
        children: ".flow--button--primary\n.flow--inline-alert--danger\n.flow--icon--fixed-width\n"
      })
    }), "\n", _jsx(_components.h4, {
      children: "Spezialisierung: In einer Komposition verwendete Komponenten"
    }), "\n", _jsx(_components.pre, {
      children: _jsx(_components.code, {
        children: ".flow--button--icon\n.flow--inline-alert--status-icon\n"
      })
    }), "\n", _jsx(_components.hr, {}), "\n", _jsx(_components.h3, {
      children: "Ein Hinweis zur Spezialisierung"
    }), "\n", _jsxs(_components.p, {
      children: ["Klassennamen die verwendet werden, um die Basiskomponente zu spezialisieren,\nmüssen immer ", _jsx(_components.strong, {
        children: "zusätzlich zum Basis-Klassennamen"
      }), " verwendet werden."]
    }), "\n", _jsx(_components.p, {
      children: "Hier ein paar Beispiele um die diese Anforderung zu verdeutlichen:"
    }), "\n", _jsx(LiveCodeEditor, {
      example: "variants"
    }), "\n", _jsx(_components.h4, {
      children: "Kombinierte Varianten"
    }), "\n", _jsx(LiveCodeEditor, {
      example: "multiple-variants"
    }), "\n", _jsx(_components.h4, {
      children: "In einer Komposition verwendete Komponenten"
    }), "\n", _jsxs(_components.p, {
      children: ["Es ist gängige Praxis, größere Komponenten aus bereits bestehenden kleineren\nKomponenten zusammenzusetzen. Der InlineAlert besteht beispielsweise aus einem\nIcon, einer Heading und optionalem Inhalt. Die verwendeten Komponenten müssen\nihren Basis-Klassennamen für das grundsätzliche Styling erhalten (", _jsx(_components.code, {
        children: "flow--icon"
      }), "),\nsowie den spezialisierten Klassennamen (", _jsx(_components.code, {
        children: "flow--inline-alert--status-icon"
      }), "), um\nspezifische Styles des Inline Alerts zu erhalten."]
    }), "\n", _jsx(LiveCodeEditor, {
      example: "composition"
    })]
  });
}
function MDXContent(props = {}) {
  const {wrapper: MDXLayout} = {
    ..._provideComponents(),
    ...props.components
  };
  return MDXLayout ? _jsx(MDXLayout, {
    ...props,
    children: _jsx(_createMdxContent, {
      ...props
    })
  }) : _createMdxContent(props);
}
return {
  default: MDXContent
};
function _missingMdxReference(id, component) {
  throw new Error("Expected " + (component ? "component" : "object") + " `" + id + "` to be defined: you likely forgot to import, pass, or provide it.");
}
2d:{}
2e:{}
2b:{"compiledSource":"$2c","frontmatter":"$2d","scope":"$2e"}
2f:{"composition":"import ExampleSvg from \"@/content/01-get-started/stylesheet/examples/components/ExampleSvg\";\n\n<aside className=\"flow--inline-alert\">\n  <ExampleSvg className=\"flow--icon flow--status-icon flow--inline-alert--status-icon\" />\n  <h3 className=\"flow--heading flow--heading--h3 flow--inline-alert--heading\">\n    E-Mail Adresse wurde archiviert\n  </h3>\n  <div className=\"flow--inline-alert--content\">\n    Da deine Domain gelöscht wurde, wurde diese\n    E-Mail-Adresse archiviert. Um E-Mails empfangen und\n    senden zu können musst du die Adresse wieder umbenennen.\n  </div>\n</aside>;\n","multiple-variants":"<button className=\"flow--button flow--button--accent flow--button--size-s\">\n  Small Accented Button\n</button>;\n","variants":"<button className=\"flow--button flow--button--accent\">\n  Accented Button\n</button>;\n"}
30:["01-get-started","stylesheet"]
32:T265c,"use strict";
const {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];
const {useMDXComponents: _provideComponents} = arguments[0];
function _createMdxContent(props) {
  const _components = {
    h2: "h2",
    h3: "h3",
    h4: "h4",
    hr: "hr",
    li: "li",
    p: "p",
    ul: "ul",
    ..._provideComponents(),
    ...props.components
  }, {Do, DoAndDont, Dont} = _components;
  if (!Do) _missingMdxReference("Do", true);
  if (!DoAndDont) _missingMdxReference("DoAndDont", true);
  if (!Dont) _missingMdxReference("Dont", true);
  return _jsxs(_Fragment, {
    children: [_jsx(_components.h2, {
      children: "Best Practices"
    }), "\n", _jsxs(_components.ul, {
      children: ["\n", _jsx(_components.li, {
        children: "Platziere Fehlermeldungen in unmittelbarer Nähe zur Ursache des Problems."
      }), "\n", _jsx(_components.li, {
        children: "Stelle sicher, dass Fehlermeldungen kurz, verständlich, hilfreich und\nhandlungsorientiert sind."
      }), "\n", _jsx(_components.li, {
        children: "Versuche bei jeder Fehlermeldung eine Lösung zu kommunizieren."
      }), "\n", _jsx(_components.li, {
        children: "Unterscheide verschiedene Arten von Fehlermeldungen, basierend auf ihrem\nUmfang und ihrer Dringlichkeit."
      }), "\n"]
    }), "\n", _jsx(_components.hr, {}), "\n", _jsx(_components.h2, {
      children: "Grundlagen"
    }), "\n", _jsx(_components.h3, {
      children: "Kurz und hilfreich"
    }), "\n", _jsx(_components.p, {
      children: "Fehlermeldungen sollten kurz, sinnvoll und hilfreich für den Nutzer sein. Es\ngilt: So kurz wie möglich, aber so lang wie nötig. Das bedeutet allerdings auch,\ndass es in manchen Fällen ausreichend sein kann, nur die Lösung zu nennen."
    }), "\n", _jsxs(DoAndDont, {
      children: [_jsx(Dont, {
        exampleText: "Wir unterstützen die Formatierung nicht. Bitte gib eine E-Mail-Adresse im Format\nname@domain.de ein.",
        children: _jsx(_components.h4, {
          children: "Don't"
        })
      }), _jsx(Do, {
        exampleText: "Bitte gib eine E-Mail-Adresse im Format name@domain.de ein.",
        children: _jsx(_components.h4, {
          children: "Do"
        })
      })]
    }), "\n", _jsx(_components.h3, {
      children: "Verständliche Sprache, keine Fachsprache"
    }), "\n", _jsx(_components.p, {
      children: "Vermeide technische Begriffe und konzentriere dich auf eine einfach\nverständliche Sprache. Nutzer verstehen so am ehesten, was schiefgelaufen ist\nund wie sie das Problem lösen können."
    }), "\n", _jsxs(DoAndDont, {
      children: [_jsx(Dont, {
        exampleText: "Fehlercode 503: Verbindung zum Server fehlgeschlagen.",
        children: _jsx(_components.h4, {
          children: "Don't"
        })
      }), _jsx(Do, {
        exampleText: "Wir konnten keine Verbindung zum Server herstellen. Bitte versuche es erneut.",
        children: _jsx(_components.h4, {
          children: "Do"
        })
      })]
    }), "\n", _jsx(_components.h3, {
      children: "Schuldzuweisungen vermeiden"
    }), "\n", _jsx(_components.p, {
      children: "Ein Fehler an sich ist bereits unangenehm und frustrierend. Daher sollte die\nFehlermeldung dem Nutzer das Gefühl von Unterstützung und Fürsorge vermitteln,\nanstatt ihm ein Schuldgefühl zu vermitteln oder seine Frustration zu verstärken."
    }), "\n", _jsxs(DoAndDont, {
      children: [_jsx(Dont, {
        exampleText: "Du hast ein ungültiges Bild hochgeladen. Überprüfe die Dateigröße und versuche\nes erneut.",
        children: _jsx(_components.h4, {
          children: "Don't"
        })
      }), _jsx(Do, {
        exampleText: "Wir konnten das Bild nicht hochladen. Bitte überprüfe die Dateigröße und\nversuche es erneut.",
        children: _jsx(_components.h4, {
          children: "Do"
        })
      })]
    }), "\n", _jsx(_components.h3, {
      children: "Fehler eingestehen, Verständnis erleichtern"
    }), "\n", _jsx(_components.p, {
      children: "Fehlermeldungen sind einfacher zu verstehen, wenn sie sich auf das System als\n\"wir\" und den Nutzer als \"du\" beziehen. So werden die Fragen \"Wo ist etwas\nschiefgegangen?\" und \"Wer muss handeln, um es zu beheben?\" einfach und\nverständlich beantwortet."
    }), "\n", _jsxs(DoAndDont, {
      children: [_jsx(Dont, {
        exampleText: "Fehler beim Zurücksetzen des Passworts. Bitte versuche es erneut.",
        children: _jsx(_components.h4, {
          children: "Don't"
        })
      }), _jsx(Do, {
        exampleText: "Wir konnten dein Passwort nicht zurücksetzen. Bitte überprüfe die E-Mail-Adresse\nund versuche es erneut.",
        children: _jsx(_components.h4, {
          children: "Do"
        })
      })]
    }), "\n", _jsx(_components.h3, {
      children: "Keine ungerechtfertigten Entschuldigungen"
    }), "\n", _jsx(_components.p, {
      children: "Entschuldige dich nicht für kleine Fehler. Dies kann Fehler oft schlimmer\nerscheinen lassen und vom wichtigen Teil der Nachricht ablenken.\nEntschuldigungen sollten für ernsthafte Fehler aufgespart werden, wie den\nVerlust von Daten oder wenn der Nutzer eine größere Aktion zur Behebung des\nProblems ausführen muss."
    }), "\n", _jsxs(DoAndDont, {
      children: [_jsxs(Dont, {
        exampleText: "Es tut uns leid, wir unterstützen das Dateiformat nicht.",
        children: [_jsx(_components.h4, {
          children: "Don't"
        }), _jsx(_components.p, {
          children: "Entschuldige dich nicht für Kleinigkeiten oder wenn das System keine Schuld\nträgt."
        })]
      }), _jsxs(Do, {
        exampleText: "Wir konnten die Datei nicht hochladen. Bitte verwende eine Datei vom Typ XY.",
        children: [_jsx(_components.h4, {
          children: "Do"
        }), _jsx(_components.p, {
          children: "Entschuldige Dich bei ernsthaften Fehlern, z.B. einem systembedingten Verlust von Daten."
        })]
      })]
    }), "\n", _jsx(_components.h3, {
      children: "Wahrscheinlichsten Fehler nennen"
    }), "\n", _jsx(_components.p, {
      children: "Wenn ein Fehler genau eine Ursache hat, dann erkläre, wie der Fehler zu beheben\nist. Gibt es mehrere mögliche Gründe, so sollte die Fehlermeldung beschreiben,\nwie der wahrscheinlichste Grund zu beheben ist."
    }), "\n", _jsxs(DoAndDont, {
      children: [_jsx(Dont, {
        exampleText: "Das eingegebene Passwort entspricht nicht den Mindestanforderungen. Stelle\nsicher, dass es min. 8 Zeichen, einen Groß- und Kleinbuchstaben, eine Ziffer und\nein Sonderzeichen enthält.",
        children: _jsx(_components.h4, {
          children: "Don't"
        })
      }), _jsx(Do, {
        exampleText: "Dein Passwort muss mindestens 8 Zeichen enthalten.",
        children: _jsx(_components.h4, {
          children: "Do"
        })
      })]
    }), "\n", _jsx(_components.h3, {
      children: "Nicht zu spezifisch"
    }), "\n", _jsx(_components.p, {
      children: "Formuliere Fehlermeldungen lieber etwas allgemeiner als zu spezifisch. Oft ist\nes nicht erforderlich, spezifische Details wie Dateinamen, Benutzernamen oder\nOrdner zu nennen, da der Nutzer diese Informationen an anderen Stellen in der\nBenutzeroberfläche finden kann."
    }), "\n", _jsxs(DoAndDont, {
      children: [_jsx(Dont, {
        exampleText: "Wir konnten die Datei „example_file-20.4.24.xy“ nicht hochladen. Bitte verwende\neine Datei vom Typ XY.",
        children: _jsx(_components.h4, {
          children: "Don't"
        })
      }), _jsx(Do, {
        exampleText: "Wir konnten die Datei nicht hochladen. Bitte verwende eine Datei vom Typ XY.",
        children: _jsx(_components.h4, {
          children: "Do"
        })
      })]
    }), "\n", _jsx(_components.h3, {
      children: "Aktiv schreiben"
    }), "\n", _jsx(_components.p, {
      children: "Fehlermeldungen werden aktiv formuliert, um das Verständnis zu erleichtern."
    }), "\n", _jsxs(DoAndDont, {
      children: [_jsx(Dont, {
        exampleText: "Es werden nur Dateien vom Typ XY unterstützt.",
        children: _jsx(_components.h4, {
          children: "Don't"
        })
      }), _jsx(Do, {
        exampleText: "Wir unterstützen nur Dateien vom Typ XY.",
        children: _jsx(_components.h4, {
          children: "Do"
        })
      })]
    }), "\n", _jsx(_components.h3, {
      children: "Positiv formulieren"
    }), "\n", _jsx(_components.p, {
      children: "Versuche, Fehlermeldungen positiv zu formulieren und auf negativ besetzte\nBegriffe (z.B. Fehler, Problem, fehlgeschlagen, falsch, ungültig, verboten, ...)\nzu verzichten. Konzentriere dich stattdessen auf die Lösung und was als nächstes\ngetan werden kann. Beachte jedoch, dass dies in Fällen von Systemfehlern, für\ndie es keine direkte Lösung gibt, nicht immer möglich ist."
    }), "\n", _jsxs(DoAndDont, {
      children: [_jsx(Dont, {
        exampleText: "Durch ein Problem mit dem Server ist die Verbindung fehlgeschlagen.",
        children: _jsx(_components.h4, {
          children: "Don't"
        })
      }), _jsx(Do, {
        exampleText: "Es tut uns leid, wir konnten keine Verbindung zum Server herstellen. Bitte\nversuche es erneut.",
        children: _jsx(_components.h4, {
          children: "Do"
        })
      })]
    })]
  });
}
function MDXContent(props = {}) {
  const {wrapper: MDXLayout} = {
    ..._provideComponents(),
    ...props.components
  };
  return MDXLayout ? _jsx(MDXLayout, {
    ...props,
    children: _jsx(_createMdxContent, {
      ...props
    })
  }) : _createMdxContent(props);
}
return {
  default: MDXContent
};
function _missingMdxReference(id, component) {
  throw new Error("Expected " + (component ? "component" : "object") + " `" + id + "` to be defined: you likely forgot to import, pass, or provide it.");
}
33:{}
34:{}
31:{"compiledSource":"$32","frontmatter":"$33","scope":"$34"}
35:{}
36:["02-foundations","content-guidelines","fehlermeldungen"]
38:{"component":"ActionGroup","description":"Die ActionGroup dient dazu zusammengehörige Buttons sinnvoll zu gruppieren. Sie wird beispielsweise für Forms oder Modals verwendet."}
39:{}
37:{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true,\n    zoom: 0.7\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":"$38","scope":"$39"}
3a:{"additionalSecondary":"import ActionGroup from \"@mittwald/flow-react-components/ActionGroup\";\nimport Button from \"@mittwald/flow-react-components/Button\";\n\n<ActionGroup>\n  <Button color=\"accent\">E-Mail-Addresse anlegen</Button>\n  <Button color=\"secondary\" variant=\"soft\" slot=\"secondary\">\n    Speichern und weitere anlegen\n  </Button>\n  <Button color=\"secondary\" variant=\"soft\">\n    Abbrechen\n  </Button>\n</ActionGroup>;\n","danger":"import ActionGroup from \"@mittwald/flow-react-components/ActionGroup\";\nimport Button from \"@mittwald/flow-react-components/Button\";\n\n<ActionGroup>\n  <Button color=\"danger\">Projekt löschen</Button>\n  <Button color=\"secondary\" variant=\"soft\">\n    Abbrechen\n  </Button>\n</ActionGroup>;\n","default":"import ActionGroup from \"@mittwald/flow-react-components/ActionGroup\";\nimport Button from \"@mittwald/flow-react-components/Button\";\n\n<ActionGroup>\n  <Button color=\"accent\">Organisation erstellen</Button>\n  <Button color=\"secondary\" variant=\"soft\">\n    Abbrechen\n  </Button>\n</ActionGroup>;\n","info":"import ActionGroup from \"@mittwald/flow-react-components/ActionGroup\";\nimport Button from \"@mittwald/flow-react-components/Button\";\n\n<ActionGroup>\n  <Button slot=\"primary\">Ok</Button>\n</ActionGroup>;\n"}
3b:["03-components","actions","action-group"]
3d:{"component":"Action","description":"Die Action Komponente kann um einen Button gelegt werden, um beispielsweise asynchrone Aktionen mit dem Button auszuführen."}
3e:{}
3c:{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":"$3d","scope":"$3e"}
40:T412,import Button from "@mittwald/flow-react-components/Button";
import Action from "@mittwald/flow-react-components/Action";
import { sleepLong } from "@/content/03-components/actions/action/examples/lib";
import { Modal } from "@mittwald/flow-react-components/Modal";
import Heading from "@mittwald/flow-react-components/Heading";
import { Content } from "@mittwald/flow-react-components/Content";
import ActionGroup from "@mittwald/flow-react-components/ActionGroup";

<Action action={sleepLong}>
  <Modal slot="actionConfirm">
    <Heading>Projekt löschen</Heading>
    <Content>
      Das Löschen eines Projektes kann nicht rückgängig
      gemacht werden. Möchtest Du das Projekt
      &quot;Test&quot; dennoch löschen?
    </Content>
    <ActionGroup>
      <Button color="danger">
        Unwiederbringlich löschen
      </Button>
      <Button color="secondary" variant="soft">
        Abbrechen
      </Button>
    </ActionGroup>
  </Modal>
  <Button color="secondary" variant="soft">
    Projekt löschen
  </Button>
</Action>;
3f:{"confirmation":"$40","default":"import Button from \"@mittwald/flow-react-components/Button\";\nimport Action from \"@mittwald/flow-react-components/Action\";\nimport { sleep } from \"@/content/03-components/actions/action/examples/lib\";\n\n<Action action={sleep}>\n  <Button>Speichern</Button>\n</Action>;\n","feedback":"import Button from \"@mittwald/flow-react-components/Button\";\nimport Action from \"@mittwald/flow-react-components/Action\";\n\n<Action\n  action={() => {\n    // do nothing\n  }}\n  showFeedback\n>\n  <Button>Speichern</Button>\n</Action>;\n","longAction":"import Button from \"@mittwald/flow-react-components/Button\";\nimport Action from \"@mittwald/flow-react-components/Action\";\nimport { sleepLong } from \"@/content/03-components/actions/action/examples/lib\";\n\n<Action action={sleepLong}>\n  <Button>Speichern</Button>\n</Action>;\n"}
41:["03-components","actions","action"]
43:{"component":"Button","description":"Der Button dient zum Ausführen von Aktionen."}
44:{}
42:{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":"$43","scope":"$44"}
45:{"colors":"import Button from \"@mittwald/flow-react-components/Button\";\n\n<Row>\n  <Button color=\"primary\">Fortfahren/Aktion</Button>\n  <Button color=\"secondary\">Abbrechen/Zurück</Button>\n  <Button color=\"accent\">Erstellen/Speichern</Button>\n  <Button color=\"danger\">Löschen/Kündigen</Button>\n</Row>;\n","dark":"import Button from \"@mittwald/flow-react-components/Button\";\n\n<Row>\n  <Button color=\"dark\">Fortfahren/Aktion</Button>\n  <Button variant=\"soft\" color=\"dark\">\n    Fortfahren/Aktion\n  </Button>\n  <Button variant=\"plain\" color=\"dark\">\n    Fortfahren/Aktion\n  </Button>\n</Row>;\n","default":"import Button from \"@mittwald/flow-react-components/Button\";\n\n<Button\n  onPress={() => {\n    alert(\"Button gedrückt\");\n  }}\n>\n  Fortfahren/Aktion\n</Button>;\n","icon":"import Button from \"@mittwald/flow-react-components/Button\";\nimport { IconHome } from \"@mittwald/flow-react-components/Icons\";\n\n<Button aria-label=\"Home\">\n  <IconHome />\n</Button>;\n","iconText":"import Button from \"@mittwald/flow-react-components/Button\";\nimport Text from \"@mittwald/flow-react-components/Text\";\nimport { IconChevronDown } from \"@mittwald/flow-react-components/Icons\";\n\n<Button>\n  <Text>E-Mail-Adresse hinzufügen</Text>\n  <IconChevronDown />\n</Button>;\n","light":"import Button from \"@mittwald/flow-react-components/Button\";\n\n<Row>\n  <Button color=\"light\">Fortfahren/Aktion</Button>\n  <Button variant=\"soft\" color=\"light\">\n    Fortfahren/Aktion\n  </Button>\n  <Button variant=\"plain\" color=\"light\">\n    Fortfahren/Aktion\n  </Button>\n  ;\n</Row>;\n","plain":"import Button from \"@mittwald/flow-react-components/Button\";\n\n<Row>\n  <Button variant=\"plain\" color=\"primary\">\n    Fortfahren/Aktion\n  </Button>\n  <Button variant=\"plain\" color=\"secondary\">\n    Abbrechen/Zurück\n  </Button>\n  <Button variant=\"plain\" color=\"accent\">\n    Erstellen/Speichern\n  </Button>\n  <Button variant=\"plain\" color=\"danger\">\n    Löschen/Kündigen\n  </Button>\n</Row>;\n","small":"import Button from \"@mittwald/flow-react-components/Button\";\n\n<Button size=\"s\">Fortfahren/Aktion</Button>;\n","soft":"import Button from \"@mittwald/flow-react-components/Button\";\n\n<Row>\n  <Button variant=\"soft\" color=\"primary\">\n    Fortfahren/Aktion\n  </Button>\n  <Button variant=\"soft\" color=\"secondary\">\n    Abbrechen/Zurück\n  </Button>\n  <Button variant=\"soft\" color=\"accent\">\n    Erstellen/Speichern\n  </Button>\n  <Button variant=\"soft\" color=\"danger\">\n    Löschen/Kündigen\n  </Button>\n</Row>;\n","states":"import Button from \"@mittwald/flow-react-components/Button\";\n\n<Row>\n  <Button isDisabled>Fortfahren/Aktion</Button>\n  <Button isPending>Fortfahren/Aktion</Button>\n  <Button isSucceeded>Fortfahren/Aktion</Button>\n  <Button isFailed>Fortfahren/Aktion</Button>\n</Row>;\n"}
46:["03-components","actions","button"]
48:{"component":"ContextMenu","description":"Beim ContextMenu handelt es sich um ein Popover, das eine Liste von Aktionen oder Verlinkungen enthält."}
49:{}
47:{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":"$48","scope":"$49"}
4a:{"default":"import ContextMenu, {\n  ContextMenuTrigger,\n} from \"@mittwald/flow-react-components/ContextMenu\";\nimport Button from \"@mittwald/flow-react-components/Button\";\nimport MenuItem from \"@mittwald/flow-react-components/MenuItem\";\n\n<ContextMenuTrigger>\n  <Button>Trigger</Button>\n  <ContextMenu\n    onAction={(id) => {\n      alert(id);\n    }}\n  >\n    <MenuItem id=\"1\">Item 1</MenuItem>\n    <MenuItem id=\"2\">Item 2</MenuItem>\n    <MenuItem id=\"3\">Item 3</MenuItem>\n  </ContextMenu>\n</ContextMenuTrigger>;\n","icon":"import ContextMenu, {\n  ContextMenuTrigger,\n} from \"@mittwald/flow-react-components/ContextMenu\";\nimport Button from \"@mittwald/flow-react-components/Button\";\nimport MenuItem from \"@mittwald/flow-react-components/MenuItem\";\nimport { IconInfo } from \"@mittwald/flow-react-components/Icons\";\nimport Text from \"@mittwald/flow-react-components/Text\";\n\n<ContextMenuTrigger>\n  <Button>Trigger</Button>\n  <ContextMenu\n    onAction={(id) => {\n      alert(id);\n    }}\n  >\n    <MenuItem id=\"1\">\n      <IconInfo />\n      <Text>Item 1</Text>\n    </MenuItem>\n    <MenuItem id=\"2\">\n      <IconInfo />\n      <Text>Item 2</Text>\n    </MenuItem>\n    <MenuItem id=\"3\">\n      <IconInfo />\n      <Text>Item 3</Text>\n    </MenuItem>\n  </ContextMenu>\n</ContextMenuTrigger>;\n","multi-select":"import ContextMenu, {\n  ContextMenuTrigger,\n} from \"@mittwald/flow-react-components/ContextMenu\";\nimport Button from \"@mittwald/flow-react-components/Button\";\nimport MenuItem from \"@mittwald/flow-react-components/MenuItem\";\n\n<ContextMenuTrigger>\n  <Button>Trigger</Button>\n  <ContextMenu\n    selectionMode=\"multiple\"\n    defaultSelectedKeys={[\"item2\", \"item3\"]}\n  >\n    <MenuItem id=\"item1\">Item 1</MenuItem>\n    <MenuItem id=\"item2\">Item 2</MenuItem>\n    <MenuItem id=\"item3\">Item 3</MenuItem>\n  </ContextMenu>\n</ContextMenuTrigger>;\n","separator":"import ContextMenu, {\n  ContextMenuTrigger,\n} from \"@mittwald/flow-react-components/ContextMenu\";\nimport Button from \"@mittwald/flow-react-components/Button\";\nimport MenuItem from \"@mittwald/flow-react-components/MenuItem\";\nimport Separator from \"@mittwald/flow-react-components/Separator\";\n\n<ContextMenuTrigger>\n  <Button>Trigger</Button>\n  <ContextMenu>\n    <MenuItem id=\"1\">Item 1</MenuItem>\n    <Separator />\n    <MenuItem id=\"2\">Item 2</MenuItem>\n    <MenuItem id=\"3\">Item 3</MenuItem>\n  </ContextMenu>\n</ContextMenuTrigger>;\n","single-select":"import ContextMenu, {\n  ContextMenuTrigger,\n} from \"@mittwald/flow-react-components/ContextMenu\";\nimport Button from \"@mittwald/flow-react-components/Button\";\nimport MenuItem from \"@mittwald/flow-react-components/MenuItem\";\n\n<ContextMenuTrigger>\n  <Button>Trigger</Button>\n  <ContextMenu\n    selectionMode=\"single\"\n    defaultSelectedKeys={[\"item2\"]}\n  >\n    <MenuItem id=\"item1\">Item 1</MenuItem>\n    <MenuItem id=\"item2\">Item 2</MenuItem>\n    <MenuItem id=\"item3\">Item 3</MenuItem>\n  </ContextMenu>\n</ContextMenuTrigger>;\n"}
4b:["03-components","actions","context-menu"]
4d:{"component":"CopyButton","description":"Der CopyButton dient dazu Informationen in die Zwischenablage zu kopieren."}
4e:{}
4c:{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":"$4d","scope":"$4e"}
4f:{"default":"import CopyButton from \"@mittwald/flow-react-components/CopyButton\";\n\n<CopyButton text=\"Kopierter Inhalt\" />;\n"}
50:["03-components","actions","copy-button"]
52:{"component":"Avatar","description":"Der Avatar kann ein Bild, Initialen oder ein Icon darstellen."}
53:{}
51:{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":"$52","scope":"$53"}
54:{"colors":"import Avatar from \"@mittwald/flow-react-components/Avatar\";\nimport Initials from \"@mittwald/flow-react-components/Initials\";\nimport { IconHome } from \"@mittwald/flow-react-components/Icons\";\nimport { IconCustomer } from \"@mittwald/flow-react-components/Icons\";\n\n<Row>\n  <Avatar>\n    <Initials>Gillian Gopher</Initials>\n  </Avatar>\n  <Avatar>\n    <Initials>Gustav Gopher</Initials>\n  </Avatar>\n  <Avatar>\n    <Initials>Gina-Lisa Gopher</Initials>\n  </Avatar>\n  <Avatar>\n    <Initials>Gorgio Gopher</Initials>\n  </Avatar>\n  <Avatar>\n    <IconHome />\n  </Avatar>\n  <Avatar>\n    <IconCustomer />\n  </Avatar>\n</Row>;\n","default":"import Avatar from \"@mittwald/flow-react-components/Avatar\";\nimport Initials from \"@mittwald/flow-react-components/Initials\";\n\n<Avatar>\n  <Initials>Gillian Gopher</Initials>\n</Avatar>;\n","icon":"import { IconHome } from \"@mittwald/flow-react-components/Icons\";\nimport Avatar from \"@mittwald/flow-react-components/Avatar\";\n\n<Avatar variant={1}>\n  <IconHome />\n</Avatar>;\n","image":"import Avatar from \"@mittwald/flow-react-components/Avatar\";\nimport Image from \"@mittwald/flow-react-components/Image\";\n\n<Avatar>\n  <Image\n    alt=\"Gopher\"\n    src=\"https://cdn.shopify.com/s/files/1/2022/6883/products/IMG_2002_250x250@2x.JPG?v=1538235544\"\n  />\n</Avatar>;\n","sizes":"import Avatar from \"@mittwald/flow-react-components/Avatar\";\nimport Initials from \"@mittwald/flow-react-components/Initials\";\n\n<Row>\n  <Avatar size=\"xs\">\n    <Initials>Gillian Gopher</Initials>\n  </Avatar>\n  <Avatar size=\"s\">\n    <Initials>Gillian Gopher</Initials>\n  </Avatar>\n  <Avatar size=\"m\">\n    <Initials>Gillian Gopher</Initials>\n  </Avatar>\n  <Avatar size=\"l\">\n    <Initials>Gillian Gopher</Initials>\n  </Avatar>\n</Row>;\n"}
55:["03-components","content","avatar"]
57:{"component":"Heading","description":"Die Heading-Komponente wird verwendet, um Überschriften anzuzeigen"}
58:{}
56:{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":"$57","scope":"$58"}
59:{"dark":"import Heading from \"@mittwald/flow-react-components/Heading\";\n\n<Heading color=\"dark\">Das ist eine Überschrift</Heading>;\n","default":"import Heading from \"@mittwald/flow-react-components/Heading\";\n\n<Heading>Das ist eine Überschrift</Heading>;\n","icon":"import Heading from \"@mittwald/flow-react-components/Heading\";\nimport { IconMember } from \"@mittwald/flow-react-components/Icons\";\n\n<Heading>\n  <IconMember />\n  Persönliche Informationen\n</Heading>;\n","level-visual":"import Heading from \"@mittwald/flow-react-components/Heading\";\n\n<Heading level={4} levelVisual={2}>\n  Das ist eine h4 Überschrift die aussieht wie eine h2\n  Überschrift\n</Heading>;\n","levels":"import Heading from \"@mittwald/flow-react-components/Heading\";\n\n<>\n  <Heading level={1}>\n    Das ist eine Level 1 Überschrift\n  </Heading>\n  <Heading level={2}>\n    Das ist eine Level 2 Überschrift\n  </Heading>\n  <Heading level={3}>\n    Das ist eine Level 3 Überschrift\n  </Heading>\n  <Heading level={4}>\n    Das ist eine Level 4 Überschrift\n  </Heading>\n  <Heading level={5}>\n    Das ist eine Level 5 Überschrift\n  </Heading>\n</>;\n","light":"import Heading from \"@mittwald/flow-react-components/Heading\";\n\n<Heading color=\"light\">Das ist eine Überschrift</Heading>;\n"}
5a:["03-components","content","heading"]
5c:{"component":"Icon","description":"Die Icon-Komponente unterstützt Tabler Icons sowie benutzerdefinierte SVGs."}
5d:{}
5b:{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":"$5c","scope":"$5d"}
5f:Tdb8,import {
  IconApp,
  IconBackup,
  IconCalendar,
  IconCamera,
  IconChangelog,
  IconClock,
  IconContractPosition,
  IconCredit,
  IconCronjob,
  IconCustomer,
  IconDatabase,
  IconDomain,
  IconEmail,
  IconExtension,
  IconInbox,
  IconInvoice,
  IconMember,
  IconNumber,
  IconOrder,
  IconPerformance,
  IconProject,
  IconSearchEngine,
  IconServer,
  IconSpamProtectionOff,
  IconSpamProtectionOn,
  IconSshSftp,
  IconStar,
  IconStarFilled,
  IconSubdomain,
  IconSupport,
  IconTicket,
} from "@mittwald/flow-react-components/Icons";
import Label from "@mittwald/flow-react-components/Label";
import LabeledValue from "@mittwald/flow-react-components/LabeledValue";
import ColumnLayout from "@mittwald/flow-react-components/ColumnLayout";

<ColumnLayout l={[1, 1, 1, 1, 1]} m={[1, 1, 1]} s={[1, 1]}>
  <LabeledValue>
    <Label>Star</Label>
    <IconStar />
  </LabeledValue>
  <LabeledValue>
    <Label>Star Filled</Label>
    <IconStarFilled />
  </LabeledValue>
  <LabeledValue>
    <Label>Project</Label>
    <IconProject />
  </LabeledValue>
  <LabeledValue>
    <Label>Server</Label>
    <IconServer />
  </LabeledValue>
  <LabeledValue>
    <Label>Customer</Label>
    <IconCustomer />
  </LabeledValue>
  <LabeledValue>
    <Label>Support</Label>
    <IconSupport />
  </LabeledValue>
  <LabeledValue>
    <Label>E-Mail</Label>
    <IconEmail />
  </LabeledValue>
  <LabeledValue>
    <Label>App</Label>
    <IconApp />
  </LabeledValue>
  <LabeledValue>
    <Label>Domain</Label>
    <IconDomain />
  </LabeledValue>
  <LabeledValue>
    <Label>Subdomain</Label>
    <IconSubdomain />
  </LabeledValue>
  <LabeledValue>
    <Label>Database</Label>
    <IconDatabase />
  </LabeledValue>
  <LabeledValue>
    <Label>Changelog</Label>
    <IconChangelog />
  </LabeledValue>
  <LabeledValue>
    <Label>Extension</Label>
    <IconExtension />
  </LabeledValue>
  <LabeledValue>
    <Label>Order</Label>
    <IconOrder />
  </LabeledValue>
  <LabeledValue>
    <Label>Performance</Label>
    <IconPerformance />
  </LabeledValue>
  <LabeledValue>
    <Label>Ticket</Label>
    <IconTicket />
  </LabeledValue>
  <LabeledValue>
    <Label>Invoice</Label>
    <IconInvoice />
  </LabeledValue>
  <LabeledValue>
    <Label>Credit</Label>
    <IconCredit />
  </LabeledValue>
  <LabeledValue>
    <Label>Contract Position</Label>
    <IconContractPosition />
  </LabeledValue>
  <LabeledValue>
    <Label>Camera</Label>
    <IconCamera />
  </LabeledValue>
  <LabeledValue>
    <Label>Backup</Label>
    <IconBackup />
  </LabeledValue>
  <LabeledValue>
    <Label>Cronjob</Label>
    <IconCronjob />
  </LabeledValue>
  <LabeledValue>
    <Label>Member</Label>
    <IconMember />
  </LabeledValue>
  <LabeledValue>
    <Label>User</Label>
    <IconMember />
  </LabeledValue>
  <LabeledValue>
    <Label>Search Engine</Label>
    <IconSearchEngine />
  </LabeledValue>
  <LabeledValue>
    <Label>Ssh Sftp</Label>
    <IconSshSftp />
  </LabeledValue>
  <LabeledValue>
    <Label>Inbox</Label>
    <IconInbox />
  </LabeledValue>
  <LabeledValue>
    <Label>Spam Protection Off</Label>
    <IconSpamProtectionOff />
  </LabeledValue>
  <LabeledValue>
    <Label>Spam Protection On</Label>
    <IconSpamProtectionOn />
  </LabeledValue>
  <LabeledValue>
    <Label>Number</Label>
    <IconNumber />
  </LabeledValue>
  <LabeledValue>
    <Label>Clock</Label>
    <IconClock />
  </LabeledValue>
  <LabeledValue>
    <Label>Calendar</Label>
    <IconCalendar />
  </LabeledValue>
</ColumnLayout>;
60:T1077,import {
  IconBackLink,
  IconCheck,
  IconCheckboxChecked,
  IconCheckboxEmpty,
  IconCheckboxIndeterminate,
  IconChevronDown,
  IconChevronLeft,
  IconChevronRight,
  IconChevronUp,
  IconClose,
  IconCode,
  IconContextMenu,
  IconCopy,
  IconDashboard,
  IconDelete,
  IconEdit,
  IconExternalLink,
  IconFilter,
  IconHide,
  IconHome,
  IconListView,
  IconLogout,
  IconMaximize,
  IconMenu,
  IconMinimize,
  IconMinus,
  IconNotification,
  IconPlus,
  IconRadioOff,
  IconRadioOn,
  IconRandom,
  IconSave,
  IconSearch,
  IconSettings,
  IconShare,
  IconShow,
  IconSorting,
  IconTerminate,
  IconTileView,
} from "@mittwald/flow-react-components/Icons";
import Label from "@mittwald/flow-react-components/Label";
import LabeledValue from "@mittwald/flow-react-components/LabeledValue";
import ColumnLayout from "@mittwald/flow-react-components/ColumnLayout";

<ColumnLayout l={[1, 1, 1, 1, 1]} m={[1, 1, 1]} s={[1, 1]}>
  <LabeledValue>
    <Label>Home</Label>
    <IconHome />
  </LabeledValue>
  <LabeledValue>
    <Label>Notification</Label>
    <IconNotification />
  </LabeledValue>
  <LabeledValue>
    <Label>Dashboard</Label>
    <IconDashboard />
  </LabeledValue>
  <LabeledValue>
    <Label>Logout</Label>
    <IconLogout />
  </LabeledValue>
  <LabeledValue>
    <Label>Search</Label>
    <IconSearch />
  </LabeledValue>
  <LabeledValue>
    <Label>TileView</Label>
    <IconTileView />
  </LabeledValue>
  <LabeledValue>
    <Label>ListView</Label>
    <IconListView />
  </LabeledValue>
  <LabeledValue>
    <Label>Filter</Label>
    <IconFilter />
  </LabeledValue>
  <LabeledValue>
    <Label>Sorting</Label>
    <IconSorting />
  </LabeledValue>
  <LabeledValue>
    <Label>Menu</Label>
    <IconMenu />
  </LabeledValue>
  <LabeledValue>
    <Label>Maximize</Label>
    <IconMaximize />
  </LabeledValue>
  <LabeledValue>
    <Label>Minimize</Label>
    <IconMinimize />
  </LabeledValue>
  <LabeledValue>
    <Label>Edit</Label>
    <IconEdit />
  </LabeledValue>
  <LabeledValue>
    <Label>Share</Label>
    <IconShare />
  </LabeledValue>
  <LabeledValue>
    <Label>Save</Label>
    <IconSave />
  </LabeledValue>
  <LabeledValue>
    <Label>Settings</Label>
    <IconSettings />
  </LabeledValue>
  <LabeledValue>
    <Label>Delete</Label>
    <IconDelete />
  </LabeledValue>
  <LabeledValue>
    <Label>Terminate</Label>
    <IconTerminate />
  </LabeledValue>
  <LabeledValue>
    <Label>Copy</Label>
    <IconCopy />
  </LabeledValue>
  <LabeledValue>
    <Label>Backlink</Label>
    <IconBackLink />
  </LabeledValue>
  <LabeledValue>
    <Label>Random</Label>
    <IconRandom />
  </LabeledValue>
  <LabeledValue>
    <Label>External Link</Label>
    <IconExternalLink />
  </LabeledValue>
  <LabeledValue>
    <Label>Chevron Down</Label>
    <IconChevronDown />
  </LabeledValue>
  <LabeledValue>
    <Label>Chevron Left</Label>
    <IconChevronLeft />
  </LabeledValue>
  <LabeledValue>
    <Label>Chevron Right</Label>
    <IconChevronRight />
  </LabeledValue>
  <LabeledValue>
    <Label>ChevronUp</Label>
    <IconChevronUp />
  </LabeledValue>
  <LabeledValue>
    <Label>Close</Label>
    <IconClose />
  </LabeledValue>
  <LabeledValue>
    <Label>Show</Label>
    <IconShow />
  </LabeledValue>
  <LabeledValue>
    <Label>Hide</Label>
    <IconHide />
  </LabeledValue>
  <LabeledValue>
    <Label>Plus</Label>
    <IconPlus />
  </LabeledValue>
  <LabeledValue>
    <Label>Minus</Label>
    <IconMinus />
  </LabeledValue>
  <LabeledValue>
    <Label>Context Menu</Label>
    <IconContextMenu />
  </LabeledValue>
  <LabeledValue>
    <Label>Code</Label>
    <IconCode />
  </LabeledValue>
  <LabeledValue>
    <Label>Checkbox Checked</Label>
    <IconCheckboxChecked />
  </LabeledValue>
  <LabeledValue>
    <Label>Checkbox Empty</Label>
    <IconCheckboxEmpty />
  </LabeledValue>
  <LabeledValue>
    <Label>Checkbox Indeterminate</Label>
    <IconCheckboxIndeterminate />
  </LabeledValue>
  <LabeledValue>
    <Label>RadioOff</Label>
    <IconRadioOff />
  </LabeledValue>
  <LabeledValue>
    <Label>RadioOn</Label>
    <IconRadioOn />
  </LabeledValue>
  <LabeledValue>
    <Label>Check</Label>
    <IconCheck />
  </LabeledValue>
</ColumnLayout>;
5e:{"brand":"import { IconMittwald } from \"@mittwald/flow-react-components/Icons\";\nimport Label from \"@mittwald/flow-react-components/Label\";\nimport LabeledValue from \"@mittwald/flow-react-components/LabeledValue\";\nimport ColumnLayout from \"@mittwald/flow-react-components/ColumnLayout\";\n\n<ColumnLayout l={[1, 1, 1, 1, 1]} m={[1, 1, 1]} s={[1, 1]}>\n  <LabeledValue>\n    <Label>mittwald</Label>\n    <IconMittwald />\n  </LabeledValue>\n</ColumnLayout>;\n","coloring":"import { IconHome } from \"@mittwald/flow-react-components/Icons\";\n\n<IconHome\n  style={{ color: \"var(--primary--color--800)\" }}\n/>;\n","decorative":"$5f","default":"import { IconHome } from \"@mittwald/flow-react-components/Icons\";\n\n<IconHome />;\n","functional":"$60","sizes":"import { IconHome } from \"@mittwald/flow-react-components/Icons\";\n\n<Row>\n  <IconHome size=\"s\" />\n  <IconHome size=\"m\" />\n  <IconHome size=\"l\" />\n</Row>;\n","states":"import LabeledValue from \"@mittwald/flow-react-components/LabeledValue\";\nimport ColumnLayout from \"@mittwald/flow-react-components/ColumnLayout\";\nimport Label from \"@mittwald/flow-react-components/Label\";\nimport {\n  IconDanger,\n  IconFailed,\n  IconInfo,\n  IconPending,\n  IconSucceeded,\n  IconSuccess,\n  IconWarning,\n} from \"@mittwald/flow-react-components/Icons\";\n\n<ColumnLayout l={[1, 1, 1, 1, 1]} m={[1, 1, 1]} s={[1, 1]}>\n  <LabeledValue>\n    <Label>Danger</Label>\n    <IconDanger />\n  </LabeledValue>\n  <LabeledValue>\n    <Label>Warning</Label>\n    <IconWarning />\n  </LabeledValue>\n  <LabeledValue>\n    <Label>Success</Label>\n    <IconSuccess />\n  </LabeledValue>\n  <LabeledValue>\n    <Label>Info</Label>\n    <IconInfo />\n  </LabeledValue>\n  <LabeledValue>\n    <Label>Pending</Label>\n    <IconPending />\n  </LabeledValue>\n  <LabeledValue>\n    <Label>Failed</Label>\n    <IconFailed />\n  </LabeledValue>\n  <LabeledValue>\n    <Label>Succeeded</Label>\n    <IconSucceeded />\n  </LabeledValue>\n</ColumnLayout>;\n","svg-string":"import Icon from \"@mittwald/flow-react-components/Icon\";\n\nexport default () => {\n  const svgString = `\\\n    <svg viewBox=\"0 0 100 100\" xmlns=\"http://www.w3.org/2000/svg\">\n      <circle cx=\"50\" cy=\"50\" r=\"50\" />\n    </svg>\n  `;\n\n  return <Icon>{svgString}</Icon>;\n};\n","svg":"import Icon from \"@mittwald/flow-react-components/Icon\";\n\n<Icon>\n  <svg\n    viewBox=\"0 0 100 100\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <circle cx=\"50\" cy=\"50\" r=\"50\" />\n  </svg>\n</Icon>;\n","tabler":"import Icon from \"@mittwald/flow-react-components/Icon\";\nimport { IconStar } from \"@tabler/icons-react\";\n\n<Icon>\n  <IconStar />\n</Icon>;\n"}
61:["03-components","content","icon"]
63:{"component":"IllustratedMessage","description":"Die IllustratedMessage dient als Platzhalter, wenn der eigentliche Inhalt nicht angezeigt werden kann."}
64:{}
62:{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true,\n    zoom: 0.7\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":"$63","scope":"$64"}
65:{"default":"import Heading from \"@mittwald/flow-react-components/Heading\";\nimport IllustratedMessage from \"@mittwald/flow-react-components/IllustratedMessage\";\nimport { IconApp } from \"@mittwald/flow-react-components/Icons\";\nimport Text from \"@mittwald/flow-react-components/Text\";\nimport Button from \"@mittwald/flow-react-components/Button\";\n\n<IllustratedMessage>\n  <IconApp />\n  <Heading>Keine Apps installiert</Heading>\n  <Text>\n    Lege deine erste App an, um mit der Arbeit an deiner\n    Webseite loszulegen.\n  </Text>\n  <Button>App anlegen</Button>\n</IllustratedMessage>;\n","negative":"import Heading from \"@mittwald/flow-react-components/Heading\";\nimport IllustratedMessage from \"@mittwald/flow-react-components/IllustratedMessage\";\nimport { IconDanger } from \"@mittwald/flow-react-components/Icons\";\nimport Text from \"@mittwald/flow-react-components/Text\";\nimport Button from \"@mittwald/flow-react-components/Button\";\n\n<IllustratedMessage variant=\"negative\">\n  <IconDanger />\n  <Heading>Kein Zugriff</Heading>\n  <Text>\n    Du hast keine Berechtigung, um auf diese Seite\n    zuzugreifen.\n  </Text>\n  <Button>Zum Dashboard</Button>\n</IllustratedMessage>;\n"}
66:["03-components","content","illustrated-message"]
68:{"component":"Image","description":"Mit der Image-Komponente können Bilder angezeigt werden."}
69:{}
67:{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":"$68","scope":"$69"}
6a:{"default":"import Image from \"@mittwald/flow-react-components/Image\";\n\n<Image\n  src=\"https://cdn.shopify.com/s/files/1/2022/6883/products/IMG_2002_250x250@2x.JPG?v=1538235544\"\n  alt=\"Gopher\"\n  width={200}\n/>;\n"}
6b:["03-components","content","image"]
6d:{"component":"InlineCode","description":"InlineCode wird verwendet, um Code innerhalb eines Textes anzuzeigen."}
6e:{}
6c:{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":"$6d","scope":"$6e"}
6f:{"default":"import Text from \"@mittwald/flow-react-components/Text\";\nimport InlineCode from \"@mittwald/flow-react-components/InlineCode\";\n\n<Text>\n  Gib <InlineCode>yarn start</InlineCode> ein um deine App\n  zu starten.\n</Text>;\n"}
70:["03-components","content","inline-code"]
72:{"component":"Label","description":"Ein Label dient der Beschreibung eines Elements, und wird beispielsweise für Formularfelder oder in LabeledValues verwendet."}
73:{}
71:{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":"$72","scope":"$73"}
74:{"default":"import Label from \"@mittwald/flow-react-components/Label\";\n\n<Label>Das ist ein Label</Label>;\n"}
75:["03-components","content","label"]
77:{"component":"LabeledValue","description":"Ein LabeledValue zeigt eine Information mit einem Label an."}
78:{}
76:{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":"$77","scope":"$78"}
79:{"copy-button":"import LabeledValue from \"@mittwald/flow-react-components/LabeledValue\";\nimport Label from \"@mittwald/flow-react-components/Label\";\nimport Content from \"@mittwald/flow-react-components/Content\";\nimport CopyButton from \"@mittwald/flow-react-components/CopyButton\";\n\n<LabeledValue>\n  <Label>Projekt ID</Label>\n  <Content>p-eWRhpRV</Content>\n  <CopyButton text=\"Projekt ID: p-eWRhpRV\" />\n</LabeledValue>;\n","default":"import LabeledValue from \"@mittwald/flow-react-components/LabeledValue\";\nimport Label from \"@mittwald/flow-react-components/Label\";\nimport Content from \"@mittwald/flow-react-components/Content\";\n\n<LabeledValue>\n  <Label>Speicherplatz</Label>\n  <Content>20 GB</Content>\n</LabeledValue>;\n","inline-code":"import LabeledValue from \"@mittwald/flow-react-components/LabeledValue\";\nimport Label from \"@mittwald/flow-react-components/Label\";\nimport InlineCode from \"@mittwald/flow-react-components/InlineCode\";\nimport CopyButton from \"@mittwald/flow-react-components/CopyButton\";\n\n<LabeledValue>\n  <Label>IP Adresse</Label>\n  <InlineCode>127.0.0.1</InlineCode>\n  <CopyButton text=\"127.0.0.1\" />\n</LabeledValue>;\n","link":"import LabeledValue from \"@mittwald/flow-react-components/LabeledValue\";\nimport Label from \"@mittwald/flow-react-components/Label\";\nimport Link from \"@mittwald/flow-react-components/Link\";\n\n<LabeledValue>\n  <Label>Domain</Label>\n  <Link>https://mittwald.de</Link>\n</LabeledValue>;\n"}
7a:["03-components","content","labeled-value"]
7c:{"component":"Skeleton","description":"Das Skeleton kann als Platzhalter für Content im Ladezustand verwendet werden."}
7d:{}
7b:{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":"$7c","scope":"$7d"}
7e:{"custom-size":"import Skeleton from \"@mittwald/flow-react-components/Skeleton\";\n\n<Column>\n  <Skeleton style={{ height: \"100px\" }} />\n  <Skeleton\n    style={{\n      height: \"100px\",\n      width: \"100px\",\n      borderRadius: \"50%\",\n    }}\n  />\n</Column>;\n","default":"import Skeleton from \"@mittwald/flow-react-components/Skeleton\";\n\n<Skeleton />;\n"}
7f:["03-components","content","skeleton"]
81:{"component":"Text","description":"Die Text-Komponente wird verwendet, um Texte zu gruppieren."}
82:{}
80:{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":"$81","scope":"$82"}
83:{"default":"import Text from \"@mittwald/flow-react-components/Text\";\n\n<Text>Das ist ein Text</Text>;\n","emulateBoldWidth":"import Text from \"@mittwald/flow-react-components/Text\";\n\n<Column>\n  <Text\n    style={{ borderInline: \"2px solid red\" }}\n    emulateBoldWidth\n  >\n    Das ist ein Text\n  </Text>\n  <Text style={{ borderInline: \"2px solid red\" }}>\n    <strong>Das ist ein Text</strong>\n  </Text>\n</Column>;\n"}
84:["03-components","content","text"]
86:{"component":"CheckboxButton","description":"Der CheckboxButton verhält sich wie eine Checkbox."}
87:{}
85:{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":"$86","scope":"$87"}
88:{"default":"import CheckboxButton from \"@mittwald/flow-react-components/CheckboxButton\";\n\n<CheckboxButton>\n  Ich stimme den AGBs zu und bestätige, dass ich die\n  Datenschutzhinweise zur Kenntnis genommen habe.\n</CheckboxButton>;\n"}
89:["03-components","form-controls","checkbox-button"]
8b:{"component":"CheckboxGroup","description":"Die Checkbox Gruppe enthält eine logisch zusammenhängende Sammlung von Checkboxen"}
8c:{}
8a:{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":"$8b","scope":"$8c"}
8d:{"buttons":"import CheckboxButton from \"@mittwald/flow-react-components/CheckboxButton\";\nimport CheckboxGroup from \"@mittwald/flow-react-components/CheckboxGroup\";\nimport Label from \"@mittwald/flow-react-components/Label\";\n\n<CheckboxGroup>\n  <Label>Berechtigungen</Label>\n  <CheckboxButton value=\"read\">Lesen</CheckboxButton>\n  <CheckboxButton value=\"write\">Schreiben</CheckboxButton>\n</CheckboxGroup>;\n","customColumns":"import CheckboxButton from \"@mittwald/flow-react-components/CheckboxButton\";\nimport CheckboxGroup from \"@mittwald/flow-react-components/CheckboxGroup\";\nimport Label from \"@mittwald/flow-react-components/Label\";\n\n<CheckboxGroup l={[1, 1]} m={[1]}>\n  <Label>Berechtigungen</Label>\n  <CheckboxButton value=\"read\">Lesen</CheckboxButton>\n  <CheckboxButton value=\"write\">Schreiben</CheckboxButton>\n</CheckboxGroup>;\n","default":"import Checkbox from \"@mittwald/flow-react-components/Checkbox\";\nimport CheckboxGroup from \"@mittwald/flow-react-components/CheckboxGroup\";\nimport Label from \"@mittwald/flow-react-components/Label\";\n\n<CheckboxGroup>\n  <Label>Berechtigungen</Label>\n  <Checkbox value=\"read\">Lesen</Checkbox>\n  <Checkbox value=\"write\">Schreiben</Checkbox>\n</CheckboxGroup>;\n"}
8e:["03-components","form-controls","checkbox-group"]
90:{"component":"Checkbox","description":"Die Checkbox dient dazu einen Wert zu aus- oder abzuwählen."}
91:{}
8f:{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":"$90","scope":"$91"}
92:{"default":"import Checkbox from \"@mittwald/flow-react-components/Checkbox\";\n\n<Checkbox>\n  Ich stimme den AGBs zu und bestätige, dass ich die\n  Datenschutzhinweise zur Kenntnis genommen habe.\n</Checkbox>;\n","disabled":"import Checkbox from \"@mittwald/flow-react-components/Checkbox\";\n\n<Checkbox isDisabled>\n  Ich stimme den AGBs zu und bestätige, dass ich die\n  Datenschutzhinweise zur Kenntnis genommen habe.\n</Checkbox>;\n","indeterminated":"import Checkbox from \"@mittwald/flow-react-components/Checkbox\";\n\n<Checkbox isIndeterminate>\n  Ich stimme den AGBs zu und bestätige, dass ich die\n  Datenschutzhinweise zur Kenntnis genommen habe.\n</Checkbox>;\n"}
93:["03-components","form-controls","checkbox"]
95:{"component":"Field","title":"Field (React Hook Form)","gitHubComponentPath":"integrations/react-hook-form/components/Field/Field.tsx","description":"Die Field Komponente \"verbindet\" Flow Eingabefelder mit React Hook Form."}
96:{}
94:{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":"$95","scope":"$96"}
97:{"default":"import { useForm } from \"react-hook-form\";\nimport {\n  Field,\n  Form,\n} from \"@mittwald/flow-react-components/react-hook-form\";\nimport { TextField } from \"@mittwald/flow-react-components/TextField\";\nimport { Label } from \"@mittwald/flow-react-components/Label\";\nimport { FieldDescription } from \"@mittwald/flow-react-components/FieldDescription\";\n\nexport default () => {\n  interface Values {\n    name: string;\n  }\n  const form = useForm<Values>();\n\n  return (\n    <Form form={form} onSubmit={console.log}>\n      <Field\n        name=\"name\"\n        rules={{\n          required: \"The project name is required\",\n        }}\n      >\n        <TextField>\n          <Label>Name</Label>\n          <FieldDescription>\n            The name of the project\n          </FieldDescription>\n        </TextField>\n      </Field>\n    </Form>\n  );\n};\n","typed-field":"import { useForm } from \"react-hook-form\";\nimport {\n  Form,\n  typedField,\n} from \"@mittwald/flow-react-components/react-hook-form\";\nimport { TextField } from \"@mittwald/flow-react-components/TextField\";\nimport { Label } from \"@mittwald/flow-react-components/Label\";\n\nexport default () => {\n  interface Values {\n    myField: string;\n  }\n  const form = useForm<Values>();\n\n  // Only `myField` is allowed for name prop\n  const Field = typedField(form);\n\n  return (\n    <Form form={form} onSubmit={console.log}>\n      <Field name=\"myField\">\n        <TextField>\n          <Label>Name</Label>\n        </TextField>\n      </Field>\n    </Form>\n  );\n};\n"}
98:["03-components","form-controls","field-react-hook-form"]
9a:{"component":"Form","title":"Form (React Hook Form)","gitHubComponentPath":"integrations/react-hook-form/components/Form/Form.tsx","description":"Die Form Komponente gruppiert Form-Felder und bietet einen Callback für das Abschicken des Formulars an. Diese Komponente ist ausschließlich in Kombintation mit React Hook Form zu verwenden."}
9b:{}
99:{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":"$9a","scope":"$9b"}
9d:T4f4,import { useForm } from "react-hook-form";
import {
  Field,
  Form,
} from "@mittwald/flow-react-components/react-hook-form";
import { TextField } from "@mittwald/flow-react-components/TextField";
import { Label } from "@mittwald/flow-react-components/Label";
import { ActionGroup } from "@mittwald/flow-react-components/ActionGroup";
import { Button } from "@mittwald/flow-react-components/Button";
import { Section } from "@mittwald/flow-react-components/Section";
import { FieldDescription } from "@mittwald/flow-react-components/FieldDescription";

export default () => {
  interface Values {
    name: string;
  }
  const form = useForm<Values>();

  const handleOnSubmit = (values: Values) =>
    alert(JSON.stringify(values));

  return (
    <Form form={form} onSubmit={handleOnSubmit}>
      <Section>
        <Field
          name="name"
          rules={{
            required: "The project name is required",
          }}
        >
          <TextField>
            <Label>Name</Label>
            <FieldDescription>
              The name of the project
            </FieldDescription>
          </TextField>
        </Field>
        <ActionGroup>
          <Button type="submit">Save</Button>
        </ActionGroup>
      </Section>
    </Form>
  );
};
9c:{"default":"$9d"}
9e:["03-components","form-controls","form-react-hook-form"]
a0:{"component":"NumberField","description":"Das NumberField dient der Eingabe von Zahlen."}
a1:{}
9f:{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":"$a0","scope":"$a1"}
a2:{"default":"import NumberField from \"@mittwald/flow-react-components/NumberField\";\nimport Label from \"@mittwald/flow-react-components/Label\";\nimport FieldDescription from \"@mittwald/flow-react-components/FieldDescription\";\n\n<NumberField minValue={0} maxValue={100}>\n  <Label>Alter</Label>\n  <FieldDescription>Gib dein Alter ein</FieldDescription>\n</NumberField>;\n","disabled":"import NumberField from \"@mittwald/flow-react-components/NumberField\";\nimport Label from \"@mittwald/flow-react-components/Label\";\n\n<NumberField isDisabled>\n  <Label>Alter</Label>\n</NumberField>;\n","invalid":"import NumberField from \"@mittwald/flow-react-components/NumberField\";\nimport Label from \"@mittwald/flow-react-components/Label\";\nimport FieldError from \"@mittwald/flow-react-components/FieldError\";\n\n<NumberField isInvalid value={-1}>\n  <Label>Alter</Label>\n  <FieldError>Ungültige Eingabe</FieldError>\n</NumberField>;\n","required":"import NumberField from \"@mittwald/flow-react-components/NumberField\";\nimport Label from \"@mittwald/flow-react-components/Label\";\n\n<NumberField isRequired>\n  <Label>Alter</Label>\n</NumberField>;\n","unit":"import NumberField from \"@mittwald/flow-react-components/NumberField\";\nimport Label from \"@mittwald/flow-react-components/Label\";\n\n<NumberField\n  formatOptions={{\n    style: \"unit\",\n    unit: \"gigabyte\",\n  }}\n  defaultValue={12}\n>\n  <Label>Speicherplatz</Label>\n</NumberField>;\n"}
a3:["03-components","form-controls","number-field"]
a5:{"component":"RadioGroup","description":"Eine RadioGroup ist eine Liste von Optionen, von denen genau eine ausgewählt werden muss."}
a6:{}
a4:{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":"$a5","scope":"$a6"}
a7:{"buttons":"import Label from \"@mittwald/flow-react-components/Label\";\nimport RadioGroup, {\n  RadioButton,\n} from \"@mittwald/flow-react-components/RadioGroup\";\n\n<RadioGroup defaultValue=\"admin\">\n  <Label>Rolle</Label>\n  <RadioButton value=\"admin\">Administrator</RadioButton>\n  <RadioButton value=\"member\">Mitglied</RadioButton>\n  <RadioButton value=\"accountant\">Buchhalter</RadioButton>\n</RadioGroup>;\n","content":"import RadioGroup, {\n  RadioButton,\n} from \"@mittwald/flow-react-components/RadioGroup\";\nimport Text from \"@mittwald/flow-react-components/Text\";\nimport Content from \"@mittwald/flow-react-components/Content\";\n\n<RadioGroup defaultValue=\"domain\" aria-label=\"Domain\">\n  <RadioButton value=\"domain\">\n    <Text>Domain buchen</Text>\n    <Content>\n      Du hast eine Wunsch-Domain? Kein Problem wir helfen\n      dir die passende Domain für dich zu finden.\n    </Content>\n  </RadioButton>\n  <RadioButton value=\"virtualHost\">\n    <Text>Virtual Host einrichten</Text>\n    <Content>\n      Die Domain bleibt bei deinem bisherigen Anbieter, du\n      kannst sie aber für deine Website in unserem mStudio\n      verwenden.\n    </Content>\n  </RadioButton>\n  <RadioButton value=\"subdomain\">\n    <Text>Subdomain anlegen</Text>\n    <Content>\n      Eine Subdomain von einer bereits vorhandenen Domain\n      erstellen, um sie für dein Projekt zu verwenden.\n    </Content>\n  </RadioButton>\n</RadioGroup>;\n","customColumns":"import Label from \"@mittwald/flow-react-components/Label\";\nimport RadioGroup, {\n  RadioButton,\n} from \"@mittwald/flow-react-components/RadioGroup\";\n\n<RadioGroup\n  defaultValue=\"admin\"\n  s={[1, 1]}\n  m={[1, 1, 1]}\n  l={[1, 1, 1, 1]}\n>\n  <Label>Rolle</Label>\n  <RadioButton value=\"admin\">Administrator</RadioButton>\n  <RadioButton value=\"member\">Mitglied</RadioButton>\n  <RadioButton value=\"accountant\">Buchhalter</RadioButton>\n</RadioGroup>;\n","default":"import Label from \"@mittwald/flow-react-components/Label\";\nimport RadioGroup, {\n  Radio,\n} from \"@mittwald/flow-react-components/RadioGroup\";\n\n<RadioGroup defaultValue=\"admin\">\n  <Label>Rolle</Label>\n  <Radio value=\"admin\">Administrator</Radio>\n  <Radio value=\"member\">Mitglied</Radio>\n  <Radio value=\"accountant\">Buchhalter</Radio>\n</RadioGroup>;\n","segmented":"import Label from \"@mittwald/flow-react-components/Label\";\nimport RadioGroup, {\n  Radio,\n} from \"@mittwald/flow-react-components/RadioGroup\";\n\n<RadioGroup defaultValue=\"admin\" variant=\"segmented\">\n  <Label>Rolle</Label>\n  <Radio value=\"admin\">Administrator</Radio>\n  <Radio value=\"member\">Mitglied</Radio>\n  <Radio value=\"accountant\">Buchhalter</Radio>\n</RadioGroup>;\n"}
a8:["03-components","form-controls","radio-group"]
aa:{"component":"Select","description":"Die Select-Komponente bietet eine Liste von Optionen an, von denen eine ausgewählt werden kann."}
ab:{}
a9:{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":"$aa","scope":"$ab"}
ac:{"default":"import Select, {\n  Option,\n} from \"@mittwald/flow-react-components/Select\";\nimport Label from \"@mittwald/flow-react-components/Label\";\n\n<Select>\n  <Label>App</Label>\n  <Option>WordPress</Option>\n  <Option>TYPO3</Option>\n  <Option>Contao</Option>\n  <Option>Drupal</Option>\n  <Option>Joomla!</Option>\n  <Option>Matomo</Option>\n</Select>;\n"}
ad:["03-components","form-controls","select"]
af:{"component":"Slider","description":"Die Slider-Komponente dient zur Auswahl von Zahlenwerten innerhalb einer vorgegebenen Range."}
b0:{}
ae:{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":"$af","scope":"$b0"}
b1:{"default":"import Label from \"@mittwald/flow-react-components/Label\";\nimport Slider from \"@mittwald/flow-react-components/Slider\";\n\n<Slider\n  formatOptions={{\n    style: \"unit\",\n    unit: \"gigabyte\",\n  }}\n  minValue={20}\n  maxValue={2000}\n  defaultValue={200}\n  step={20}\n  showInitialMarker\n>\n  <Label>Storage</Label>\n</Slider>;\n"}
b2:["03-components","form-controls","slider"]
b4:{"component":"Switch","description":"Die Switch-Komponente stellt einen Schalter dar, mit dem eine Option aktiviert oder deaktiviert werden kann."}
b5:{}
b3:{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":"$b4","scope":"$b5"}
b6:{"default":"import Switch from \"@mittwald/flow-react-components/Switch\";\n\n<Switch defaultSelected>Autoresponder</Switch>;\n","disabled":"import Switch from \"@mittwald/flow-react-components/Switch\";\n\n<Switch isDisabled>Autoresponder</Switch>;\n","leading-label":"import Switch from \"@mittwald/flow-react-components/Switch\";\n\n<Switch labelPosition=\"leading\">Autoresponder</Switch>;\n"}
b7:["03-components","form-controls","switch"]
b9:{"component":"TextArea","description":"Die Textarea dient zur Eingabe längerer Texte und stellt diese mehrzeilig dar."}
ba:{}
b8:{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":"$b9","scope":"$ba"}
bb:{"characterCount":"import Label from \"@mittwald/flow-react-components/Label\";\nimport TextArea from \"@mittwald/flow-react-components/TextArea\";\n\n<TextArea showCharacterCount maxLength={100}>\n  <Label>Nachricht</Label>\n</TextArea>;\n","default":"import Label from \"@mittwald/flow-react-components/Label\";\nimport FieldDescription from \"@mittwald/flow-react-components/FieldDescription\";\nimport TextArea from \"@mittwald/flow-react-components/TextArea\";\n\n<TextArea>\n  <Label>Public Key</Label>\n  <FieldDescription>Beginnt mit ssh-rsa</FieldDescription>\n</TextArea>;\n","disabled":"import Label from \"@mittwald/flow-react-components/Label\";\nimport TextArea from \"@mittwald/flow-react-components/TextArea\";\n\n<TextArea isDisabled>\n  <Label>Public Key</Label>\n</TextArea>;\n","invalid":"import Label from \"@mittwald/flow-react-components/Label\";\nimport TextArea from \"@mittwald/flow-react-components/TextArea\";\nimport FieldError from \"@mittwald/flow-react-components/FieldError\";\n\n<TextArea isInvalid defaultValue=\"hello\">\n  <Label>Public Key</Label>\n  <FieldError>Ungültiger Key</FieldError>\n</TextArea>;\n","required":"import Label from \"@mittwald/flow-react-components/Label\";\nimport TextArea from \"@mittwald/flow-react-components/TextArea\";\n\n<TextArea isRequired>\n  <Label>Public Key</Label>\n</TextArea>;\n"}
bc:["03-components","form-controls","text-area"]
be:{"component":"TextField","description":"Ein TextField ermöglicht es dem Nutzer, Text über die Tastatur in ein User Interface einzugeben. Ein erforderliches Label und eine optionale FieldDescription unterstützen dabei, die Anforderungen an die Eingabe klar zu kommunizieren."}
bf:{}
bd:{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":"$be","scope":"$bf"}
c0:{"characterCount":"import Label from \"@mittwald/flow-react-components/Label\";\nimport TextField from \"@mittwald/flow-react-components/TextField\";\n\n<TextField showCharacterCount maxLength={10}>\n  <Label>Benutzername</Label>\n</TextField>;\n","columnLayout":"import Label from \"@mittwald/flow-react-components/Label\";\nimport TextField from \"@mittwald/flow-react-components/TextField\";\nimport ColumnLayout from \"@mittwald/flow-react-components/ColumnLayout\";\n\n<ColumnLayout m={[1, 1]}>\n  <TextField isRequired>\n    <Label>Vorname</Label>\n  </TextField>\n  <TextField isRequired>\n    <Label>Nachname</Label>\n  </TextField>\n  <ColumnLayout s={[2, 1]}>\n    <TextField isRequired>\n      <Label>Straße</Label>\n    </TextField>\n    <TextField isRequired>\n      <Label>Hausnummer</Label>\n    </TextField>\n  </ColumnLayout>\n  <ColumnLayout s={[2, 1]}>\n    <TextField isRequired>\n      <Label>Stadt</Label>\n    </TextField>\n    <TextField isRequired>\n      <Label>PLZ</Label>\n    </TextField>\n  </ColumnLayout>\n  <TextField isRequired>\n    <Label>Land</Label>\n  </TextField>\n</ColumnLayout>;\n","default":"import Label from \"@mittwald/flow-react-components/Label\";\nimport TextField from \"@mittwald/flow-react-components/TextField\";\nimport FieldDescription from \"@mittwald/flow-react-components/FieldDescription\";\n\n<TextField>\n  <Label>URL</Label>\n  <FieldDescription>Beginnt mit https://</FieldDescription>\n</TextField>;\n","defaultValue":"import Label from \"@mittwald/flow-react-components/Label\";\nimport TextField from \"@mittwald/flow-react-components/TextField\";\n\n<TextField defaultValue=\"https://mittwald.de\">\n  <Label>URL</Label>\n</TextField>;\n","disabled":"import Label from \"@mittwald/flow-react-components/Label\";\nimport TextField from \"@mittwald/flow-react-components/TextField\";\n\n<TextField isDisabled>\n  <Label>URL</Label>\n</TextField>;\n","inputProps":"import Label from \"@mittwald/flow-react-components/Label\";\nimport TextField from \"@mittwald/flow-react-components/TextField\";\n\n<TextField name=\"email\" type=\"email\">\n  <Label>E-Mail</Label>\n</TextField>;\n","invalid":"import Label from \"@mittwald/flow-react-components/Label\";\nimport TextField from \"@mittwald/flow-react-components/TextField\";\nimport FieldError from \"@mittwald/flow-react-components/FieldError\";\n\n<TextField isInvalid defaultValue=\"hello\">\n  <Label>URL</Label>\n  <FieldError>Das ist keine URL</FieldError>\n</TextField>;\n","placeholder":"import Label from \"@mittwald/flow-react-components/Label\";\nimport TextField from \"@mittwald/flow-react-components/TextField\";\n\n<TextField placeholder=\"https://\">\n  <Label>URL</Label>\n</TextField>;\n","required":"import Label from \"@mittwald/flow-react-components/Label\";\nimport TextField from \"@mittwald/flow-react-components/TextField\";\nimport { ColumnLayout } from \"@mittwald/flow-react-components/ColumnLayout\";\n\n<ColumnLayout m={[1, 1]}>\n  <TextField isRequired>\n    <Label>URL</Label>\n  </TextField>\n  <TextField>\n    <Label>URL</Label>\n  </TextField>\n</ColumnLayout>;\n","withoutLabel":"import TextField from \"@mittwald/flow-react-components/TextField\";\nimport FieldDescription from \"@mittwald/flow-react-components/FieldDescription\";\n\n<TextField aria-label=\"URL\">\n  <FieldDescription>Beginnt mit https://</FieldDescription>\n</TextField>;\n"}
c1:["03-components","form-controls","text-field"]
c3:{"component":"Breadcrumb","description":"Die Breadcrumb zeigt die aktuelle Position in der Hierarchie der Website und bietet die Möglichkeit schnell zu höheren Navigationsebenen zu springen."}
c4:{}
c2:{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":"$c3","scope":"$c4"}
c5:{"dark":"import Breadcrumb from \"@mittwald/flow-react-components/Breadcrumb\";\nimport Link from \"@mittwald/flow-react-components/Link\";\n\n<Breadcrumb color=\"dark\">\n  <Link href=\"#\">Projekte</Link>\n  <Link href=\"#\">Apps</Link>\n  <Link href=\"#\">Meine App</Link>\n</Breadcrumb>;\n","default":"import Breadcrumb from \"@mittwald/flow-react-components/Breadcrumb\";\nimport Link from \"@mittwald/flow-react-components/Link\";\n\n<Breadcrumb>\n  <Link href=\"#\">Projekte</Link>\n  <Link href=\"#\">Apps</Link>\n  <Link href=\"#\">Meine App</Link>\n</Breadcrumb>;\n","light":"import Breadcrumb from \"@mittwald/flow-react-components/Breadcrumb\";\nimport Link from \"@mittwald/flow-react-components/Link\";\n\n<Breadcrumb color=\"light\">\n  <Link href=\"#\">Projekte</Link>\n  <Link href=\"#\">Apps</Link>\n  <Link href=\"#\">Meine App</Link>\n</Breadcrumb>;\n"}
c6:["03-components","navigation","breadcrumb"]
c8:{"component":"HeaderNavigation","description":"Bei der HeaderNavigation handelt es sich um eine horizontal dargestellte Navigation, die als Hauptnavigation einer Seite verwendet werden kann."}
c9:{}
c7:{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":"$c8","scope":"$c9"}
cb:T50e,import Button from "@mittwald/flow-react-components/Button";
import HeaderNavigation from "@mittwald/flow-react-components/HeaderNavigation";
import {
  IconLogout,
  IconNotification,
  IconSettings,
  IconSupport,
  IconSearch,
} from "@mittwald/flow-react-components/Icons";
import ContextMenu, {
  ContextMenuTrigger,
} from "@mittwald/flow-react-components/ContextMenu";
import Avatar from "@mittwald/flow-react-components/Avatar";
import Image from "@mittwald/flow-react-components/Image";
import Text from "@mittwald/flow-react-components/Text";
import MenuItem from "@mittwald/flow-react-components/MenuItem";

<HeaderNavigation aria-label="Header navigation">
  <Button>
    <IconSearch />
  </Button>
  <Button>
    <IconSupport />
  </Button>
  <Button>
    <IconNotification />
  </Button>
  <ContextMenuTrigger>
    <Button>
      <Avatar>
        <Image
          alt="Gopher"
          src="https://cdn.shopify.com/s/files/1/2022/6883/products/IMG_2002_250x250@2x.JPG?v=1538235544"
        />
      </Avatar>
    </Button>
    <ContextMenu>
      <MenuItem>
        <IconSettings />
        <Text>Profil</Text>
      </MenuItem>
      <MenuItem>
        <IconLogout />
        <Text>Logout</Text>
      </MenuItem>
    </ContextMenu>
  </ContextMenuTrigger>
</HeaderNavigation>;
ca:{"contextMenu":"$cb","dark":"import Link from \"@mittwald/flow-react-components/Link\";\nimport Button from \"@mittwald/flow-react-components/Button\";\nimport { IconSearch } from \"@mittwald/flow-react-components/Icons\";\nimport HeaderNavigation from \"@mittwald/flow-react-components/HeaderNavigation\";\n\n<HeaderNavigation\n  aria-label=\"Header navigation\"\n  color=\"dark\"\n>\n  <Link href=\"#\">Getting startet</Link>\n  <Link href=\"#\" aria-current=\"page\">\n    Components\n  </Link>\n  <Button>\n    <IconSearch />\n  </Button>\n</HeaderNavigation>;\n","default":"import Link from \"@mittwald/flow-react-components/Link\";\nimport Button from \"@mittwald/flow-react-components/Button\";\nimport { IconSearch } from \"@mittwald/flow-react-components/Icons\";\nimport HeaderNavigation from \"@mittwald/flow-react-components/HeaderNavigation\";\n\n<HeaderNavigation aria-label=\"Header navigation\">\n  <Link href=\"#\">Getting startet</Link>\n  <Link href=\"#\" aria-current=\"page\">\n    Komponenten\n  </Link>\n  <Button>\n    <IconSearch />\n  </Button>\n</HeaderNavigation>;\n","light":"import Link from \"@mittwald/flow-react-components/Link\";\nimport Button from \"@mittwald/flow-react-components/Button\";\nimport { IconSearch } from \"@mittwald/flow-react-components/Icons\";\nimport HeaderNavigation from \"@mittwald/flow-react-components/HeaderNavigation\";\n\n<HeaderNavigation\n  aria-label=\"Header navigation\"\n  color=\"light\"\n>\n  <Link href=\"#\">Getting startet</Link>\n  <Link href=\"#\" aria-current=\"page\">\n    Components\n  </Link>\n  <Button>\n    <IconSearch />\n  </Button>\n</HeaderNavigation>;\n"}
cc:["03-components","navigation","header-navigation"]
ce:{"component":"Link","description":"Die Link-Komponente kann zur Navigation innerhalb der Seite oder zu externen Zielen genutzt werden."}
cf:{}
cd:{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":"$ce","scope":"$cf"}
d0:{"dark":"import Link from \"@mittwald/flow-react-components/Link\";\n\n<Link href=\"#\" color=\"dark\">\n  Zum Dashboard\n</Link>;\n","default":"import Link from \"@mittwald/flow-react-components/Link\";\n\n<Link href=\"#\">Zum Dashboard</Link>;\n","icon":"import Link from \"@mittwald/flow-react-components/Link\";\nimport { IconExternalLink } from \"@mittwald/flow-react-components/Icons\";\n\n<Link href=\"https://mittwald.de\">\n  mittwald.de\n  <IconExternalLink aria-label=\"external link\" />\n</Link>;\n","inline":"import Link from \"@mittwald/flow-react-components/Link\";\n\n<Link inline href=\"#\">\n  Inline link\n</Link>;\n","inlineText":"import Link from \"@mittwald/flow-react-components/Link\";\nimport Text from \"@mittwald/flow-react-components/Text\";\n\n<Text>\n  Sieh dir unser <Link href=\"#\">Onboarding</Link> an um\n  weitere Informationen zu erhalten.\n</Text>;\n","light":"import Link from \"@mittwald/flow-react-components/Link\";\n\n<Link href=\"#\" color=\"light\">\n  Zum Dashboard\n</Link>;\n"}
d1:["03-components","navigation","link"]
d3:{"component":"Navigation","description":"Bei der Navigation handelt es sich um eine Liste von Links, die optional auch in Gruppen unterteilt werden kann."}
d4:{}
d2:{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":"$d3","scope":"$d4"}
d5:{"collapsable":"import Navigation, {\n  NavigationGroup,\n} from \"@mittwald/flow-react-components/Navigation\";\nimport Link from \"@mittwald/flow-react-components/Link\";\nimport Label from \"@mittwald/flow-react-components/Label\";\n\n<Navigation aria-label=\"Main navigation\">\n  <NavigationGroup collapsable>\n    <Label>Allgemein</Label>\n    <Link href=\"#\">Dashboard</Link>\n    <Link href=\"#\" aria-current=\"page\">\n      Performance\n    </Link>\n  </NavigationGroup>\n  <NavigationGroup collapsable>\n    <Label>Komponenten</Label>\n    <Link href=\"#\">Apps</Link>\n    <Link href=\"#\">Datenbanken</Link>\n    <Link href=\"#\">Domains</Link>\n  </NavigationGroup>\n</Navigation>;\n","default":"import Navigation from \"@mittwald/flow-react-components/Navigation\";\nimport Link from \"@mittwald/flow-react-components/Link\";\n\n<Navigation aria-label=\"Companies\">\n  <Link href=\"https://www.apple.com\">Apple</Link>\n  <Link href=\"https://www.mittwald.de\" aria-current=\"page\">\n    mittwald\n  </Link>\n  <Link href=\"https://www.adobe.com\">Adobe</Link>\n  <Link href=\"https://www.google.com\">Google</Link>\n</Navigation>;\n","groups":"import Navigation, {\n  NavigationGroup,\n} from \"@mittwald/flow-react-components/Navigation\";\nimport Link from \"@mittwald/flow-react-components/Link\";\nimport Label from \"@mittwald/flow-react-components/Label\";\n\n<Navigation aria-label=\"Main navigation\">\n  <NavigationGroup>\n    <Label>Allgemein</Label>\n    <Link href=\"#\">Dashboard</Link>\n    <Link href=\"#\" aria-current=\"page\">\n      Performance\n    </Link>\n  </NavigationGroup>\n  <NavigationGroup>\n    <Label>Komponenten</Label>\n    <Link href=\"#\">Apps</Link>\n    <Link href=\"#\">Datenbanken</Link>\n    <Link href=\"#\">Domains</Link>\n  </NavigationGroup>\n</Navigation>;\n","icons":"import Navigation from \"@mittwald/flow-react-components/Navigation\";\nimport Text from \"@mittwald/flow-react-components/Text\";\nimport {\n  IconCustomer,\n  IconProject,\n  IconServer,\n} from \"@mittwald/flow-react-components/Icons\";\nimport Link from \"@mittwald/flow-react-components/Link\";\n\n<Navigation aria-label=\"Main menu\">\n  <Link href=\"#\">\n    <IconCustomer />\n    <Text>Organisationen</Text>\n  </Link>\n  <Link href=\"#\" aria-current=\"page\">\n    <IconServer />\n    <Text>Server</Text>\n  </Link>\n  <Link href=\"#\">\n    <IconProject />\n    <Text>Projekte</Text>\n  </Link>\n</Navigation>;\n","separator":"import Navigation, {\n  NavigationGroup,\n} from \"@mittwald/flow-react-components/Navigation\";\nimport Link from \"@mittwald/flow-react-components/Link\";\nimport Label from \"@mittwald/flow-react-components/Label\";\nimport Separator from \"@mittwald/flow-react-components/Separator\";\n\n<Navigation aria-label=\"Main navigation\">\n  <NavigationGroup>\n    <Label>Allgemein</Label>\n    <Link href=\"#\">Dashboard</Link>\n    <Link href=\"#\" aria-current=\"page\">\n      Performance\n    </Link>\n  </NavigationGroup>\n\n  <Separator />\n\n  <NavigationGroup>\n    <Label>Komponenten</Label>\n    <Link href=\"#\">Apps</Link>\n    <Link href=\"#\">Datenbanken</Link>\n    <Link href=\"#\">Domains</Link>\n  </NavigationGroup>\n</Navigation>;\n"}
d6:["03-components","navigation","navigation"]
d8:{"component":"Tabs","description":"Tabs erlauben dem Nutzer zwischen verschiedenen Inhaltsbereichen zu wechseln."}
d9:{}
d7:{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":"$d8","scope":"$d9"}
db:T5cf,import Tabs, {
  Tab,
  TabTitle,
} from "@mittwald/flow-react-components/Tabs";
import Section from "@mittwald/flow-react-components/Section";
import Heading from "@mittwald/flow-react-components/Heading";
import TextField from "@mittwald/flow-react-components/TextField";
import Label from "@mittwald/flow-react-components/Label";
import LabeledValue from "@mittwald/flow-react-components/LabeledValue";
import Text from "@mittwald/flow-react-components/Text";
import Header from "@mittwald/flow-react-components/Header";
import Switch from "@mittwald/flow-react-components/Switch";

<Tabs>
  <Tab>
    <TabTitle>Allgemein</TabTitle>
    <Section>
      <Heading>Allgemein</Heading>
      <TextField defaultValue="example@mittwald.de">
        <Label>E-Mail-Adresse</Label>
      </TextField>
    </Section>
  </Tab>
  <Tab id="storage">
    <TabTitle>Speicherplatz</TabTitle>
    <Section>
      <Heading>Speicherplatz</Heading>
      <LabeledValue>
        <Label>Verfügbarer Speicherplatz</Label>
        <Text>2.4 GB</Text>
      </LabeledValue>
    </Section>
  </Tab>
  <Tab>
    <TabTitle>Spamschutz</TabTitle>
    <Section>
      <Header>
        <Heading>Spamschutz</Heading>
        <Switch>Spamfilter</Switch>
      </Header>
      <Text>
        Der Spamfilter schützt dich vor ungewollten E-Mails.
        Niemand will Müll in seinem Postfach, daher
        empfehlen wir den Spamschutz immer aktiviert zu
        lassen.
      </Text>
    </Section>
  </Tab>
</Tabs>;
da:{"collapsed":"import Tabs, {\n  Tab,\n  TabTitle,\n} from \"@mittwald/flow-react-components/Tabs\";\n\n<Tabs style={{ width: \"250px\" }}>\n  <Tab>\n    <TabTitle>Allgemein</TabTitle>\n    Allgemeiner Inhalt\n  </Tab>\n  <Tab id=\"storage\">\n    <TabTitle>Speicherplatz</TabTitle>\n    Speicherplatz Inhalt\n  </Tab>\n  <Tab>\n    <TabTitle>Spamschutz</TabTitle>\n    Spamschutz Inhalt\n  </Tab>\n</Tabs>;\n","content":"$db","default":"import Tabs, {\n  Tab,\n  TabTitle,\n} from \"@mittwald/flow-react-components/Tabs\";\n\n<Tabs>\n  <Tab>\n    <TabTitle>Allgemein</TabTitle>\n    Allgemeiner Inhalt\n  </Tab>\n  <Tab id=\"storage\">\n    <TabTitle>Speicherplatz</TabTitle>\n    Speicherplatz Inhalt\n  </Tab>\n  <Tab>\n    <TabTitle>Spamschutz</TabTitle>\n    Spamschutz Inhalt\n  </Tab>\n</Tabs>;\n","status":"import {\n  Tab,\n  Tabs,\n  TabTitle,\n} from \"@mittwald/flow-react-components/Tabs\";\nimport { InlineAlert } from \"@mittwald/flow-react-components/InlineAlert\";\nimport { Heading } from \"@mittwald/flow-react-components/Heading\";\nimport { StatusIcon } from \"@mittwald/flow-react-components/StatusIcon\";\n\n<Tabs>\n  <Tab>\n    <TabTitle>Allgemein</TabTitle>\n    Allgemeiner Inhalt\n  </Tab>\n  <Tab id=\"storage\">\n    <TabTitle>\n      Speicherplatz\n      <StatusIcon status=\"danger\" />\n    </TabTitle>\n    <InlineAlert status=\"danger\">\n      <Heading>Dein Speicherplatz ist voll</Heading>\n    </InlineAlert>\n  </Tab>\n  <Tab>\n    <TabTitle>Spamschutz</TabTitle>\n    Spamschutz Inhalt\n  </Tab>\n</Tabs>;\n"}
dc:["03-components","navigation","tabs"]
de:{"component":"ContextualHelp","description":"Die ContextualHelp zeigt zusätzliche Informationen in einem Overlay an. Sie wird über den Klick auf einen Button mit Info Icon getriggert."}
df:{}
dd:{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":"$de","scope":"$df"}
e0:{"default":"import {\n  ContextualHelp,\n  ContextualHelpTrigger,\n} from \"@mittwald/flow-react-components/ContextualHelp\";\nimport { Heading } from \"@mittwald/flow-react-components/Heading\";\nimport { Text } from \"@mittwald/flow-react-components/Text\";\nimport { Link } from \"@mittwald/flow-react-components/Link\";\nimport { Button } from \"@mittwald/flow-react-components/Button\";\n\n<ContextualHelpTrigger>\n  <Button />\n\n  <ContextualHelp>\n    <Heading>Rechte & Rollen</Heading>\n    <Text>\n      Jedem Benutzer-Profil wird im mStudio je Projekt\n      und/oder Organisation eine Rolle zugewiesen. Das\n      ermöglicht dir ein ganz neues und modernes Arbeiten.\n    </Text>\n    <Link>Mehr erfahren</Link>\n  </ContextualHelp>\n</ContextualHelpTrigger>;\n"}
e1:["03-components","overlays","contextual-help"]
e3:{"component":"Modal","description":"Benutze das Modal um Inhalte in einem Overlay über der eigentlichen Oberfläche anzuzeigen."}
e4:{}
e2:{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":"$e3","scope":"$e4"}
e6:T5bb,import Modal, {
  ModalTrigger,
} from "@mittwald/flow-react-components/Modal";
import Content from "@mittwald/flow-react-components/Content";
import Text from "@mittwald/flow-react-components/Text";
import TextField from "@mittwald/flow-react-components/TextField";
import Label from "@mittwald/flow-react-components/Label";
import ActionGroup from "@mittwald/flow-react-components/ActionGroup";
import Button from "@mittwald/flow-react-components/Button";
import Heading from "@mittwald/flow-react-components/Heading";
import Action from "@mittwald/flow-react-components/Action";
import { sleepLong } from "@/content/03-components/actions/action/examples/lib";

<ModalTrigger>
  <Button color="accent">Organisation anlegen</Button>
  <Modal>
    <Heading>Neue Organisation</Heading>
    <Content>
      <Text>
        Eine Organisation kannst du dir wie ein Unternehmen
        vorstellen. An diesem Ort verwaltest du deine
        Mitarbeiter, Zahlungsmodalitäten und kannst deine
        Rechnungen einsehen.
      </Text>
      <TextField>
        <Label>Organisationsname</Label>
      </TextField>
    </Content>
    <ActionGroup>
      <Action closeOverlay="Modal">
        <Action action={sleepLong}>
          <Button color="accent">
            Organisation anlegen
          </Button>
        </Action>
        <Button variant="soft" color="secondary">
          Abbrechen
        </Button>
      </Action>
    </ActionGroup>
  </Modal>
</ModalTrigger>;
e7:T5c5,import Modal, {
  ModalTrigger,
} from "@mittwald/flow-react-components/Modal";
import Content from "@mittwald/flow-react-components/Content";
import Text from "@mittwald/flow-react-components/Text";
import TextField from "@mittwald/flow-react-components/TextField";
import Label from "@mittwald/flow-react-components/Label";
import ActionGroup from "@mittwald/flow-react-components/ActionGroup";
import Button from "@mittwald/flow-react-components/Button";
import Heading from "@mittwald/flow-react-components/Heading";
import Action from "@mittwald/flow-react-components/Action";
import { sleepLong } from "@/content/03-components/actions/action/examples/lib";

<ModalTrigger>
  <Button color="accent">Organisation anlegen</Button>
  <Modal offCanvas>
    <Heading>Neue Organisation</Heading>
    <Content>
      <Text>
        Eine Organisation kannst du dir wie ein Unternehmen
        vorstellen. An diesem Ort verwaltest du deine
        Mitarbeiter, Zahlungsmodalitäten und kannst deine
        Rechnungen einsehen.
      </Text>
      <TextField>
        <Label>Organisationsname</Label>
      </TextField>
    </Content>
    <ActionGroup>
      <Action closeOverlay="Modal">
        <Action action={sleepLong}>
          <Button color="accent">
            Organisation anlegen
          </Button>
        </Action>
        <Button variant="soft" color="secondary">
          Abbrechen
        </Button>
      </Action>
    </ActionGroup>
  </Modal>
</ModalTrigger>;
e5:{"default":"$e6","offCanvas":"$e7"}
e8:["03-components","overlays","modal"]
ea:{"component":"OffCanvas","description":"Das OffCanvas dient dazu Inhalte in einem seitlich angeordneten Overlay anzuzeigen. Es kann beispielsweise für mobile Navigation verwendet werden"}
eb:{}
e9:{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":"$ea","scope":"$eb"}
ed:T44a,import Text from "@mittwald/flow-react-components/Text";
import Button from "@mittwald/flow-react-components/Button";
import OffCanvas, {
  OffCanvasTrigger,
} from "@mittwald/flow-react-components/OffCanvas";
import {
  IconCustomer,
  IconMenu,
  IconProject,
  IconServer,
} from "@mittwald/flow-react-components/Icons";
import Link from "@mittwald/flow-react-components/Link";
import Navigation from "@mittwald/flow-react-components/Navigation";
import { Heading } from "@mittwald/flow-react-components/Heading";
import { Section } from "@mittwald/flow-react-components/Section";

<OffCanvasTrigger>
  <Button>
    <IconMenu />
  </Button>
  <OffCanvas>
    <Heading>Menü</Heading>
    <Section>
      <Navigation aria-label="Main menu">
        <Link>
          <IconCustomer />
          <Text>Customer</Text>
        </Link>
        <Link aria-current="page">
          <IconServer />
          <Text>Server</Text>
        </Link>
        <Link>
          <IconProject />
          <Text>Project</Text>
        </Link>
      </Navigation>
    </Section>
  </OffCanvas>
</OffCanvasTrigger>;
ec:{"default":"$ed"}
ee:["03-components","overlays","off-canvas"]
f0:{"component":"Tooltip","description":"Ein Tooltip zeigt dem Benutzer zusätzliche Informationen beim hovern an."}
f1:{}
ef:{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":"$f0","scope":"$f1"}
f2:{"default":"import Tooltip, {\n  TooltipTrigger,\n} from \"@mittwald/flow-react-components/Tooltip\";\nimport Button from \"@mittwald/flow-react-components/Button\";\nimport { IconCopy } from \"@mittwald/flow-react-components/Icons\";\n\n<TooltipTrigger>\n  <Button aria-label=\"Speichern\">\n    <IconCopy />\n  </Button>\n  <Tooltip>Speichern</Tooltip>\n</TooltipTrigger>;\n"}
f3:["03-components","overlays","tooltip"]
f5:{"component":"CounterBadge","description":"Das CounterBadge wird verwendet, um Veränderungen an einem Element, wie beispielsweise die Anzahl neuer Notifications, anzuzeigen."}
f6:{}
f4:{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":"$f5","scope":"$f6"}
f7:{"default":"import CounterBadge from \"@mittwald/flow-react-components/CounterBadge\";\n\n<CounterBadge count={5} />;\n","high-number":"import CounterBadge from \"@mittwald/flow-react-components/CounterBadge\";\n\n<CounterBadge count={120} />;\n","with-button":"import Button from \"@mittwald/flow-react-components/Button\";\nimport { IconNotification } from \"@mittwald/flow-react-components/Icons\";\nimport CounterBadge from \"@mittwald/flow-react-components/CounterBadge\";\n\n<Button aria-label=\"Benachrichtigungen: 7\">\n  <IconNotification />\n  <CounterBadge count={7} />\n</Button>;\n","without-content":"import CounterBadge from \"@mittwald/flow-react-components/CounterBadge\";\n\n<CounterBadge />;\n"}
f8:["03-components","status","counter-label"]
fa:{"component":"InlineAlert","description":"Der InlineAlert zeigt relevante Hinweise innerhalb des Contents an."}
fb:{}
f9:{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":"$fa","scope":"$fb"}
fd:T513,import InlineAlert from "@mittwald/flow-react-components/InlineAlert";
import Heading from "@mittwald/flow-react-components/Heading";
import Content from "@mittwald/flow-react-components/Content";

<Row>
  <InlineAlert status="info">
    <Heading>E-Mail-Adresse wurde archiviert</Heading>
    <Content>
      Da deine Domain gelöscht wurde, wurde diese
      E-Mail-Adresse archiviert. Um E-Mails empfangen und
      senden zu können musst du die Adresse wieder
      umbenennen.
    </Content>
  </InlineAlert>

  <InlineAlert status="warning">
    <Heading>Dein Speicher ist fast voll</Heading>
    <Content>
      Dein Speicher ist zu über 80% belegt. Wir empfehlen
      dir deinen Speicherplatz zu erweitern, um Problemen
      vorzubeugen.
    </Content>
  </InlineAlert>

  <InlineAlert status="danger">
    <Heading>
      Es konnte kein SSL-Zertifikat ausgestellt werden
    </Heading>
    <Content>
      Für diese Domain konnte kein SSL-Zertifikat
      ausgestellt werden, da die Domain per IP nicht auf
      deine Server-IP zeigt.
    </Content>
  </InlineAlert>

  <InlineAlert status="success">
    <Heading>Deine App wurde aktualisiert</Heading>
    <Content>
      Deine App wurde erfolgreich auf die neueste Version
      aktualisiert.
    </Content>
  </InlineAlert>
</Row>;
fc:{"default":"import InlineAlert from \"@mittwald/flow-react-components/InlineAlert\";\nimport Heading from \"@mittwald/flow-react-components/Heading\";\n\n<InlineAlert>\n  <Heading>E-Mail-Adresse wurde archiviert</Heading>\n</InlineAlert>;\n","status":"$fd","with-content":"import InlineAlert from \"@mittwald/flow-react-components/InlineAlert\";\nimport Heading from \"@mittwald/flow-react-components/Heading\";\nimport Content from \"@mittwald/flow-react-components/Content\";\nimport Button from \"@mittwald/flow-react-components/Button\";\n\n<InlineAlert>\n  <Heading>E-Mail-Adresse wurde archiviert</Heading>\n  <Content>\n    Da deine Domain gelöscht wurde, wurde diese\n    E-Mail-Adresse archiviert. Um E-Mails empfangen und\n    senden zu können musst du die Adresse wieder umbenennen.\n    <Button>E-Mail-Adresse anpassen</Button>\n  </Content>\n</InlineAlert>;\n"}
fe:["03-components","status","inline-alert"]
100:{"component":"LoadingSpinner","description":"Der Loading Spinner zeigt an, dass sich ein Element oder eine Seite im Ladezustand befindet."}
101:{}
ff:{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":"$100","scope":"$101"}
102:{"default":"import LoadingSpinner from \"@mittwald/flow-react-components/LoadingSpinner\";\n\n<LoadingSpinner />;\n"}
103:["03-components","status","loading-spinner"]
105:{"component":"NotificationProvider","description":"Die NotificationProvider dient zur Anzeige und Steuerung von Notifications"}
106:{}
104:{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":"$105","scope":"$106"}
107:{"auto-close":"import { Button } from \"@mittwald/flow-react-components/Button\";\nimport { Heading } from \"@mittwald/flow-react-components/Heading\";\nimport { Text } from \"@mittwald/flow-react-components/Text\";\nimport { useNotificationController } from \"@mittwald/flow-react-components/NotificationProvider\";\nimport { Notification } from \"@mittwald/flow-react-components/Notification\";\n\nexport default () => {\n  const controller = useNotificationController();\n\n  return (\n    <Button\n      onPress={() =>\n        controller.add(\n          <Notification\n            onClick={() => alert(\"Notification clicked\")}\n            status=\"warning\"\n            autoClose\n          >\n            <Heading>No SSL certificate</Heading>\n            <Text>\n              No SSL certificate could be issued for\n              examples.de.\n            </Text>\n          </Notification>,\n        )\n      }\n    >\n      Trigger Notification\n    </Button>\n  );\n};\n","default":"import { Button } from \"@mittwald/flow-react-components/Button\";\nimport { useNotificationController } from \"@mittwald/flow-react-components/NotificationProvider\";\nimport { Heading } from \"@mittwald/flow-react-components/Heading\";\nimport { Text } from \"@mittwald/flow-react-components/Text\";\nimport { Notification } from \"@mittwald/flow-react-components/Notification\";\n\nexport default () => {\n  const controller = useNotificationController();\n\n  return (\n    <Button\n      onPress={() =>\n        controller.add(\n          <Notification\n            onClick={() => alert(\"Notification clicked\")}\n            status=\"warning\"\n          >\n            <Heading>No SSL certificate</Heading>\n            <Text>\n              No SSL certificate could be issued for\n              examples.de.\n            </Text>\n          </Notification>,\n        )\n      }\n    >\n      Trigger Notification\n    </Button>\n  );\n};\n","provider":"import { NotificationProvider } from \"@mittwald/flow-react-components/NotificationProvider\";\n\n<NotificationProvider>Meine App</NotificationProvider>;\n"}
108:["03-components","status","notification-provider"]
10a:{"component":"Notification","description":"Die Notification dient dazu den User zu benachrichtigen, ohne dessen aktuelle Handlung zu unterbrechen."}
10b:{}
109:{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":"$10a","scope":"$10b"}
10c:{"default":"import Heading from \"@mittwald/flow-react-components/Heading\";\nimport Text from \"@mittwald/flow-react-components/Text\";\nimport Notification from \"@mittwald/flow-react-components/Notification\";\n\n<Notification>\n  <Heading>E-Mail-Adresse archiviert</Heading>\n  <Text>\n    Die E-Mail-Adresse <b>example@mittwald.de</b> wurde\n    archiviert.\n  </Text>\n</Notification>;\n","status":"import Heading from \"@mittwald/flow-react-components/Heading\";\nimport Text from \"@mittwald/flow-react-components/Text\";\nimport Notification from \"@mittwald/flow-react-components/Notification\";\n\n<Row>\n  <Notification status=\"info\">\n    <Heading>E-Mail-Adresse archiviert</Heading>\n    <Text>\n      Die E-Mail-Adresse <b>example@mittwald.de</b> wurde\n      archiviert.\n    </Text>\n  </Notification>\n\n  <Notification status=\"warning\">\n    <Heading>Speicher fast voll</Heading>\n    <Text>\n      Der Speicherplatz im Projekt <b>My Project</b> ist zu\n      80% voll.\n    </Text>\n  </Notification>\n\n  <Notification status=\"danger\">\n    <Heading>Kein SSL-Zertifikat</Heading>\n    <Text>\n      Für <b>example.de</b> konnte kein SSL-Zertifikat\n      ausgestellt werden.\n    </Text>\n  </Notification>\n\n  <Notification status=\"success\">\n    <Heading>App installiert</Heading>\n    <Text>\n      Deine App <b>My WordPress</b> wurde erfolgreich\n      installiert.\n    </Text>\n  </Notification>\n</Row>;\n"}
10d:["03-components","status","notification"]
10f:{"component":"ProgressBar","description":"Die Progressbar zeigt an wie weit ein Vorgang fortgeschritten ist."}
110:{}
10e:{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":"$10f","scope":"$110"}
111:{"default":"import ProgressBar from \"@mittwald/flow-react-components/ProgressBar\";\nimport Label from \"@mittwald/flow-react-components/Label\";\n\n<ProgressBar value={50}>\n  <Label>Speicher</Label>\n</ProgressBar>;\n","maxValue":"import ProgressBar from \"@mittwald/flow-react-components/ProgressBar\";\nimport Label from \"@mittwald/flow-react-components/Label\";\n\n<ProgressBar\n  showMaxValue\n  value={500}\n  maxValue={1000}\n  minValue={0}\n  formatOptions={{ style: \"unit\", unit: \"gigabyte\" }}\n>\n  <Label>Speicher</Label>\n</ProgressBar>;\n","small":"import ProgressBar from \"@mittwald/flow-react-components/ProgressBar\";\nimport Label from \"@mittwald/flow-react-components/Label\";\n\n<ProgressBar size=\"s\" value={50}>\n  <Label>Speicher</Label>\n</ProgressBar>;\n","status":"import ProgressBar from \"@mittwald/flow-react-components/ProgressBar\";\n\n<Row>\n  <ProgressBar value={50} status=\"info\">\n    Info\n  </ProgressBar>\n  <ProgressBar value={50} status=\"success\">\n    Success\n  </ProgressBar>\n  <ProgressBar value={70} status=\"warning\">\n    Warning\n  </ProgressBar>\n  <ProgressBar value={90} status=\"danger\">\n    Danger\n  </ProgressBar>\n</Row>;\n"}
112:["03-components","status","progress-bar"]
114:{"component":"StatusBadge","description":"Der StatusBadge zeigt Informationen zum Zustand eines Elements."}
115:{}
113:{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":"$114","scope":"$115"}
116:{"default":"import StatusBadge from \"@mittwald/flow-react-components/StatusBadge\";\n\n<StatusBadge>Archiviert</StatusBadge>;\n","status":"import StatusBadge from \"@mittwald/flow-react-components/StatusBadge\";\n\n<Row>\n  <StatusBadge status=\"info\">Archiviert</StatusBadge>\n  <StatusBadge status=\"success\">\n    Update erfolgreich\n  </StatusBadge>\n  <StatusBadge status=\"warning\">\n    Speicher fast voll\n  </StatusBadge>\n  <StatusBadge status=\"danger\">SSL fehlt</StatusBadge>\n</Row>;\n"}
117:["03-components","status","status-badge"]
119:{"component":"StatusIcon","description":"Das StatusIcon dient zur Veranschaulichung eines Status, beispielsweise in einem StatusBadge oder InlineAlert"}
11a:{}
118:{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":"$119","scope":"$11a"}
11b:{"default":"import StatusIcon from \"@mittwald/flow-react-components/StatusIcon\";\n\n<StatusIcon />;\n","status":"import StatusIcon from \"@mittwald/flow-react-components/StatusIcon\";\n\n<Row>\n  <StatusIcon status=\"info\" />\n  <StatusIcon status=\"success\" />\n  <StatusIcon status=\"warning\" />\n  <StatusIcon status=\"danger\" />\n</Row>;\n"}
11c:["03-components","status","status-icon"]
11e:{"component":"Accordion","description":"Das Accordion dient dazu Content-Bereiche ein- und auszublenden."}
11f:{}
11d:{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":"$11e","scope":"$11f"}
120:{"default-expanded":"import Heading from \"@mittwald/flow-react-components/Heading\";\nimport Accordion from \"@mittwald/flow-react-components/Accordion\";\nimport Content from \"@mittwald/flow-react-components/Content\";\n\n<Accordion defaultExpanded>\n  <Heading>Accordion Titel</Heading>\n  <Content>Inhalt des Accordions</Content>\n</Accordion>;\n","default":"import Heading from \"@mittwald/flow-react-components/Heading\";\nimport Accordion from \"@mittwald/flow-react-components/Accordion\";\nimport Content from \"@mittwald/flow-react-components/Content\";\n\n<Accordion>\n  <Heading>Accordion Titel</Heading>\n  <Content>Inhalt des Accordions</Content>\n</Accordion>;\n","label":"import Accordion from \"@mittwald/flow-react-components/Accordion\";\nimport Content from \"@mittwald/flow-react-components/Content\";\nimport Label from \"@mittwald/flow-react-components/Label\";\n\n<Accordion>\n  <Label>Accordion Titel</Label>\n  <Content>Inhalt des Accordions</Content>\n</Accordion>;\n"}
121:["03-components","structure","accordion"]
123:{"component":"ColumnLayout","description":"Mit dem ColumnLayout kann Inhalt in Spalten unterteilt werden."}
124:{}
122:{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true,\n    example: \"main\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":"$123","scope":"$124"}
125:{"custom-values":"import ColumnLayout from \"@mittwald/flow-react-components/ColumnLayout\";\nimport TextField from \"@mittwald/flow-react-components/TextField\";\nimport Label from \"@mittwald/flow-react-components/Label\";\n\n<ColumnLayout m={[2, 1]}>\n  <TextField>\n    <Label>Straße</Label>\n  </TextField>\n  <TextField>\n    <Label>Hausnummer</Label>\n  </TextField>\n</ColumnLayout>;\n","default":"import ColumnLayout from \"@mittwald/flow-react-components/ColumnLayout\";\nimport TextField from \"@mittwald/flow-react-components/TextField\";\nimport Label from \"@mittwald/flow-react-components/Label\";\n\n<ColumnLayout>\n  <TextField>\n    <Label>Vorname</Label>\n  </TextField>\n  <TextField>\n    <Label>Nachname</Label>\n  </TextField>\n  <TextField>\n    <Label>Straße</Label>\n  </TextField>\n  <TextField>\n    <Label>Hausnummer</Label>\n  </TextField>\n</ColumnLayout>;\n","main":"import ColumnLayout from \"@mittwald/flow-react-components/ColumnLayout\";\nimport TextField from \"@mittwald/flow-react-components/TextField\";\nimport Label from \"@mittwald/flow-react-components/Label\";\n\n<ColumnLayout s={[1, 1]}>\n  <TextField>\n    <Label>Vorname</Label>\n  </TextField>\n  <TextField>\n    <Label>Nachname</Label>\n  </TextField>\n</ColumnLayout>;\n"}
126:["03-components","structure","column-layout"]
128:{"component":"LayoutCard","description":"Eine LayoutCard ist ein Struktur-Element, das mit beliebigem Inhalt gefüllt werden kann"}
129:{}
127:{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":"$128","scope":"$129"}
12a:{"default":"import LayoutCard from \"@mittwald/flow-react-components/LayoutCard\";\n\n<LayoutCard>Inhalt der Layout Card</LayoutCard>;\n"}
12b:["03-components","structure","layout-card"]
12d:{"component":"List","description":"Die List-Component stellt eine Liste von Elementen mit verschiedenen Informationen dar."}
12e:{}
12c:{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true,\n    example: \"main\",\n    zoom: 0.6\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":"$12d","scope":"$12e"}
130:T66f,import List, {
  ListFilter,
  ListItem,
  ListItemView,
  ListSorting,
  ListStaticData,
} from "@mittwald/flow-react-components/List";
import {
  type Domain,
  domains,
} from "@/content/03-components/structure/list/examples/domainApi";
import Avatar from "@mittwald/flow-react-components/Avatar";
import Heading from "@mittwald/flow-react-components/Heading";
import Text from "@mittwald/flow-react-components/Text";
import ContextMenu from "@mittwald/flow-react-components/ContextMenu";
import {
  IconDomain,
  IconSubdomain,
} from "@mittwald/flow-react-components/Icons";
import StatusBadge from "@mittwald/flow-react-components/StatusBadge";
import MenuItem from "@mittwald/flow-react-components/MenuItem";

<List batchSize={5}>
  <ListStaticData data={domains} />
  <ListFilter<Domain>
    property="type"
    mode="some"
    name="Type"
  />
  <ListSorting<Domain> property="domain" name="Domain" />
  <ListSorting<Domain> property="type" name="Type" />
  <ListItemView<Domain>>
    {(domain) => (
      <ListItem>
        <Avatar variant={domain.type === "Domain" ? 1 : 2}>
          {domain.type === "Domain" ? (
            <IconDomain />
          ) : (
            <IconSubdomain />
          )}
        </Avatar>
        <Heading>{domain.hostname}</Heading>
        {domain.verified ? (
          <Text>{domain.type}</Text>
        ) : (
          <StatusBadge status="warning">
            Nicht verifiziert
          </StatusBadge>
        )}
        <ContextMenu>
          <MenuItem>Details anzeigen</MenuItem>
          <MenuItem>Löschen</MenuItem>
        </ContextMenu>
      </ListItem>
    )}
  </ListItemView>
</List>;
131:T563,import List, {
  ListItem,
  ListItemView,
  ListStaticData,
} from "@mittwald/flow-react-components/List";
import {
  type Domain,
  domains,
} from "@/content/03-components/structure/list/examples/domainApi";
import Avatar from "@mittwald/flow-react-components/Avatar";
import Heading from "@mittwald/flow-react-components/Heading";
import Text from "@mittwald/flow-react-components/Text";
import ContextMenu, {
  MenuItem,
} from "@mittwald/flow-react-components/ContextMenu";
import {
  IconDomain,
  IconSubdomain,
} from "@mittwald/flow-react-components/Icons";
import StatusBadge from "@mittwald/flow-react-components/StatusBadge";

<List batchSize={2}>
  <ListStaticData data={domains} />
  <ListItemView<Domain>>
    {(domain) => (
      <ListItem>
        <Avatar variant={domain.type === "Domain" ? 1 : 2}>
          {domain.type === "Domain" ? (
            <IconDomain />
          ) : (
            <IconSubdomain />
          )}
        </Avatar>
        <Heading>{domain.hostname}</Heading>
        {domain.verified ? (
          <Text>{domain.type}</Text>
        ) : (
          <StatusBadge status="warning">
            Nicht verifiziert
          </StatusBadge>
        )}
        <ContextMenu>
          <MenuItem>Details anzeigen</MenuItem>
          <MenuItem>Löschen</MenuItem>
        </ContextMenu>
      </ListItem>
    )}
  </ListItemView>
</List>;
132:T56c,import List, {
  ListItem,
  ListItemView,
  ListStaticData,
} from "@mittwald/flow-react-components/List";
import {
  type Domain,
  domains,
} from "@/content/03-components/structure/list/examples/domainApi";
import Avatar from "@mittwald/flow-react-components/Avatar";
import Heading from "@mittwald/flow-react-components/Heading";
import Text from "@mittwald/flow-react-components/Text";
import ContextMenu, {
  MenuItem,
} from "@mittwald/flow-react-components/ContextMenu";
import {
  IconDomain,
  IconSubdomain,
} from "@mittwald/flow-react-components/Icons";
import StatusBadge from "@mittwald/flow-react-components/StatusBadge";

<List batchSize={5}>
  <ListStaticData data={domains} />
  <ListItemView<Domain>>
    {(domain) => (
      <ListItem href="#">
        <Avatar variant={domain.type === "Domain" ? 1 : 2}>
          {domain.type === "Domain" ? (
            <IconDomain />
          ) : (
            <IconSubdomain />
          )}
        </Avatar>
        <Heading>{domain.hostname}</Heading>
        {domain.verified ? (
          <Text>{domain.type}</Text>
        ) : (
          <StatusBadge status="warning">
            Nicht verifiziert
          </StatusBadge>
        )}
        <ContextMenu>
          <MenuItem>Details anzeigen</MenuItem>
          <MenuItem>Löschen</MenuItem>
        </ContextMenu>
      </ListItem>
    )}
  </ListItemView>
</List>;
12f:{"default":"$130","main":"$131","withLink":"$132"}
133:["03-components","structure","list"]
135:{"component":"Section","description":"Die Section dient der Unterteilung von Inhalten in verschiedene Abschnitte"}
136:{}
134:{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":"$135","scope":"$136"}
138:T42a,import Heading from "@mittwald/flow-react-components/Heading";
import Text from "@mittwald/flow-react-components/Text";
import Link from "@mittwald/flow-react-components/Link";
import Section from "@mittwald/flow-react-components/Section";
import TextField from "@mittwald/flow-react-components/TextField";
import Label from "@mittwald/flow-react-components/Label";
import { IconMember } from "@mittwald/flow-react-components/Icons";

<>
  <Section>
    <Heading>
      <IconMember />
      Persönliche Informationen
    </Heading>
    <TextField isRequired defaultValue="John">
      <Label>Vorname</Label>
    </TextField>
    <TextField isRequired defaultValue="Doe">
      <Label>Nachname</Label>
    </TextField>
  </Section>
  <Section>
    <Heading>Newsletter</Heading>
    <Text>
      Kommende Releases, neue Features und Tipps rund um
      dein Hosting – wir bringen dir das Wichtigste in dein
      Postfach. Abonniere unseren Newsletter und bleib auf
      dem Laufenden.
    </Text>
    <Link href="#">Newsletter abonnieren</Link>
  </Section>
</>;
137:{"default":"import Heading from \"@mittwald/flow-react-components/Heading\";\nimport Text from \"@mittwald/flow-react-components/Text\";\nimport Section from \"@mittwald/flow-react-components/Section\";\nimport Link from \"@mittwald/flow-react-components/Link\";\n\n<Section>\n  <Heading>Newsletter</Heading>\n  <Text>\n    Kommende Releases, neue Features und Tipps rund um dein\n    Hosting – wir bringen dir das Wichtigste in dein\n    Postfach. Abonniere unseren Newsletter und bleib auf dem\n    Laufenden.\n  </Text>\n  <Link href=\"#\">Newsletter abonnieren</Link>\n</Section>;\n","multiple":"$138","status-badge":"import Heading from \"@mittwald/flow-react-components/Heading\";\nimport Text from \"@mittwald/flow-react-components/Text\";\nimport Section from \"@mittwald/flow-react-components/Section\";\nimport StatusBadge from \"@mittwald/flow-react-components/StatusBadge\";\nimport Header from \"@mittwald/flow-react-components/Header\";\n\n<Section>\n  <Header>\n    <Heading>Newsletter</Heading>\n    <StatusBadge>Subscribed</StatusBadge>\n  </Header>\n  <Text>\n    Kommende Releases, neue Features und Tipps rund um dein\n    Hosting – wir bringen dir das Wichtigste in dein\n    Postfach. Abonniere unseren Newsletter und bleib auf dem\n    Laufenden.\n  </Text>\n</Section>;\n","switch":"import Heading from \"@mittwald/flow-react-components/Heading\";\nimport Header from \"@mittwald/flow-react-components/Header\";\nimport Text from \"@mittwald/flow-react-components/Text\";\nimport Section from \"@mittwald/flow-react-components/Section\";\nimport Switch from \"@mittwald/flow-react-components/Switch\";\n\n<Section>\n  <Header>\n    <Heading>Newsletter</Heading>\n    <Switch>Abonnement</Switch>\n  </Header>\n  <Text>\n    Kommende Releases, neue Features und Tipps rund um dein\n    Hosting – wir bringen dir das Wichtigste in dein\n    Postfach. Abonniere unseren Newsletter und bleib auf dem\n    Laufenden.\n  </Text>\n</Section>;\n"}
139:["03-components","structure","section"]
13b:{"component":"Separator","description":"A Separator is a horizontal line that separates content."}
13c:{}
13a:{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":"$13b","scope":"$13c"}
13d:{"default":"import Separator from \"@mittwald/flow-react-components/Separator\";\n\n<Separator />;\n"}
13e:["03-components","structure","separator"]
140:{"component":"Table","description":"Die Table Komponente stellt eine einfache Tabelle bereit, um Listen von Informationen anzuzeigen"}
141:{}
13f:{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true,\n    zoom: 0.6\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":"$140","scope":"$141"}
143:T4c5,import {
  Table,
  TableBody,
  TableCell,
  TableColumn,
  TableHeader,
  TableRow,
} from "@mittwald/flow-react-components/Table";
import { InlineCode } from "@mittwald/flow-react-components/InlineCode";

<Table aria-label="Button Props">
  <TableHeader>
    <TableColumn>Name</TableColumn>
    <TableColumn>Type</TableColumn>
    <TableColumn>Default</TableColumn>
    <TableColumn>Description</TableColumn>
  </TableHeader>
  <TableBody>
    <TableRow>
      <TableCell>
        <InlineCode>color</InlineCode>
      </TableCell>
      <TableCell>
        primary | accent | secondary | danger
      </TableCell>
      <TableCell>primary</TableCell>
      <TableCell>The color of the button</TableCell>
    </TableRow>
    <TableRow>
      <TableCell>
        <InlineCode>variant</InlineCode>
      </TableCell>
      <TableCell>plain | solid | soft</TableCell>
      <TableCell>solid</TableCell>
      <TableCell>The variant of the button</TableCell>
    </TableRow>
    <TableRow>
      <TableCell>
        <InlineCode>size</InlineCode>
      </TableCell>
      <TableCell>m | s</TableCell>
      <TableCell>m</TableCell>
      <TableCell>The size of the button</TableCell>
    </TableRow>
  </TableBody>
</Table>;
142:{"default":"$143"}
144:["03-components","structure","table"]
147:{"mdxSource":"$25","examples":"$29","slugs":"$2a","filename":"01-get-started/installation/index.mdx"}
148:{"mdxSource":"$2b","examples":"$2f","slugs":"$30","filename":"01-get-started/stylesheet/index.mdx"}
149:{"mdxSource":"$31","examples":"$35","slugs":"$36","filename":"02-foundations/content-guidelines/fehlermeldungen/index.mdx"}
14a:{"mdxSource":"$37","examples":"$3a","slugs":"$3b","filename":"03-components/actions/action-group/index.mdx"}
14b:{"mdxSource":"$3c","examples":"$3f","slugs":"$41","filename":"03-components/actions/action/index.mdx"}
14c:{"mdxSource":"$42","examples":"$45","slugs":"$46","filename":"03-components/actions/button/index.mdx"}
14d:{"mdxSource":"$47","examples":"$4a","slugs":"$4b","filename":"03-components/actions/context-menu/index.mdx"}
14e:{"mdxSource":"$4c","examples":"$4f","slugs":"$50","filename":"03-components/actions/copy-button/index.mdx"}
14f:{"mdxSource":"$51","examples":"$54","slugs":"$55","filename":"03-components/content/avatar/index.mdx"}
150:{"mdxSource":"$56","examples":"$59","slugs":"$5a","filename":"03-components/content/heading/index.mdx"}
151:{"mdxSource":"$5b","examples":"$5e","slugs":"$61","filename":"03-components/content/icon/index.mdx"}
152:{"mdxSource":"$62","examples":"$65","slugs":"$66","filename":"03-components/content/illustrated-message/index.mdx"}
153:{"mdxSource":"$67","examples":"$6a","slugs":"$6b","filename":"03-components/content/image/index.mdx"}
154:{"mdxSource":"$6c","examples":"$6f","slugs":"$70","filename":"03-components/content/inline-code/index.mdx"}
155:{"mdxSource":"$71","examples":"$74","slugs":"$75","filename":"03-components/content/label/index.mdx"}
156:{"mdxSource":"$76","examples":"$79","slugs":"$7a","filename":"03-components/content/labeled-value/index.mdx"}
157:{"mdxSource":"$7b","examples":"$7e","slugs":"$7f","filename":"03-components/content/skeleton/index.mdx"}
158:{"mdxSource":"$80","examples":"$83","slugs":"$84","filename":"03-components/content/text/index.mdx"}
159:{"mdxSource":"$85","examples":"$88","slugs":"$89","filename":"03-components/form-controls/checkbox-button/index.mdx"}
15a:{"mdxSource":"$8a","examples":"$8d","slugs":"$8e","filename":"03-components/form-controls/checkbox-group/index.mdx"}
15b:{"mdxSource":"$8f","examples":"$92","slugs":"$93","filename":"03-components/form-controls/checkbox/index.mdx"}
15c:{"mdxSource":"$94","examples":"$97","slugs":"$98","filename":"03-components/form-controls/field-react-hook-form/index.mdx"}
15d:{"mdxSource":"$99","examples":"$9c","slugs":"$9e","filename":"03-components/form-controls/form-react-hook-form/index.mdx"}
15e:{"mdxSource":"$9f","examples":"$a2","slugs":"$a3","filename":"03-components/form-controls/number-field/index.mdx"}
15f:{"mdxSource":"$a4","examples":"$a7","slugs":"$a8","filename":"03-components/form-controls/radio-group/index.mdx"}
160:{"mdxSource":"$a9","examples":"$ac","slugs":"$ad","filename":"03-components/form-controls/select/index.mdx"}
161:{"mdxSource":"$ae","examples":"$b1","slugs":"$b2","filename":"03-components/form-controls/slider/index.mdx"}
162:{"mdxSource":"$b3","examples":"$b6","slugs":"$b7","filename":"03-components/form-controls/switch/index.mdx"}
163:{"mdxSource":"$b8","examples":"$bb","slugs":"$bc","filename":"03-components/form-controls/text-area/index.mdx"}
164:{"mdxSource":"$bd","examples":"$c0","slugs":"$c1","filename":"03-components/form-controls/text-field/index.mdx"}
165:{"mdxSource":"$c2","examples":"$c5","slugs":"$c6","filename":"03-components/navigation/breadcrumb/index.mdx"}
166:{"mdxSource":"$c7","examples":"$ca","slugs":"$cc","filename":"03-components/navigation/header-navigation/index.mdx"}
167:{"mdxSource":"$cd","examples":"$d0","slugs":"$d1","filename":"03-components/navigation/link/index.mdx"}
168:{"mdxSource":"$d2","examples":"$d5","slugs":"$d6","filename":"03-components/navigation/navigation/index.mdx"}
169:{"mdxSource":"$d7","examples":"$da","slugs":"$dc","filename":"03-components/navigation/tabs/index.mdx"}
16a:{"mdxSource":"$dd","examples":"$e0","slugs":"$e1","filename":"03-components/overlays/contextual-help/index.mdx"}
16b:{"mdxSource":"$e2","examples":"$e5","slugs":"$e8","filename":"03-components/overlays/modal/index.mdx"}
16c:{"mdxSource":"$e9","examples":"$ec","slugs":"$ee","filename":"03-components/overlays/off-canvas/index.mdx"}
16d:{"mdxSource":"$ef","examples":"$f2","slugs":"$f3","filename":"03-components/overlays/tooltip/index.mdx"}
16e:{"mdxSource":"$f4","examples":"$f7","slugs":"$f8","filename":"03-components/status/counter-label/index.mdx"}
16f:{"mdxSource":"$f9","examples":"$fc","slugs":"$fe","filename":"03-components/status/inline-alert/index.mdx"}
170:{"mdxSource":"$ff","examples":"$102","slugs":"$103","filename":"03-components/status/loading-spinner/index.mdx"}
171:{"mdxSource":"$104","examples":"$107","slugs":"$108","filename":"03-components/status/notification-provider/index.mdx"}
172:{"mdxSource":"$109","examples":"$10c","slugs":"$10d","filename":"03-components/status/notification/index.mdx"}
173:{"mdxSource":"$10e","examples":"$111","slugs":"$112","filename":"03-components/status/progress-bar/index.mdx"}
174:{"mdxSource":"$113","examples":"$116","slugs":"$117","filename":"03-components/status/status-badge/index.mdx"}
175:{"mdxSource":"$118","examples":"$11b","slugs":"$11c","filename":"03-components/status/status-icon/index.mdx"}
176:{"mdxSource":"$11d","examples":"$120","slugs":"$121","filename":"03-components/structure/accordion/index.mdx"}
177:{"mdxSource":"$122","examples":"$125","slugs":"$126","filename":"03-components/structure/column-layout/index.mdx"}
178:{"mdxSource":"$127","examples":"$12a","slugs":"$12b","filename":"03-components/structure/layout-card/index.mdx"}
179:{"mdxSource":"$12c","examples":"$12f","slugs":"$133","filename":"03-components/structure/list/index.mdx"}
17a:{"mdxSource":"$134","examples":"$137","slugs":"$139","filename":"03-components/structure/section/index.mdx"}
17b:{"mdxSource":"$13a","examples":"$13d","slugs":"$13e","filename":"03-components/structure/separator/index.mdx"}
17c:{"mdxSource":"$13f","examples":"$142","slugs":"$144","filename":"03-components/structure/table/index.mdx"}
146:["$147","$148","$149","$14a","$14b","$14c","$14d","$14e","$14f","$150","$151","$152","$153","$154","$155","$156","$157","$158","$159","$15a","$15b","$15c","$15d","$15e","$15f","$160","$161","$162","$163","$164","$165","$166","$167","$168","$169","$16a","$16b","$16c","$16d","$16e","$16f","$170","$171","$172","$173","$174","$175","$176","$177","$178","$179","$17a","$17b","$17c"]
3:["$","html",null,{"lang":"en","children":["$","body",null,{"className":"flow layout_body__oiEIT","children":["$","$L5",null,{"children":["$","$L6",null,{"children":[["$","header",null,{"className":"layout_header__ttTk7","children":[["$","$L7",null,{"size":"l","className":"layout_logo__PcxmI"}],["$","$L8",null,{"level":1,"className":"$undefined","children":"Flow"}],["$","$L9",null,{"className":"layout_betaBadge__Rtyuk","status":"warning","children":"beta"}],["$","$La",null,{"className":"layout_headerNavigation__SNRbw","docs":[{"mdxSource":{"compiledSource":"$b","frontmatter":{"description":"Willkommen in der Flow Dokumentation!"},"scope":{}},"examples":{},"slugs":["01-get-started","installation"],"filename":"01-get-started/installation/index.mdx"},{"mdxSource":{"compiledSource":"$c","frontmatter":{},"scope":{}},"examples":{"composition":"import ExampleSvg from \"@/content/01-get-started/stylesheet/examples/components/ExampleSvg\";\n\n<aside className=\"flow--inline-alert\">\n  <ExampleSvg className=\"flow--icon flow--status-icon flow--inline-alert--status-icon\" />\n  <h3 className=\"flow--heading flow--heading--h3 flow--inline-alert--heading\">\n    E-Mail Adresse wurde archiviert\n  </h3>\n  <div className=\"flow--inline-alert--content\">\n    Da deine Domain gelöscht wurde, wurde diese\n    E-Mail-Adresse archiviert. Um E-Mails empfangen und\n    senden zu können musst du die Adresse wieder umbenennen.\n  </div>\n</aside>;\n","multiple-variants":"<button className=\"flow--button flow--button--accent flow--button--size-s\">\n  Small Accented Button\n</button>;\n","variants":"<button className=\"flow--button flow--button--accent\">\n  Accented Button\n</button>;\n"},"slugs":["01-get-started","stylesheet"],"filename":"01-get-started/stylesheet/index.mdx"},{"mdxSource":{"compiledSource":"$d","frontmatter":{},"scope":{}},"examples":{},"slugs":["02-foundations","content-guidelines","fehlermeldungen"],"filename":"02-foundations/content-guidelines/fehlermeldungen/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true,\n    zoom: 0.7\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"ActionGroup","description":"Die ActionGroup dient dazu zusammengehörige Buttons sinnvoll zu gruppieren. Sie wird beispielsweise für Forms oder Modals verwendet."},"scope":{}},"examples":{"additionalSecondary":"import ActionGroup from \"@mittwald/flow-react-components/ActionGroup\";\nimport Button from \"@mittwald/flow-react-components/Button\";\n\n<ActionGroup>\n  <Button color=\"accent\">E-Mail-Addresse anlegen</Button>\n  <Button color=\"secondary\" variant=\"soft\" slot=\"secondary\">\n    Speichern und weitere anlegen\n  </Button>\n  <Button color=\"secondary\" variant=\"soft\">\n    Abbrechen\n  </Button>\n</ActionGroup>;\n","danger":"import ActionGroup from \"@mittwald/flow-react-components/ActionGroup\";\nimport Button from \"@mittwald/flow-react-components/Button\";\n\n<ActionGroup>\n  <Button color=\"danger\">Projekt löschen</Button>\n  <Button color=\"secondary\" variant=\"soft\">\n    Abbrechen\n  </Button>\n</ActionGroup>;\n","default":"import ActionGroup from \"@mittwald/flow-react-components/ActionGroup\";\nimport Button from \"@mittwald/flow-react-components/Button\";\n\n<ActionGroup>\n  <Button color=\"accent\">Organisation erstellen</Button>\n  <Button color=\"secondary\" variant=\"soft\">\n    Abbrechen\n  </Button>\n</ActionGroup>;\n","info":"import ActionGroup from \"@mittwald/flow-react-components/ActionGroup\";\nimport Button from \"@mittwald/flow-react-components/Button\";\n\n<ActionGroup>\n  <Button slot=\"primary\">Ok</Button>\n</ActionGroup>;\n"},"slugs":["03-components","actions","action-group"],"filename":"03-components/actions/action-group/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"Action","description":"Die Action Komponente kann um einen Button gelegt werden, um beispielsweise asynchrone Aktionen mit dem Button auszuführen."},"scope":{}},"examples":{"confirmation":"$e","default":"import Button from \"@mittwald/flow-react-components/Button\";\nimport Action from \"@mittwald/flow-react-components/Action\";\nimport { sleep } from \"@/content/03-components/actions/action/examples/lib\";\n\n<Action action={sleep}>\n  <Button>Speichern</Button>\n</Action>;\n","feedback":"import Button from \"@mittwald/flow-react-components/Button\";\nimport Action from \"@mittwald/flow-react-components/Action\";\n\n<Action\n  action={() => {\n    // do nothing\n  }}\n  showFeedback\n>\n  <Button>Speichern</Button>\n</Action>;\n","longAction":"import Button from \"@mittwald/flow-react-components/Button\";\nimport Action from \"@mittwald/flow-react-components/Action\";\nimport { sleepLong } from \"@/content/03-components/actions/action/examples/lib\";\n\n<Action action={sleepLong}>\n  <Button>Speichern</Button>\n</Action>;\n"},"slugs":["03-components","actions","action"],"filename":"03-components/actions/action/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"Button","description":"Der Button dient zum Ausführen von Aktionen."},"scope":{}},"examples":{"colors":"import Button from \"@mittwald/flow-react-components/Button\";\n\n<Row>\n  <Button color=\"primary\">Fortfahren/Aktion</Button>\n  <Button color=\"secondary\">Abbrechen/Zurück</Button>\n  <Button color=\"accent\">Erstellen/Speichern</Button>\n  <Button color=\"danger\">Löschen/Kündigen</Button>\n</Row>;\n","dark":"import Button from \"@mittwald/flow-react-components/Button\";\n\n<Row>\n  <Button color=\"dark\">Fortfahren/Aktion</Button>\n  <Button variant=\"soft\" color=\"dark\">\n    Fortfahren/Aktion\n  </Button>\n  <Button variant=\"plain\" color=\"dark\">\n    Fortfahren/Aktion\n  </Button>\n</Row>;\n","default":"import Button from \"@mittwald/flow-react-components/Button\";\n\n<Button\n  onPress={() => {\n    alert(\"Button gedrückt\");\n  }}\n>\n  Fortfahren/Aktion\n</Button>;\n","icon":"import Button from \"@mittwald/flow-react-components/Button\";\nimport { IconHome } from \"@mittwald/flow-react-components/Icons\";\n\n<Button aria-label=\"Home\">\n  <IconHome />\n</Button>;\n","iconText":"import Button from \"@mittwald/flow-react-components/Button\";\nimport Text from \"@mittwald/flow-react-components/Text\";\nimport { IconChevronDown } from \"@mittwald/flow-react-components/Icons\";\n\n<Button>\n  <Text>E-Mail-Adresse hinzufügen</Text>\n  <IconChevronDown />\n</Button>;\n","light":"import Button from \"@mittwald/flow-react-components/Button\";\n\n<Row>\n  <Button color=\"light\">Fortfahren/Aktion</Button>\n  <Button variant=\"soft\" color=\"light\">\n    Fortfahren/Aktion\n  </Button>\n  <Button variant=\"plain\" color=\"light\">\n    Fortfahren/Aktion\n  </Button>\n  ;\n</Row>;\n","plain":"import Button from \"@mittwald/flow-react-components/Button\";\n\n<Row>\n  <Button variant=\"plain\" color=\"primary\">\n    Fortfahren/Aktion\n  </Button>\n  <Button variant=\"plain\" color=\"secondary\">\n    Abbrechen/Zurück\n  </Button>\n  <Button variant=\"plain\" color=\"accent\">\n    Erstellen/Speichern\n  </Button>\n  <Button variant=\"plain\" color=\"danger\">\n    Löschen/Kündigen\n  </Button>\n</Row>;\n","small":"import Button from \"@mittwald/flow-react-components/Button\";\n\n<Button size=\"s\">Fortfahren/Aktion</Button>;\n","soft":"import Button from \"@mittwald/flow-react-components/Button\";\n\n<Row>\n  <Button variant=\"soft\" color=\"primary\">\n    Fortfahren/Aktion\n  </Button>\n  <Button variant=\"soft\" color=\"secondary\">\n    Abbrechen/Zurück\n  </Button>\n  <Button variant=\"soft\" color=\"accent\">\n    Erstellen/Speichern\n  </Button>\n  <Button variant=\"soft\" color=\"danger\">\n    Löschen/Kündigen\n  </Button>\n</Row>;\n","states":"import Button from \"@mittwald/flow-react-components/Button\";\n\n<Row>\n  <Button isDisabled>Fortfahren/Aktion</Button>\n  <Button isPending>Fortfahren/Aktion</Button>\n  <Button isSucceeded>Fortfahren/Aktion</Button>\n  <Button isFailed>Fortfahren/Aktion</Button>\n</Row>;\n"},"slugs":["03-components","actions","button"],"filename":"03-components/actions/button/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"ContextMenu","description":"Beim ContextMenu handelt es sich um ein Popover, das eine Liste von Aktionen oder Verlinkungen enthält."},"scope":{}},"examples":{"default":"import ContextMenu, {\n  ContextMenuTrigger,\n} from \"@mittwald/flow-react-components/ContextMenu\";\nimport Button from \"@mittwald/flow-react-components/Button\";\nimport MenuItem from \"@mittwald/flow-react-components/MenuItem\";\n\n<ContextMenuTrigger>\n  <Button>Trigger</Button>\n  <ContextMenu\n    onAction={(id) => {\n      alert(id);\n    }}\n  >\n    <MenuItem id=\"1\">Item 1</MenuItem>\n    <MenuItem id=\"2\">Item 2</MenuItem>\n    <MenuItem id=\"3\">Item 3</MenuItem>\n  </ContextMenu>\n</ContextMenuTrigger>;\n","icon":"import ContextMenu, {\n  ContextMenuTrigger,\n} from \"@mittwald/flow-react-components/ContextMenu\";\nimport Button from \"@mittwald/flow-react-components/Button\";\nimport MenuItem from \"@mittwald/flow-react-components/MenuItem\";\nimport { IconInfo } from \"@mittwald/flow-react-components/Icons\";\nimport Text from \"@mittwald/flow-react-components/Text\";\n\n<ContextMenuTrigger>\n  <Button>Trigger</Button>\n  <ContextMenu\n    onAction={(id) => {\n      alert(id);\n    }}\n  >\n    <MenuItem id=\"1\">\n      <IconInfo />\n      <Text>Item 1</Text>\n    </MenuItem>\n    <MenuItem id=\"2\">\n      <IconInfo />\n      <Text>Item 2</Text>\n    </MenuItem>\n    <MenuItem id=\"3\">\n      <IconInfo />\n      <Text>Item 3</Text>\n    </MenuItem>\n  </ContextMenu>\n</ContextMenuTrigger>;\n","multi-select":"import ContextMenu, {\n  ContextMenuTrigger,\n} from \"@mittwald/flow-react-components/ContextMenu\";\nimport Button from \"@mittwald/flow-react-components/Button\";\nimport MenuItem from \"@mittwald/flow-react-components/MenuItem\";\n\n<ContextMenuTrigger>\n  <Button>Trigger</Button>\n  <ContextMenu\n    selectionMode=\"multiple\"\n    defaultSelectedKeys={[\"item2\", \"item3\"]}\n  >\n    <MenuItem id=\"item1\">Item 1</MenuItem>\n    <MenuItem id=\"item2\">Item 2</MenuItem>\n    <MenuItem id=\"item3\">Item 3</MenuItem>\n  </ContextMenu>\n</ContextMenuTrigger>;\n","separator":"import ContextMenu, {\n  ContextMenuTrigger,\n} from \"@mittwald/flow-react-components/ContextMenu\";\nimport Button from \"@mittwald/flow-react-components/Button\";\nimport MenuItem from \"@mittwald/flow-react-components/MenuItem\";\nimport Separator from \"@mittwald/flow-react-components/Separator\";\n\n<ContextMenuTrigger>\n  <Button>Trigger</Button>\n  <ContextMenu>\n    <MenuItem id=\"1\">Item 1</MenuItem>\n    <Separator />\n    <MenuItem id=\"2\">Item 2</MenuItem>\n    <MenuItem id=\"3\">Item 3</MenuItem>\n  </ContextMenu>\n</ContextMenuTrigger>;\n","single-select":"import ContextMenu, {\n  ContextMenuTrigger,\n} from \"@mittwald/flow-react-components/ContextMenu\";\nimport Button from \"@mittwald/flow-react-components/Button\";\nimport MenuItem from \"@mittwald/flow-react-components/MenuItem\";\n\n<ContextMenuTrigger>\n  <Button>Trigger</Button>\n  <ContextMenu\n    selectionMode=\"single\"\n    defaultSelectedKeys={[\"item2\"]}\n  >\n    <MenuItem id=\"item1\">Item 1</MenuItem>\n    <MenuItem id=\"item2\">Item 2</MenuItem>\n    <MenuItem id=\"item3\">Item 3</MenuItem>\n  </ContextMenu>\n</ContextMenuTrigger>;\n"},"slugs":["03-components","actions","context-menu"],"filename":"03-components/actions/context-menu/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"CopyButton","description":"Der CopyButton dient dazu Informationen in die Zwischenablage zu kopieren."},"scope":{}},"examples":{"default":"import CopyButton from \"@mittwald/flow-react-components/CopyButton\";\n\n<CopyButton text=\"Kopierter Inhalt\" />;\n"},"slugs":["03-components","actions","copy-button"],"filename":"03-components/actions/copy-button/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"Avatar","description":"Der Avatar kann ein Bild, Initialen oder ein Icon darstellen."},"scope":{}},"examples":{"colors":"import Avatar from \"@mittwald/flow-react-components/Avatar\";\nimport Initials from \"@mittwald/flow-react-components/Initials\";\nimport { IconHome } from \"@mittwald/flow-react-components/Icons\";\nimport { IconCustomer } from \"@mittwald/flow-react-components/Icons\";\n\n<Row>\n  <Avatar>\n    <Initials>Gillian Gopher</Initials>\n  </Avatar>\n  <Avatar>\n    <Initials>Gustav Gopher</Initials>\n  </Avatar>\n  <Avatar>\n    <Initials>Gina-Lisa Gopher</Initials>\n  </Avatar>\n  <Avatar>\n    <Initials>Gorgio Gopher</Initials>\n  </Avatar>\n  <Avatar>\n    <IconHome />\n  </Avatar>\n  <Avatar>\n    <IconCustomer />\n  </Avatar>\n</Row>;\n","default":"import Avatar from \"@mittwald/flow-react-components/Avatar\";\nimport Initials from \"@mittwald/flow-react-components/Initials\";\n\n<Avatar>\n  <Initials>Gillian Gopher</Initials>\n</Avatar>;\n","icon":"import { IconHome } from \"@mittwald/flow-react-components/Icons\";\nimport Avatar from \"@mittwald/flow-react-components/Avatar\";\n\n<Avatar variant={1}>\n  <IconHome />\n</Avatar>;\n","image":"import Avatar from \"@mittwald/flow-react-components/Avatar\";\nimport Image from \"@mittwald/flow-react-components/Image\";\n\n<Avatar>\n  <Image\n    alt=\"Gopher\"\n    src=\"https://cdn.shopify.com/s/files/1/2022/6883/products/IMG_2002_250x250@2x.JPG?v=1538235544\"\n  />\n</Avatar>;\n","sizes":"import Avatar from \"@mittwald/flow-react-components/Avatar\";\nimport Initials from \"@mittwald/flow-react-components/Initials\";\n\n<Row>\n  <Avatar size=\"xs\">\n    <Initials>Gillian Gopher</Initials>\n  </Avatar>\n  <Avatar size=\"s\">\n    <Initials>Gillian Gopher</Initials>\n  </Avatar>\n  <Avatar size=\"m\">\n    <Initials>Gillian Gopher</Initials>\n  </Avatar>\n  <Avatar size=\"l\">\n    <Initials>Gillian Gopher</Initials>\n  </Avatar>\n</Row>;\n"},"slugs":["03-components","content","avatar"],"filename":"03-components/content/avatar/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"Heading","description":"Die Heading-Komponente wird verwendet, um Überschriften anzuzeigen"},"scope":{}},"examples":{"dark":"import Heading from \"@mittwald/flow-react-components/Heading\";\n\n<Heading color=\"dark\">Das ist eine Überschrift</Heading>;\n","default":"import Heading from \"@mittwald/flow-react-components/Heading\";\n\n<Heading>Das ist eine Überschrift</Heading>;\n","icon":"import Heading from \"@mittwald/flow-react-components/Heading\";\nimport { IconMember } from \"@mittwald/flow-react-components/Icons\";\n\n<Heading>\n  <IconMember />\n  Persönliche Informationen\n</Heading>;\n","level-visual":"import Heading from \"@mittwald/flow-react-components/Heading\";\n\n<Heading level={4} levelVisual={2}>\n  Das ist eine h4 Überschrift die aussieht wie eine h2\n  Überschrift\n</Heading>;\n","levels":"import Heading from \"@mittwald/flow-react-components/Heading\";\n\n<>\n  <Heading level={1}>\n    Das ist eine Level 1 Überschrift\n  </Heading>\n  <Heading level={2}>\n    Das ist eine Level 2 Überschrift\n  </Heading>\n  <Heading level={3}>\n    Das ist eine Level 3 Überschrift\n  </Heading>\n  <Heading level={4}>\n    Das ist eine Level 4 Überschrift\n  </Heading>\n  <Heading level={5}>\n    Das ist eine Level 5 Überschrift\n  </Heading>\n</>;\n","light":"import Heading from \"@mittwald/flow-react-components/Heading\";\n\n<Heading color=\"light\">Das ist eine Überschrift</Heading>;\n"},"slugs":["03-components","content","heading"],"filename":"03-components/content/heading/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"Icon","description":"Die Icon-Komponente unterstützt Tabler Icons sowie benutzerdefinierte SVGs."},"scope":{}},"examples":{"brand":"import { IconMittwald } from \"@mittwald/flow-react-components/Icons\";\nimport Label from \"@mittwald/flow-react-components/Label\";\nimport LabeledValue from \"@mittwald/flow-react-components/LabeledValue\";\nimport ColumnLayout from \"@mittwald/flow-react-components/ColumnLayout\";\n\n<ColumnLayout l={[1, 1, 1, 1, 1]} m={[1, 1, 1]} s={[1, 1]}>\n  <LabeledValue>\n    <Label>mittwald</Label>\n    <IconMittwald />\n  </LabeledValue>\n</ColumnLayout>;\n","coloring":"import { IconHome } from \"@mittwald/flow-react-components/Icons\";\n\n<IconHome\n  style={{ color: \"var(--primary--color--800)\" }}\n/>;\n","decorative":"$f","default":"import { IconHome } from \"@mittwald/flow-react-components/Icons\";\n\n<IconHome />;\n","functional":"$10","sizes":"import { IconHome } from \"@mittwald/flow-react-components/Icons\";\n\n<Row>\n  <IconHome size=\"s\" />\n  <IconHome size=\"m\" />\n  <IconHome size=\"l\" />\n</Row>;\n","states":"import LabeledValue from \"@mittwald/flow-react-components/LabeledValue\";\nimport ColumnLayout from \"@mittwald/flow-react-components/ColumnLayout\";\nimport Label from \"@mittwald/flow-react-components/Label\";\nimport {\n  IconDanger,\n  IconFailed,\n  IconInfo,\n  IconPending,\n  IconSucceeded,\n  IconSuccess,\n  IconWarning,\n} from \"@mittwald/flow-react-components/Icons\";\n\n<ColumnLayout l={[1, 1, 1, 1, 1]} m={[1, 1, 1]} s={[1, 1]}>\n  <LabeledValue>\n    <Label>Danger</Label>\n    <IconDanger />\n  </LabeledValue>\n  <LabeledValue>\n    <Label>Warning</Label>\n    <IconWarning />\n  </LabeledValue>\n  <LabeledValue>\n    <Label>Success</Label>\n    <IconSuccess />\n  </LabeledValue>\n  <LabeledValue>\n    <Label>Info</Label>\n    <IconInfo />\n  </LabeledValue>\n  <LabeledValue>\n    <Label>Pending</Label>\n    <IconPending />\n  </LabeledValue>\n  <LabeledValue>\n    <Label>Failed</Label>\n    <IconFailed />\n  </LabeledValue>\n  <LabeledValue>\n    <Label>Succeeded</Label>\n    <IconSucceeded />\n  </LabeledValue>\n</ColumnLayout>;\n","svg-string":"import Icon from \"@mittwald/flow-react-components/Icon\";\n\nexport default () => {\n  const svgString = `\\\n    <svg viewBox=\"0 0 100 100\" xmlns=\"http://www.w3.org/2000/svg\">\n      <circle cx=\"50\" cy=\"50\" r=\"50\" />\n    </svg>\n  `;\n\n  return <Icon>{svgString}</Icon>;\n};\n","svg":"import Icon from \"@mittwald/flow-react-components/Icon\";\n\n<Icon>\n  <svg\n    viewBox=\"0 0 100 100\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <circle cx=\"50\" cy=\"50\" r=\"50\" />\n  </svg>\n</Icon>;\n","tabler":"import Icon from \"@mittwald/flow-react-components/Icon\";\nimport { IconStar } from \"@tabler/icons-react\";\n\n<Icon>\n  <IconStar />\n</Icon>;\n"},"slugs":["03-components","content","icon"],"filename":"03-components/content/icon/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true,\n    zoom: 0.7\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"IllustratedMessage","description":"Die IllustratedMessage dient als Platzhalter, wenn der eigentliche Inhalt nicht angezeigt werden kann."},"scope":{}},"examples":{"default":"import Heading from \"@mittwald/flow-react-components/Heading\";\nimport IllustratedMessage from \"@mittwald/flow-react-components/IllustratedMessage\";\nimport { IconApp } from \"@mittwald/flow-react-components/Icons\";\nimport Text from \"@mittwald/flow-react-components/Text\";\nimport Button from \"@mittwald/flow-react-components/Button\";\n\n<IllustratedMessage>\n  <IconApp />\n  <Heading>Keine Apps installiert</Heading>\n  <Text>\n    Lege deine erste App an, um mit der Arbeit an deiner\n    Webseite loszulegen.\n  </Text>\n  <Button>App anlegen</Button>\n</IllustratedMessage>;\n","negative":"import Heading from \"@mittwald/flow-react-components/Heading\";\nimport IllustratedMessage from \"@mittwald/flow-react-components/IllustratedMessage\";\nimport { IconDanger } from \"@mittwald/flow-react-components/Icons\";\nimport Text from \"@mittwald/flow-react-components/Text\";\nimport Button from \"@mittwald/flow-react-components/Button\";\n\n<IllustratedMessage variant=\"negative\">\n  <IconDanger />\n  <Heading>Kein Zugriff</Heading>\n  <Text>\n    Du hast keine Berechtigung, um auf diese Seite\n    zuzugreifen.\n  </Text>\n  <Button>Zum Dashboard</Button>\n</IllustratedMessage>;\n"},"slugs":["03-components","content","illustrated-message"],"filename":"03-components/content/illustrated-message/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"Image","description":"Mit der Image-Komponente können Bilder angezeigt werden."},"scope":{}},"examples":{"default":"import Image from \"@mittwald/flow-react-components/Image\";\n\n<Image\n  src=\"https://cdn.shopify.com/s/files/1/2022/6883/products/IMG_2002_250x250@2x.JPG?v=1538235544\"\n  alt=\"Gopher\"\n  width={200}\n/>;\n"},"slugs":["03-components","content","image"],"filename":"03-components/content/image/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"InlineCode","description":"InlineCode wird verwendet, um Code innerhalb eines Textes anzuzeigen."},"scope":{}},"examples":{"default":"import Text from \"@mittwald/flow-react-components/Text\";\nimport InlineCode from \"@mittwald/flow-react-components/InlineCode\";\n\n<Text>\n  Gib <InlineCode>yarn start</InlineCode> ein um deine App\n  zu starten.\n</Text>;\n"},"slugs":["03-components","content","inline-code"],"filename":"03-components/content/inline-code/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"Label","description":"Ein Label dient der Beschreibung eines Elements, und wird beispielsweise für Formularfelder oder in LabeledValues verwendet."},"scope":{}},"examples":{"default":"import Label from \"@mittwald/flow-react-components/Label\";\n\n<Label>Das ist ein Label</Label>;\n"},"slugs":["03-components","content","label"],"filename":"03-components/content/label/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"LabeledValue","description":"Ein LabeledValue zeigt eine Information mit einem Label an."},"scope":{}},"examples":{"copy-button":"import LabeledValue from \"@mittwald/flow-react-components/LabeledValue\";\nimport Label from \"@mittwald/flow-react-components/Label\";\nimport Content from \"@mittwald/flow-react-components/Content\";\nimport CopyButton from \"@mittwald/flow-react-components/CopyButton\";\n\n<LabeledValue>\n  <Label>Projekt ID</Label>\n  <Content>p-eWRhpRV</Content>\n  <CopyButton text=\"Projekt ID: p-eWRhpRV\" />\n</LabeledValue>;\n","default":"import LabeledValue from \"@mittwald/flow-react-components/LabeledValue\";\nimport Label from \"@mittwald/flow-react-components/Label\";\nimport Content from \"@mittwald/flow-react-components/Content\";\n\n<LabeledValue>\n  <Label>Speicherplatz</Label>\n  <Content>20 GB</Content>\n</LabeledValue>;\n","inline-code":"import LabeledValue from \"@mittwald/flow-react-components/LabeledValue\";\nimport Label from \"@mittwald/flow-react-components/Label\";\nimport InlineCode from \"@mittwald/flow-react-components/InlineCode\";\nimport CopyButton from \"@mittwald/flow-react-components/CopyButton\";\n\n<LabeledValue>\n  <Label>IP Adresse</Label>\n  <InlineCode>127.0.0.1</InlineCode>\n  <CopyButton text=\"127.0.0.1\" />\n</LabeledValue>;\n","link":"import LabeledValue from \"@mittwald/flow-react-components/LabeledValue\";\nimport Label from \"@mittwald/flow-react-components/Label\";\nimport Link from \"@mittwald/flow-react-components/Link\";\n\n<LabeledValue>\n  <Label>Domain</Label>\n  <Link>https://mittwald.de</Link>\n</LabeledValue>;\n"},"slugs":["03-components","content","labeled-value"],"filename":"03-components/content/labeled-value/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"Skeleton","description":"Das Skeleton kann als Platzhalter für Content im Ladezustand verwendet werden."},"scope":{}},"examples":{"custom-size":"import Skeleton from \"@mittwald/flow-react-components/Skeleton\";\n\n<Column>\n  <Skeleton style={{ height: \"100px\" }} />\n  <Skeleton\n    style={{\n      height: \"100px\",\n      width: \"100px\",\n      borderRadius: \"50%\",\n    }}\n  />\n</Column>;\n","default":"import Skeleton from \"@mittwald/flow-react-components/Skeleton\";\n\n<Skeleton />;\n"},"slugs":["03-components","content","skeleton"],"filename":"03-components/content/skeleton/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"Text","description":"Die Text-Komponente wird verwendet, um Texte zu gruppieren."},"scope":{}},"examples":{"default":"import Text from \"@mittwald/flow-react-components/Text\";\n\n<Text>Das ist ein Text</Text>;\n","emulateBoldWidth":"import Text from \"@mittwald/flow-react-components/Text\";\n\n<Column>\n  <Text\n    style={{ borderInline: \"2px solid red\" }}\n    emulateBoldWidth\n  >\n    Das ist ein Text\n  </Text>\n  <Text style={{ borderInline: \"2px solid red\" }}>\n    <strong>Das ist ein Text</strong>\n  </Text>\n</Column>;\n"},"slugs":["03-components","content","text"],"filename":"03-components/content/text/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"CheckboxButton","description":"Der CheckboxButton verhält sich wie eine Checkbox."},"scope":{}},"examples":{"default":"import CheckboxButton from \"@mittwald/flow-react-components/CheckboxButton\";\n\n<CheckboxButton>\n  Ich stimme den AGBs zu und bestätige, dass ich die\n  Datenschutzhinweise zur Kenntnis genommen habe.\n</CheckboxButton>;\n"},"slugs":["03-components","form-controls","checkbox-button"],"filename":"03-components/form-controls/checkbox-button/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"CheckboxGroup","description":"Die Checkbox Gruppe enthält eine logisch zusammenhängende Sammlung von Checkboxen"},"scope":{}},"examples":{"buttons":"import CheckboxButton from \"@mittwald/flow-react-components/CheckboxButton\";\nimport CheckboxGroup from \"@mittwald/flow-react-components/CheckboxGroup\";\nimport Label from \"@mittwald/flow-react-components/Label\";\n\n<CheckboxGroup>\n  <Label>Berechtigungen</Label>\n  <CheckboxButton value=\"read\">Lesen</CheckboxButton>\n  <CheckboxButton value=\"write\">Schreiben</CheckboxButton>\n</CheckboxGroup>;\n","customColumns":"import CheckboxButton from \"@mittwald/flow-react-components/CheckboxButton\";\nimport CheckboxGroup from \"@mittwald/flow-react-components/CheckboxGroup\";\nimport Label from \"@mittwald/flow-react-components/Label\";\n\n<CheckboxGroup l={[1, 1]} m={[1]}>\n  <Label>Berechtigungen</Label>\n  <CheckboxButton value=\"read\">Lesen</CheckboxButton>\n  <CheckboxButton value=\"write\">Schreiben</CheckboxButton>\n</CheckboxGroup>;\n","default":"import Checkbox from \"@mittwald/flow-react-components/Checkbox\";\nimport CheckboxGroup from \"@mittwald/flow-react-components/CheckboxGroup\";\nimport Label from \"@mittwald/flow-react-components/Label\";\n\n<CheckboxGroup>\n  <Label>Berechtigungen</Label>\n  <Checkbox value=\"read\">Lesen</Checkbox>\n  <Checkbox value=\"write\">Schreiben</Checkbox>\n</CheckboxGroup>;\n"},"slugs":["03-components","form-controls","checkbox-group"],"filename":"03-components/form-controls/checkbox-group/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"Checkbox","description":"Die Checkbox dient dazu einen Wert zu aus- oder abzuwählen."},"scope":{}},"examples":{"default":"import Checkbox from \"@mittwald/flow-react-components/Checkbox\";\n\n<Checkbox>\n  Ich stimme den AGBs zu und bestätige, dass ich die\n  Datenschutzhinweise zur Kenntnis genommen habe.\n</Checkbox>;\n","disabled":"import Checkbox from \"@mittwald/flow-react-components/Checkbox\";\n\n<Checkbox isDisabled>\n  Ich stimme den AGBs zu und bestätige, dass ich die\n  Datenschutzhinweise zur Kenntnis genommen habe.\n</Checkbox>;\n","indeterminated":"import Checkbox from \"@mittwald/flow-react-components/Checkbox\";\n\n<Checkbox isIndeterminate>\n  Ich stimme den AGBs zu und bestätige, dass ich die\n  Datenschutzhinweise zur Kenntnis genommen habe.\n</Checkbox>;\n"},"slugs":["03-components","form-controls","checkbox"],"filename":"03-components/form-controls/checkbox/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"Field","title":"Field (React Hook Form)","gitHubComponentPath":"integrations/react-hook-form/components/Field/Field.tsx","description":"Die Field Komponente \"verbindet\" Flow Eingabefelder mit React Hook Form."},"scope":{}},"examples":{"default":"import { useForm } from \"react-hook-form\";\nimport {\n  Field,\n  Form,\n} from \"@mittwald/flow-react-components/react-hook-form\";\nimport { TextField } from \"@mittwald/flow-react-components/TextField\";\nimport { Label } from \"@mittwald/flow-react-components/Label\";\nimport { FieldDescription } from \"@mittwald/flow-react-components/FieldDescription\";\n\nexport default () => {\n  interface Values {\n    name: string;\n  }\n  const form = useForm<Values>();\n\n  return (\n    <Form form={form} onSubmit={console.log}>\n      <Field\n        name=\"name\"\n        rules={{\n          required: \"The project name is required\",\n        }}\n      >\n        <TextField>\n          <Label>Name</Label>\n          <FieldDescription>\n            The name of the project\n          </FieldDescription>\n        </TextField>\n      </Field>\n    </Form>\n  );\n};\n","typed-field":"import { useForm } from \"react-hook-form\";\nimport {\n  Form,\n  typedField,\n} from \"@mittwald/flow-react-components/react-hook-form\";\nimport { TextField } from \"@mittwald/flow-react-components/TextField\";\nimport { Label } from \"@mittwald/flow-react-components/Label\";\n\nexport default () => {\n  interface Values {\n    myField: string;\n  }\n  const form = useForm<Values>();\n\n  // Only `myField` is allowed for name prop\n  const Field = typedField(form);\n\n  return (\n    <Form form={form} onSubmit={console.log}>\n      <Field name=\"myField\">\n        <TextField>\n          <Label>Name</Label>\n        </TextField>\n      </Field>\n    </Form>\n  );\n};\n"},"slugs":["03-components","form-controls","field-react-hook-form"],"filename":"03-components/form-controls/field-react-hook-form/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"Form","title":"Form (React Hook Form)","gitHubComponentPath":"integrations/react-hook-form/components/Form/Form.tsx","description":"Die Form Komponente gruppiert Form-Felder und bietet einen Callback für das Abschicken des Formulars an. Diese Komponente ist ausschließlich in Kombintation mit React Hook Form zu verwenden."},"scope":{}},"examples":{"default":"$11"},"slugs":["03-components","form-controls","form-react-hook-form"],"filename":"03-components/form-controls/form-react-hook-form/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"NumberField","description":"Das NumberField dient der Eingabe von Zahlen."},"scope":{}},"examples":{"default":"import NumberField from \"@mittwald/flow-react-components/NumberField\";\nimport Label from \"@mittwald/flow-react-components/Label\";\nimport FieldDescription from \"@mittwald/flow-react-components/FieldDescription\";\n\n<NumberField minValue={0} maxValue={100}>\n  <Label>Alter</Label>\n  <FieldDescription>Gib dein Alter ein</FieldDescription>\n</NumberField>;\n","disabled":"import NumberField from \"@mittwald/flow-react-components/NumberField\";\nimport Label from \"@mittwald/flow-react-components/Label\";\n\n<NumberField isDisabled>\n  <Label>Alter</Label>\n</NumberField>;\n","invalid":"import NumberField from \"@mittwald/flow-react-components/NumberField\";\nimport Label from \"@mittwald/flow-react-components/Label\";\nimport FieldError from \"@mittwald/flow-react-components/FieldError\";\n\n<NumberField isInvalid value={-1}>\n  <Label>Alter</Label>\n  <FieldError>Ungültige Eingabe</FieldError>\n</NumberField>;\n","required":"import NumberField from \"@mittwald/flow-react-components/NumberField\";\nimport Label from \"@mittwald/flow-react-components/Label\";\n\n<NumberField isRequired>\n  <Label>Alter</Label>\n</NumberField>;\n","unit":"import NumberField from \"@mittwald/flow-react-components/NumberField\";\nimport Label from \"@mittwald/flow-react-components/Label\";\n\n<NumberField\n  formatOptions={{\n    style: \"unit\",\n    unit: \"gigabyte\",\n  }}\n  defaultValue={12}\n>\n  <Label>Speicherplatz</Label>\n</NumberField>;\n"},"slugs":["03-components","form-controls","number-field"],"filename":"03-components/form-controls/number-field/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"RadioGroup","description":"Eine RadioGroup ist eine Liste von Optionen, von denen genau eine ausgewählt werden muss."},"scope":{}},"examples":{"buttons":"import Label from \"@mittwald/flow-react-components/Label\";\nimport RadioGroup, {\n  RadioButton,\n} from \"@mittwald/flow-react-components/RadioGroup\";\n\n<RadioGroup defaultValue=\"admin\">\n  <Label>Rolle</Label>\n  <RadioButton value=\"admin\">Administrator</RadioButton>\n  <RadioButton value=\"member\">Mitglied</RadioButton>\n  <RadioButton value=\"accountant\">Buchhalter</RadioButton>\n</RadioGroup>;\n","content":"import RadioGroup, {\n  RadioButton,\n} from \"@mittwald/flow-react-components/RadioGroup\";\nimport Text from \"@mittwald/flow-react-components/Text\";\nimport Content from \"@mittwald/flow-react-components/Content\";\n\n<RadioGroup defaultValue=\"domain\" aria-label=\"Domain\">\n  <RadioButton value=\"domain\">\n    <Text>Domain buchen</Text>\n    <Content>\n      Du hast eine Wunsch-Domain? Kein Problem wir helfen\n      dir die passende Domain für dich zu finden.\n    </Content>\n  </RadioButton>\n  <RadioButton value=\"virtualHost\">\n    <Text>Virtual Host einrichten</Text>\n    <Content>\n      Die Domain bleibt bei deinem bisherigen Anbieter, du\n      kannst sie aber für deine Website in unserem mStudio\n      verwenden.\n    </Content>\n  </RadioButton>\n  <RadioButton value=\"subdomain\">\n    <Text>Subdomain anlegen</Text>\n    <Content>\n      Eine Subdomain von einer bereits vorhandenen Domain\n      erstellen, um sie für dein Projekt zu verwenden.\n    </Content>\n  </RadioButton>\n</RadioGroup>;\n","customColumns":"import Label from \"@mittwald/flow-react-components/Label\";\nimport RadioGroup, {\n  RadioButton,\n} from \"@mittwald/flow-react-components/RadioGroup\";\n\n<RadioGroup\n  defaultValue=\"admin\"\n  s={[1, 1]}\n  m={[1, 1, 1]}\n  l={[1, 1, 1, 1]}\n>\n  <Label>Rolle</Label>\n  <RadioButton value=\"admin\">Administrator</RadioButton>\n  <RadioButton value=\"member\">Mitglied</RadioButton>\n  <RadioButton value=\"accountant\">Buchhalter</RadioButton>\n</RadioGroup>;\n","default":"import Label from \"@mittwald/flow-react-components/Label\";\nimport RadioGroup, {\n  Radio,\n} from \"@mittwald/flow-react-components/RadioGroup\";\n\n<RadioGroup defaultValue=\"admin\">\n  <Label>Rolle</Label>\n  <Radio value=\"admin\">Administrator</Radio>\n  <Radio value=\"member\">Mitglied</Radio>\n  <Radio value=\"accountant\">Buchhalter</Radio>\n</RadioGroup>;\n","segmented":"import Label from \"@mittwald/flow-react-components/Label\";\nimport RadioGroup, {\n  Radio,\n} from \"@mittwald/flow-react-components/RadioGroup\";\n\n<RadioGroup defaultValue=\"admin\" variant=\"segmented\">\n  <Label>Rolle</Label>\n  <Radio value=\"admin\">Administrator</Radio>\n  <Radio value=\"member\">Mitglied</Radio>\n  <Radio value=\"accountant\">Buchhalter</Radio>\n</RadioGroup>;\n"},"slugs":["03-components","form-controls","radio-group"],"filename":"03-components/form-controls/radio-group/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"Select","description":"Die Select-Komponente bietet eine Liste von Optionen an, von denen eine ausgewählt werden kann."},"scope":{}},"examples":{"default":"import Select, {\n  Option,\n} from \"@mittwald/flow-react-components/Select\";\nimport Label from \"@mittwald/flow-react-components/Label\";\n\n<Select>\n  <Label>App</Label>\n  <Option>WordPress</Option>\n  <Option>TYPO3</Option>\n  <Option>Contao</Option>\n  <Option>Drupal</Option>\n  <Option>Joomla!</Option>\n  <Option>Matomo</Option>\n</Select>;\n"},"slugs":["03-components","form-controls","select"],"filename":"03-components/form-controls/select/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"Slider","description":"Die Slider-Komponente dient zur Auswahl von Zahlenwerten innerhalb einer vorgegebenen Range."},"scope":{}},"examples":{"default":"import Label from \"@mittwald/flow-react-components/Label\";\nimport Slider from \"@mittwald/flow-react-components/Slider\";\n\n<Slider\n  formatOptions={{\n    style: \"unit\",\n    unit: \"gigabyte\",\n  }}\n  minValue={20}\n  maxValue={2000}\n  defaultValue={200}\n  step={20}\n  showInitialMarker\n>\n  <Label>Storage</Label>\n</Slider>;\n"},"slugs":["03-components","form-controls","slider"],"filename":"03-components/form-controls/slider/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"Switch","description":"Die Switch-Komponente stellt einen Schalter dar, mit dem eine Option aktiviert oder deaktiviert werden kann."},"scope":{}},"examples":{"default":"import Switch from \"@mittwald/flow-react-components/Switch\";\n\n<Switch defaultSelected>Autoresponder</Switch>;\n","disabled":"import Switch from \"@mittwald/flow-react-components/Switch\";\n\n<Switch isDisabled>Autoresponder</Switch>;\n","leading-label":"import Switch from \"@mittwald/flow-react-components/Switch\";\n\n<Switch labelPosition=\"leading\">Autoresponder</Switch>;\n"},"slugs":["03-components","form-controls","switch"],"filename":"03-components/form-controls/switch/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"TextArea","description":"Die Textarea dient zur Eingabe längerer Texte und stellt diese mehrzeilig dar."},"scope":{}},"examples":{"characterCount":"import Label from \"@mittwald/flow-react-components/Label\";\nimport TextArea from \"@mittwald/flow-react-components/TextArea\";\n\n<TextArea showCharacterCount maxLength={100}>\n  <Label>Nachricht</Label>\n</TextArea>;\n","default":"import Label from \"@mittwald/flow-react-components/Label\";\nimport FieldDescription from \"@mittwald/flow-react-components/FieldDescription\";\nimport TextArea from \"@mittwald/flow-react-components/TextArea\";\n\n<TextArea>\n  <Label>Public Key</Label>\n  <FieldDescription>Beginnt mit ssh-rsa</FieldDescription>\n</TextArea>;\n","disabled":"import Label from \"@mittwald/flow-react-components/Label\";\nimport TextArea from \"@mittwald/flow-react-components/TextArea\";\n\n<TextArea isDisabled>\n  <Label>Public Key</Label>\n</TextArea>;\n","invalid":"import Label from \"@mittwald/flow-react-components/Label\";\nimport TextArea from \"@mittwald/flow-react-components/TextArea\";\nimport FieldError from \"@mittwald/flow-react-components/FieldError\";\n\n<TextArea isInvalid defaultValue=\"hello\">\n  <Label>Public Key</Label>\n  <FieldError>Ungültiger Key</FieldError>\n</TextArea>;\n","required":"import Label from \"@mittwald/flow-react-components/Label\";\nimport TextArea from \"@mittwald/flow-react-components/TextArea\";\n\n<TextArea isRequired>\n  <Label>Public Key</Label>\n</TextArea>;\n"},"slugs":["03-components","form-controls","text-area"],"filename":"03-components/form-controls/text-area/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"TextField","description":"Ein TextField ermöglicht es dem Nutzer, Text über die Tastatur in ein User Interface einzugeben. Ein erforderliches Label und eine optionale FieldDescription unterstützen dabei, die Anforderungen an die Eingabe klar zu kommunizieren."},"scope":{}},"examples":{"characterCount":"import Label from \"@mittwald/flow-react-components/Label\";\nimport TextField from \"@mittwald/flow-react-components/TextField\";\n\n<TextField showCharacterCount maxLength={10}>\n  <Label>Benutzername</Label>\n</TextField>;\n","columnLayout":"import Label from \"@mittwald/flow-react-components/Label\";\nimport TextField from \"@mittwald/flow-react-components/TextField\";\nimport ColumnLayout from \"@mittwald/flow-react-components/ColumnLayout\";\n\n<ColumnLayout m={[1, 1]}>\n  <TextField isRequired>\n    <Label>Vorname</Label>\n  </TextField>\n  <TextField isRequired>\n    <Label>Nachname</Label>\n  </TextField>\n  <ColumnLayout s={[2, 1]}>\n    <TextField isRequired>\n      <Label>Straße</Label>\n    </TextField>\n    <TextField isRequired>\n      <Label>Hausnummer</Label>\n    </TextField>\n  </ColumnLayout>\n  <ColumnLayout s={[2, 1]}>\n    <TextField isRequired>\n      <Label>Stadt</Label>\n    </TextField>\n    <TextField isRequired>\n      <Label>PLZ</Label>\n    </TextField>\n  </ColumnLayout>\n  <TextField isRequired>\n    <Label>Land</Label>\n  </TextField>\n</ColumnLayout>;\n","default":"import Label from \"@mittwald/flow-react-components/Label\";\nimport TextField from \"@mittwald/flow-react-components/TextField\";\nimport FieldDescription from \"@mittwald/flow-react-components/FieldDescription\";\n\n<TextField>\n  <Label>URL</Label>\n  <FieldDescription>Beginnt mit https://</FieldDescription>\n</TextField>;\n","defaultValue":"import Label from \"@mittwald/flow-react-components/Label\";\nimport TextField from \"@mittwald/flow-react-components/TextField\";\n\n<TextField defaultValue=\"https://mittwald.de\">\n  <Label>URL</Label>\n</TextField>;\n","disabled":"import Label from \"@mittwald/flow-react-components/Label\";\nimport TextField from \"@mittwald/flow-react-components/TextField\";\n\n<TextField isDisabled>\n  <Label>URL</Label>\n</TextField>;\n","inputProps":"import Label from \"@mittwald/flow-react-components/Label\";\nimport TextField from \"@mittwald/flow-react-components/TextField\";\n\n<TextField name=\"email\" type=\"email\">\n  <Label>E-Mail</Label>\n</TextField>;\n","invalid":"import Label from \"@mittwald/flow-react-components/Label\";\nimport TextField from \"@mittwald/flow-react-components/TextField\";\nimport FieldError from \"@mittwald/flow-react-components/FieldError\";\n\n<TextField isInvalid defaultValue=\"hello\">\n  <Label>URL</Label>\n  <FieldError>Das ist keine URL</FieldError>\n</TextField>;\n","placeholder":"import Label from \"@mittwald/flow-react-components/Label\";\nimport TextField from \"@mittwald/flow-react-components/TextField\";\n\n<TextField placeholder=\"https://\">\n  <Label>URL</Label>\n</TextField>;\n","required":"import Label from \"@mittwald/flow-react-components/Label\";\nimport TextField from \"@mittwald/flow-react-components/TextField\";\nimport { ColumnLayout } from \"@mittwald/flow-react-components/ColumnLayout\";\n\n<ColumnLayout m={[1, 1]}>\n  <TextField isRequired>\n    <Label>URL</Label>\n  </TextField>\n  <TextField>\n    <Label>URL</Label>\n  </TextField>\n</ColumnLayout>;\n","withoutLabel":"import TextField from \"@mittwald/flow-react-components/TextField\";\nimport FieldDescription from \"@mittwald/flow-react-components/FieldDescription\";\n\n<TextField aria-label=\"URL\">\n  <FieldDescription>Beginnt mit https://</FieldDescription>\n</TextField>;\n"},"slugs":["03-components","form-controls","text-field"],"filename":"03-components/form-controls/text-field/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"Breadcrumb","description":"Die Breadcrumb zeigt die aktuelle Position in der Hierarchie der Website und bietet die Möglichkeit schnell zu höheren Navigationsebenen zu springen."},"scope":{}},"examples":{"dark":"import Breadcrumb from \"@mittwald/flow-react-components/Breadcrumb\";\nimport Link from \"@mittwald/flow-react-components/Link\";\n\n<Breadcrumb color=\"dark\">\n  <Link href=\"#\">Projekte</Link>\n  <Link href=\"#\">Apps</Link>\n  <Link href=\"#\">Meine App</Link>\n</Breadcrumb>;\n","default":"import Breadcrumb from \"@mittwald/flow-react-components/Breadcrumb\";\nimport Link from \"@mittwald/flow-react-components/Link\";\n\n<Breadcrumb>\n  <Link href=\"#\">Projekte</Link>\n  <Link href=\"#\">Apps</Link>\n  <Link href=\"#\">Meine App</Link>\n</Breadcrumb>;\n","light":"import Breadcrumb from \"@mittwald/flow-react-components/Breadcrumb\";\nimport Link from \"@mittwald/flow-react-components/Link\";\n\n<Breadcrumb color=\"light\">\n  <Link href=\"#\">Projekte</Link>\n  <Link href=\"#\">Apps</Link>\n  <Link href=\"#\">Meine App</Link>\n</Breadcrumb>;\n"},"slugs":["03-components","navigation","breadcrumb"],"filename":"03-components/navigation/breadcrumb/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"HeaderNavigation","description":"Bei der HeaderNavigation handelt es sich um eine horizontal dargestellte Navigation, die als Hauptnavigation einer Seite verwendet werden kann."},"scope":{}},"examples":{"contextMenu":"$12","dark":"import Link from \"@mittwald/flow-react-components/Link\";\nimport Button from \"@mittwald/flow-react-components/Button\";\nimport { IconSearch } from \"@mittwald/flow-react-components/Icons\";\nimport HeaderNavigation from \"@mittwald/flow-react-components/HeaderNavigation\";\n\n<HeaderNavigation\n  aria-label=\"Header navigation\"\n  color=\"dark\"\n>\n  <Link href=\"#\">Getting startet</Link>\n  <Link href=\"#\" aria-current=\"page\">\n    Components\n  </Link>\n  <Button>\n    <IconSearch />\n  </Button>\n</HeaderNavigation>;\n","default":"import Link from \"@mittwald/flow-react-components/Link\";\nimport Button from \"@mittwald/flow-react-components/Button\";\nimport { IconSearch } from \"@mittwald/flow-react-components/Icons\";\nimport HeaderNavigation from \"@mittwald/flow-react-components/HeaderNavigation\";\n\n<HeaderNavigation aria-label=\"Header navigation\">\n  <Link href=\"#\">Getting startet</Link>\n  <Link href=\"#\" aria-current=\"page\">\n    Komponenten\n  </Link>\n  <Button>\n    <IconSearch />\n  </Button>\n</HeaderNavigation>;\n","light":"import Link from \"@mittwald/flow-react-components/Link\";\nimport Button from \"@mittwald/flow-react-components/Button\";\nimport { IconSearch } from \"@mittwald/flow-react-components/Icons\";\nimport HeaderNavigation from \"@mittwald/flow-react-components/HeaderNavigation\";\n\n<HeaderNavigation\n  aria-label=\"Header navigation\"\n  color=\"light\"\n>\n  <Link href=\"#\">Getting startet</Link>\n  <Link href=\"#\" aria-current=\"page\">\n    Components\n  </Link>\n  <Button>\n    <IconSearch />\n  </Button>\n</HeaderNavigation>;\n"},"slugs":["03-components","navigation","header-navigation"],"filename":"03-components/navigation/header-navigation/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"Link","description":"Die Link-Komponente kann zur Navigation innerhalb der Seite oder zu externen Zielen genutzt werden."},"scope":{}},"examples":{"dark":"import Link from \"@mittwald/flow-react-components/Link\";\n\n<Link href=\"#\" color=\"dark\">\n  Zum Dashboard\n</Link>;\n","default":"import Link from \"@mittwald/flow-react-components/Link\";\n\n<Link href=\"#\">Zum Dashboard</Link>;\n","icon":"import Link from \"@mittwald/flow-react-components/Link\";\nimport { IconExternalLink } from \"@mittwald/flow-react-components/Icons\";\n\n<Link href=\"https://mittwald.de\">\n  mittwald.de\n  <IconExternalLink aria-label=\"external link\" />\n</Link>;\n","inline":"import Link from \"@mittwald/flow-react-components/Link\";\n\n<Link inline href=\"#\">\n  Inline link\n</Link>;\n","inlineText":"import Link from \"@mittwald/flow-react-components/Link\";\nimport Text from \"@mittwald/flow-react-components/Text\";\n\n<Text>\n  Sieh dir unser <Link href=\"#\">Onboarding</Link> an um\n  weitere Informationen zu erhalten.\n</Text>;\n","light":"import Link from \"@mittwald/flow-react-components/Link\";\n\n<Link href=\"#\" color=\"light\">\n  Zum Dashboard\n</Link>;\n"},"slugs":["03-components","navigation","link"],"filename":"03-components/navigation/link/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"Navigation","description":"Bei der Navigation handelt es sich um eine Liste von Links, die optional auch in Gruppen unterteilt werden kann."},"scope":{}},"examples":{"collapsable":"import Navigation, {\n  NavigationGroup,\n} from \"@mittwald/flow-react-components/Navigation\";\nimport Link from \"@mittwald/flow-react-components/Link\";\nimport Label from \"@mittwald/flow-react-components/Label\";\n\n<Navigation aria-label=\"Main navigation\">\n  <NavigationGroup collapsable>\n    <Label>Allgemein</Label>\n    <Link href=\"#\">Dashboard</Link>\n    <Link href=\"#\" aria-current=\"page\">\n      Performance\n    </Link>\n  </NavigationGroup>\n  <NavigationGroup collapsable>\n    <Label>Komponenten</Label>\n    <Link href=\"#\">Apps</Link>\n    <Link href=\"#\">Datenbanken</Link>\n    <Link href=\"#\">Domains</Link>\n  </NavigationGroup>\n</Navigation>;\n","default":"import Navigation from \"@mittwald/flow-react-components/Navigation\";\nimport Link from \"@mittwald/flow-react-components/Link\";\n\n<Navigation aria-label=\"Companies\">\n  <Link href=\"https://www.apple.com\">Apple</Link>\n  <Link href=\"https://www.mittwald.de\" aria-current=\"page\">\n    mittwald\n  </Link>\n  <Link href=\"https://www.adobe.com\">Adobe</Link>\n  <Link href=\"https://www.google.com\">Google</Link>\n</Navigation>;\n","groups":"import Navigation, {\n  NavigationGroup,\n} from \"@mittwald/flow-react-components/Navigation\";\nimport Link from \"@mittwald/flow-react-components/Link\";\nimport Label from \"@mittwald/flow-react-components/Label\";\n\n<Navigation aria-label=\"Main navigation\">\n  <NavigationGroup>\n    <Label>Allgemein</Label>\n    <Link href=\"#\">Dashboard</Link>\n    <Link href=\"#\" aria-current=\"page\">\n      Performance\n    </Link>\n  </NavigationGroup>\n  <NavigationGroup>\n    <Label>Komponenten</Label>\n    <Link href=\"#\">Apps</Link>\n    <Link href=\"#\">Datenbanken</Link>\n    <Link href=\"#\">Domains</Link>\n  </NavigationGroup>\n</Navigation>;\n","icons":"import Navigation from \"@mittwald/flow-react-components/Navigation\";\nimport Text from \"@mittwald/flow-react-components/Text\";\nimport {\n  IconCustomer,\n  IconProject,\n  IconServer,\n} from \"@mittwald/flow-react-components/Icons\";\nimport Link from \"@mittwald/flow-react-components/Link\";\n\n<Navigation aria-label=\"Main menu\">\n  <Link href=\"#\">\n    <IconCustomer />\n    <Text>Organisationen</Text>\n  </Link>\n  <Link href=\"#\" aria-current=\"page\">\n    <IconServer />\n    <Text>Server</Text>\n  </Link>\n  <Link href=\"#\">\n    <IconProject />\n    <Text>Projekte</Text>\n  </Link>\n</Navigation>;\n","separator":"import Navigation, {\n  NavigationGroup,\n} from \"@mittwald/flow-react-components/Navigation\";\nimport Link from \"@mittwald/flow-react-components/Link\";\nimport Label from \"@mittwald/flow-react-components/Label\";\nimport Separator from \"@mittwald/flow-react-components/Separator\";\n\n<Navigation aria-label=\"Main navigation\">\n  <NavigationGroup>\n    <Label>Allgemein</Label>\n    <Link href=\"#\">Dashboard</Link>\n    <Link href=\"#\" aria-current=\"page\">\n      Performance\n    </Link>\n  </NavigationGroup>\n\n  <Separator />\n\n  <NavigationGroup>\n    <Label>Komponenten</Label>\n    <Link href=\"#\">Apps</Link>\n    <Link href=\"#\">Datenbanken</Link>\n    <Link href=\"#\">Domains</Link>\n  </NavigationGroup>\n</Navigation>;\n"},"slugs":["03-components","navigation","navigation"],"filename":"03-components/navigation/navigation/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"Tabs","description":"Tabs erlauben dem Nutzer zwischen verschiedenen Inhaltsbereichen zu wechseln."},"scope":{}},"examples":{"collapsed":"import Tabs, {\n  Tab,\n  TabTitle,\n} from \"@mittwald/flow-react-components/Tabs\";\n\n<Tabs style={{ width: \"250px\" }}>\n  <Tab>\n    <TabTitle>Allgemein</TabTitle>\n    Allgemeiner Inhalt\n  </Tab>\n  <Tab id=\"storage\">\n    <TabTitle>Speicherplatz</TabTitle>\n    Speicherplatz Inhalt\n  </Tab>\n  <Tab>\n    <TabTitle>Spamschutz</TabTitle>\n    Spamschutz Inhalt\n  </Tab>\n</Tabs>;\n","content":"$13","default":"import Tabs, {\n  Tab,\n  TabTitle,\n} from \"@mittwald/flow-react-components/Tabs\";\n\n<Tabs>\n  <Tab>\n    <TabTitle>Allgemein</TabTitle>\n    Allgemeiner Inhalt\n  </Tab>\n  <Tab id=\"storage\">\n    <TabTitle>Speicherplatz</TabTitle>\n    Speicherplatz Inhalt\n  </Tab>\n  <Tab>\n    <TabTitle>Spamschutz</TabTitle>\n    Spamschutz Inhalt\n  </Tab>\n</Tabs>;\n","status":"import {\n  Tab,\n  Tabs,\n  TabTitle,\n} from \"@mittwald/flow-react-components/Tabs\";\nimport { InlineAlert } from \"@mittwald/flow-react-components/InlineAlert\";\nimport { Heading } from \"@mittwald/flow-react-components/Heading\";\nimport { StatusIcon } from \"@mittwald/flow-react-components/StatusIcon\";\n\n<Tabs>\n  <Tab>\n    <TabTitle>Allgemein</TabTitle>\n    Allgemeiner Inhalt\n  </Tab>\n  <Tab id=\"storage\">\n    <TabTitle>\n      Speicherplatz\n      <StatusIcon status=\"danger\" />\n    </TabTitle>\n    <InlineAlert status=\"danger\">\n      <Heading>Dein Speicherplatz ist voll</Heading>\n    </InlineAlert>\n  </Tab>\n  <Tab>\n    <TabTitle>Spamschutz</TabTitle>\n    Spamschutz Inhalt\n  </Tab>\n</Tabs>;\n"},"slugs":["03-components","navigation","tabs"],"filename":"03-components/navigation/tabs/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"ContextualHelp","description":"Die ContextualHelp zeigt zusätzliche Informationen in einem Overlay an. Sie wird über den Klick auf einen Button mit Info Icon getriggert."},"scope":{}},"examples":{"default":"import {\n  ContextualHelp,\n  ContextualHelpTrigger,\n} from \"@mittwald/flow-react-components/ContextualHelp\";\nimport { Heading } from \"@mittwald/flow-react-components/Heading\";\nimport { Text } from \"@mittwald/flow-react-components/Text\";\nimport { Link } from \"@mittwald/flow-react-components/Link\";\nimport { Button } from \"@mittwald/flow-react-components/Button\";\n\n<ContextualHelpTrigger>\n  <Button />\n\n  <ContextualHelp>\n    <Heading>Rechte & Rollen</Heading>\n    <Text>\n      Jedem Benutzer-Profil wird im mStudio je Projekt\n      und/oder Organisation eine Rolle zugewiesen. Das\n      ermöglicht dir ein ganz neues und modernes Arbeiten.\n    </Text>\n    <Link>Mehr erfahren</Link>\n  </ContextualHelp>\n</ContextualHelpTrigger>;\n"},"slugs":["03-components","overlays","contextual-help"],"filename":"03-components/overlays/contextual-help/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"Modal","description":"Benutze das Modal um Inhalte in einem Overlay über der eigentlichen Oberfläche anzuzeigen."},"scope":{}},"examples":{"default":"$14","offCanvas":"$15"},"slugs":["03-components","overlays","modal"],"filename":"03-components/overlays/modal/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"OffCanvas","description":"Das OffCanvas dient dazu Inhalte in einem seitlich angeordneten Overlay anzuzeigen. Es kann beispielsweise für mobile Navigation verwendet werden"},"scope":{}},"examples":{"default":"$16"},"slugs":["03-components","overlays","off-canvas"],"filename":"03-components/overlays/off-canvas/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"Tooltip","description":"Ein Tooltip zeigt dem Benutzer zusätzliche Informationen beim hovern an."},"scope":{}},"examples":{"default":"import Tooltip, {\n  TooltipTrigger,\n} from \"@mittwald/flow-react-components/Tooltip\";\nimport Button from \"@mittwald/flow-react-components/Button\";\nimport { IconCopy } from \"@mittwald/flow-react-components/Icons\";\n\n<TooltipTrigger>\n  <Button aria-label=\"Speichern\">\n    <IconCopy />\n  </Button>\n  <Tooltip>Speichern</Tooltip>\n</TooltipTrigger>;\n"},"slugs":["03-components","overlays","tooltip"],"filename":"03-components/overlays/tooltip/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"CounterBadge","description":"Das CounterBadge wird verwendet, um Veränderungen an einem Element, wie beispielsweise die Anzahl neuer Notifications, anzuzeigen."},"scope":{}},"examples":{"default":"import CounterBadge from \"@mittwald/flow-react-components/CounterBadge\";\n\n<CounterBadge count={5} />;\n","high-number":"import CounterBadge from \"@mittwald/flow-react-components/CounterBadge\";\n\n<CounterBadge count={120} />;\n","with-button":"import Button from \"@mittwald/flow-react-components/Button\";\nimport { IconNotification } from \"@mittwald/flow-react-components/Icons\";\nimport CounterBadge from \"@mittwald/flow-react-components/CounterBadge\";\n\n<Button aria-label=\"Benachrichtigungen: 7\">\n  <IconNotification />\n  <CounterBadge count={7} />\n</Button>;\n","without-content":"import CounterBadge from \"@mittwald/flow-react-components/CounterBadge\";\n\n<CounterBadge />;\n"},"slugs":["03-components","status","counter-label"],"filename":"03-components/status/counter-label/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"InlineAlert","description":"Der InlineAlert zeigt relevante Hinweise innerhalb des Contents an."},"scope":{}},"examples":{"default":"import InlineAlert from \"@mittwald/flow-react-components/InlineAlert\";\nimport Heading from \"@mittwald/flow-react-components/Heading\";\n\n<InlineAlert>\n  <Heading>E-Mail-Adresse wurde archiviert</Heading>\n</InlineAlert>;\n","status":"$17","with-content":"import InlineAlert from \"@mittwald/flow-react-components/InlineAlert\";\nimport Heading from \"@mittwald/flow-react-components/Heading\";\nimport Content from \"@mittwald/flow-react-components/Content\";\nimport Button from \"@mittwald/flow-react-components/Button\";\n\n<InlineAlert>\n  <Heading>E-Mail-Adresse wurde archiviert</Heading>\n  <Content>\n    Da deine Domain gelöscht wurde, wurde diese\n    E-Mail-Adresse archiviert. Um E-Mails empfangen und\n    senden zu können musst du die Adresse wieder umbenennen.\n    <Button>E-Mail-Adresse anpassen</Button>\n  </Content>\n</InlineAlert>;\n"},"slugs":["03-components","status","inline-alert"],"filename":"03-components/status/inline-alert/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"LoadingSpinner","description":"Der Loading Spinner zeigt an, dass sich ein Element oder eine Seite im Ladezustand befindet."},"scope":{}},"examples":{"default":"import LoadingSpinner from \"@mittwald/flow-react-components/LoadingSpinner\";\n\n<LoadingSpinner />;\n"},"slugs":["03-components","status","loading-spinner"],"filename":"03-components/status/loading-spinner/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"NotificationProvider","description":"Die NotificationProvider dient zur Anzeige und Steuerung von Notifications"},"scope":{}},"examples":{"auto-close":"import { Button } from \"@mittwald/flow-react-components/Button\";\nimport { Heading } from \"@mittwald/flow-react-components/Heading\";\nimport { Text } from \"@mittwald/flow-react-components/Text\";\nimport { useNotificationController } from \"@mittwald/flow-react-components/NotificationProvider\";\nimport { Notification } from \"@mittwald/flow-react-components/Notification\";\n\nexport default () => {\n  const controller = useNotificationController();\n\n  return (\n    <Button\n      onPress={() =>\n        controller.add(\n          <Notification\n            onClick={() => alert(\"Notification clicked\")}\n            status=\"warning\"\n            autoClose\n          >\n            <Heading>No SSL certificate</Heading>\n            <Text>\n              No SSL certificate could be issued for\n              examples.de.\n            </Text>\n          </Notification>,\n        )\n      }\n    >\n      Trigger Notification\n    </Button>\n  );\n};\n","default":"import { Button } from \"@mittwald/flow-react-components/Button\";\nimport { useNotificationController } from \"@mittwald/flow-react-components/NotificationProvider\";\nimport { Heading } from \"@mittwald/flow-react-components/Heading\";\nimport { Text } from \"@mittwald/flow-react-components/Text\";\nimport { Notification } from \"@mittwald/flow-react-components/Notification\";\n\nexport default () => {\n  const controller = useNotificationController();\n\n  return (\n    <Button\n      onPress={() =>\n        controller.add(\n          <Notification\n            onClick={() => alert(\"Notification clicked\")}\n            status=\"warning\"\n          >\n            <Heading>No SSL certificate</Heading>\n            <Text>\n              No SSL certificate could be issued for\n              examples.de.\n            </Text>\n          </Notification>,\n        )\n      }\n    >\n      Trigger Notification\n    </Button>\n  );\n};\n","provider":"import { NotificationProvider } from \"@mittwald/flow-react-components/NotificationProvider\";\n\n<NotificationProvider>Meine App</NotificationProvider>;\n"},"slugs":["03-components","status","notification-provider"],"filename":"03-components/status/notification-provider/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"Notification","description":"Die Notification dient dazu den User zu benachrichtigen, ohne dessen aktuelle Handlung zu unterbrechen."},"scope":{}},"examples":{"default":"import Heading from \"@mittwald/flow-react-components/Heading\";\nimport Text from \"@mittwald/flow-react-components/Text\";\nimport Notification from \"@mittwald/flow-react-components/Notification\";\n\n<Notification>\n  <Heading>E-Mail-Adresse archiviert</Heading>\n  <Text>\n    Die E-Mail-Adresse <b>example@mittwald.de</b> wurde\n    archiviert.\n  </Text>\n</Notification>;\n","status":"import Heading from \"@mittwald/flow-react-components/Heading\";\nimport Text from \"@mittwald/flow-react-components/Text\";\nimport Notification from \"@mittwald/flow-react-components/Notification\";\n\n<Row>\n  <Notification status=\"info\">\n    <Heading>E-Mail-Adresse archiviert</Heading>\n    <Text>\n      Die E-Mail-Adresse <b>example@mittwald.de</b> wurde\n      archiviert.\n    </Text>\n  </Notification>\n\n  <Notification status=\"warning\">\n    <Heading>Speicher fast voll</Heading>\n    <Text>\n      Der Speicherplatz im Projekt <b>My Project</b> ist zu\n      80% voll.\n    </Text>\n  </Notification>\n\n  <Notification status=\"danger\">\n    <Heading>Kein SSL-Zertifikat</Heading>\n    <Text>\n      Für <b>example.de</b> konnte kein SSL-Zertifikat\n      ausgestellt werden.\n    </Text>\n  </Notification>\n\n  <Notification status=\"success\">\n    <Heading>App installiert</Heading>\n    <Text>\n      Deine App <b>My WordPress</b> wurde erfolgreich\n      installiert.\n    </Text>\n  </Notification>\n</Row>;\n"},"slugs":["03-components","status","notification"],"filename":"03-components/status/notification/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"ProgressBar","description":"Die Progressbar zeigt an wie weit ein Vorgang fortgeschritten ist."},"scope":{}},"examples":{"default":"import ProgressBar from \"@mittwald/flow-react-components/ProgressBar\";\nimport Label from \"@mittwald/flow-react-components/Label\";\n\n<ProgressBar value={50}>\n  <Label>Speicher</Label>\n</ProgressBar>;\n","maxValue":"import ProgressBar from \"@mittwald/flow-react-components/ProgressBar\";\nimport Label from \"@mittwald/flow-react-components/Label\";\n\n<ProgressBar\n  showMaxValue\n  value={500}\n  maxValue={1000}\n  minValue={0}\n  formatOptions={{ style: \"unit\", unit: \"gigabyte\" }}\n>\n  <Label>Speicher</Label>\n</ProgressBar>;\n","small":"import ProgressBar from \"@mittwald/flow-react-components/ProgressBar\";\nimport Label from \"@mittwald/flow-react-components/Label\";\n\n<ProgressBar size=\"s\" value={50}>\n  <Label>Speicher</Label>\n</ProgressBar>;\n","status":"import ProgressBar from \"@mittwald/flow-react-components/ProgressBar\";\n\n<Row>\n  <ProgressBar value={50} status=\"info\">\n    Info\n  </ProgressBar>\n  <ProgressBar value={50} status=\"success\">\n    Success\n  </ProgressBar>\n  <ProgressBar value={70} status=\"warning\">\n    Warning\n  </ProgressBar>\n  <ProgressBar value={90} status=\"danger\">\n    Danger\n  </ProgressBar>\n</Row>;\n"},"slugs":["03-components","status","progress-bar"],"filename":"03-components/status/progress-bar/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"StatusBadge","description":"Der StatusBadge zeigt Informationen zum Zustand eines Elements."},"scope":{}},"examples":{"default":"import StatusBadge from \"@mittwald/flow-react-components/StatusBadge\";\n\n<StatusBadge>Archiviert</StatusBadge>;\n","status":"import StatusBadge from \"@mittwald/flow-react-components/StatusBadge\";\n\n<Row>\n  <StatusBadge status=\"info\">Archiviert</StatusBadge>\n  <StatusBadge status=\"success\">\n    Update erfolgreich\n  </StatusBadge>\n  <StatusBadge status=\"warning\">\n    Speicher fast voll\n  </StatusBadge>\n  <StatusBadge status=\"danger\">SSL fehlt</StatusBadge>\n</Row>;\n"},"slugs":["03-components","status","status-badge"],"filename":"03-components/status/status-badge/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"StatusIcon","description":"Das StatusIcon dient zur Veranschaulichung eines Status, beispielsweise in einem StatusBadge oder InlineAlert"},"scope":{}},"examples":{"default":"import StatusIcon from \"@mittwald/flow-react-components/StatusIcon\";\n\n<StatusIcon />;\n","status":"import StatusIcon from \"@mittwald/flow-react-components/StatusIcon\";\n\n<Row>\n  <StatusIcon status=\"info\" />\n  <StatusIcon status=\"success\" />\n  <StatusIcon status=\"warning\" />\n  <StatusIcon status=\"danger\" />\n</Row>;\n"},"slugs":["03-components","status","status-icon"],"filename":"03-components/status/status-icon/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"Accordion","description":"Das Accordion dient dazu Content-Bereiche ein- und auszublenden."},"scope":{}},"examples":{"default-expanded":"import Heading from \"@mittwald/flow-react-components/Heading\";\nimport Accordion from \"@mittwald/flow-react-components/Accordion\";\nimport Content from \"@mittwald/flow-react-components/Content\";\n\n<Accordion defaultExpanded>\n  <Heading>Accordion Titel</Heading>\n  <Content>Inhalt des Accordions</Content>\n</Accordion>;\n","default":"import Heading from \"@mittwald/flow-react-components/Heading\";\nimport Accordion from \"@mittwald/flow-react-components/Accordion\";\nimport Content from \"@mittwald/flow-react-components/Content\";\n\n<Accordion>\n  <Heading>Accordion Titel</Heading>\n  <Content>Inhalt des Accordions</Content>\n</Accordion>;\n","label":"import Accordion from \"@mittwald/flow-react-components/Accordion\";\nimport Content from \"@mittwald/flow-react-components/Content\";\nimport Label from \"@mittwald/flow-react-components/Label\";\n\n<Accordion>\n  <Label>Accordion Titel</Label>\n  <Content>Inhalt des Accordions</Content>\n</Accordion>;\n"},"slugs":["03-components","structure","accordion"],"filename":"03-components/structure/accordion/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true,\n    example: \"main\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"ColumnLayout","description":"Mit dem ColumnLayout kann Inhalt in Spalten unterteilt werden."},"scope":{}},"examples":{"custom-values":"import ColumnLayout from \"@mittwald/flow-react-components/ColumnLayout\";\nimport TextField from \"@mittwald/flow-react-components/TextField\";\nimport Label from \"@mittwald/flow-react-components/Label\";\n\n<ColumnLayout m={[2, 1]}>\n  <TextField>\n    <Label>Straße</Label>\n  </TextField>\n  <TextField>\n    <Label>Hausnummer</Label>\n  </TextField>\n</ColumnLayout>;\n","default":"import ColumnLayout from \"@mittwald/flow-react-components/ColumnLayout\";\nimport TextField from \"@mittwald/flow-react-components/TextField\";\nimport Label from \"@mittwald/flow-react-components/Label\";\n\n<ColumnLayout>\n  <TextField>\n    <Label>Vorname</Label>\n  </TextField>\n  <TextField>\n    <Label>Nachname</Label>\n  </TextField>\n  <TextField>\n    <Label>Straße</Label>\n  </TextField>\n  <TextField>\n    <Label>Hausnummer</Label>\n  </TextField>\n</ColumnLayout>;\n","main":"import ColumnLayout from \"@mittwald/flow-react-components/ColumnLayout\";\nimport TextField from \"@mittwald/flow-react-components/TextField\";\nimport Label from \"@mittwald/flow-react-components/Label\";\n\n<ColumnLayout s={[1, 1]}>\n  <TextField>\n    <Label>Vorname</Label>\n  </TextField>\n  <TextField>\n    <Label>Nachname</Label>\n  </TextField>\n</ColumnLayout>;\n"},"slugs":["03-components","structure","column-layout"],"filename":"03-components/structure/column-layout/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"LayoutCard","description":"Eine LayoutCard ist ein Struktur-Element, das mit beliebigem Inhalt gefüllt werden kann"},"scope":{}},"examples":{"default":"import LayoutCard from \"@mittwald/flow-react-components/LayoutCard\";\n\n<LayoutCard>Inhalt der Layout Card</LayoutCard>;\n"},"slugs":["03-components","structure","layout-card"],"filename":"03-components/structure/layout-card/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true,\n    example: \"main\",\n    zoom: 0.6\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"List","description":"Die List-Component stellt eine Liste von Elementen mit verschiedenen Informationen dar."},"scope":{}},"examples":{"default":"$18","main":"$19","withLink":"$1a"},"slugs":["03-components","structure","list"],"filename":"03-components/structure/list/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"Section","description":"Die Section dient der Unterteilung von Inhalten in verschiedene Abschnitte"},"scope":{}},"examples":{"default":"import Heading from \"@mittwald/flow-react-components/Heading\";\nimport Text from \"@mittwald/flow-react-components/Text\";\nimport Section from \"@mittwald/flow-react-components/Section\";\nimport Link from \"@mittwald/flow-react-components/Link\";\n\n<Section>\n  <Heading>Newsletter</Heading>\n  <Text>\n    Kommende Releases, neue Features und Tipps rund um dein\n    Hosting – wir bringen dir das Wichtigste in dein\n    Postfach. Abonniere unseren Newsletter und bleib auf dem\n    Laufenden.\n  </Text>\n  <Link href=\"#\">Newsletter abonnieren</Link>\n</Section>;\n","multiple":"$1b","status-badge":"import Heading from \"@mittwald/flow-react-components/Heading\";\nimport Text from \"@mittwald/flow-react-components/Text\";\nimport Section from \"@mittwald/flow-react-components/Section\";\nimport StatusBadge from \"@mittwald/flow-react-components/StatusBadge\";\nimport Header from \"@mittwald/flow-react-components/Header\";\n\n<Section>\n  <Header>\n    <Heading>Newsletter</Heading>\n    <StatusBadge>Subscribed</StatusBadge>\n  </Header>\n  <Text>\n    Kommende Releases, neue Features und Tipps rund um dein\n    Hosting – wir bringen dir das Wichtigste in dein\n    Postfach. Abonniere unseren Newsletter und bleib auf dem\n    Laufenden.\n  </Text>\n</Section>;\n","switch":"import Heading from \"@mittwald/flow-react-components/Heading\";\nimport Header from \"@mittwald/flow-react-components/Header\";\nimport Text from \"@mittwald/flow-react-components/Text\";\nimport Section from \"@mittwald/flow-react-components/Section\";\nimport Switch from \"@mittwald/flow-react-components/Switch\";\n\n<Section>\n  <Header>\n    <Heading>Newsletter</Heading>\n    <Switch>Abonnement</Switch>\n  </Header>\n  <Text>\n    Kommende Releases, neue Features und Tipps rund um dein\n    Hosting – wir bringen dir das Wichtigste in dein\n    Postfach. Abonniere unseren Newsletter und bleib auf dem\n    Laufenden.\n  </Text>\n</Section>;\n"},"slugs":["03-components","structure","section"],"filename":"03-components/structure/section/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"Separator","description":"A Separator is a horizontal line that separates content."},"scope":{}},"examples":{"default":"import Separator from \"@mittwald/flow-react-components/Separator\";\n\n<Separator />;\n"},"slugs":["03-components","structure","separator"],"filename":"03-components/structure/separator/index.mdx"},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true,\n    zoom: 0.6\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"Table","description":"Die Table Komponente stellt eine einfache Tabelle bereit, um Listen von Informationen anzuzeigen"},"scope":{}},"examples":{"default":"$1c"},"slugs":["03-components","structure","table"],"filename":"03-components/structure/table/index.mdx"}]}],["$","$L1d",null,{"className":"layout_mobileNavigation__1XY9K","children":["$","$L1e",null,{"children":["$","$L1f",null,{"children":[["$","$L20",null,{"color":"secondary","variant":"plain","children":["$","$L21",null,{}]}],["$","$L22",null,{"className":"layout_mobileNavigationOffCanvas__coBZM","children":[["$","$L23",null,{"children":"Menü"}],["$","$L24",null,{"children":[["$","$La",null,{"docs":[{"mdxSource":"$25","examples":"$29","slugs":"$2a","filename":"01-get-started/installation/index.mdx"},{"mdxSource":"$2b","examples":"$2f","slugs":"$30","filename":"01-get-started/stylesheet/index.mdx"},{"mdxSource":"$31","examples":"$35","slugs":"$36","filename":"02-foundations/content-guidelines/fehlermeldungen/index.mdx"},{"mdxSource":"$37","examples":"$3a","slugs":"$3b","filename":"03-components/actions/action-group/index.mdx"},{"mdxSource":"$3c","examples":"$3f","slugs":"$41","filename":"03-components/actions/action/index.mdx"},{"mdxSource":"$42","examples":"$45","slugs":"$46","filename":"03-components/actions/button/index.mdx"},{"mdxSource":"$47","examples":"$4a","slugs":"$4b","filename":"03-components/actions/context-menu/index.mdx"},{"mdxSource":"$4c","examples":"$4f","slugs":"$50","filename":"03-components/actions/copy-button/index.mdx"},{"mdxSource":"$51","examples":"$54","slugs":"$55","filename":"03-components/content/avatar/index.mdx"},{"mdxSource":"$56","examples":"$59","slugs":"$5a","filename":"03-components/content/heading/index.mdx"},{"mdxSource":"$5b","examples":"$5e","slugs":"$61","filename":"03-components/content/icon/index.mdx"},{"mdxSource":"$62","examples":"$65","slugs":"$66","filename":"03-components/content/illustrated-message/index.mdx"},{"mdxSource":"$67","examples":"$6a","slugs":"$6b","filename":"03-components/content/image/index.mdx"},{"mdxSource":"$6c","examples":"$6f","slugs":"$70","filename":"03-components/content/inline-code/index.mdx"},{"mdxSource":"$71","examples":"$74","slugs":"$75","filename":"03-components/content/label/index.mdx"},{"mdxSource":"$76","examples":"$79","slugs":"$7a","filename":"03-components/content/labeled-value/index.mdx"},{"mdxSource":"$7b","examples":"$7e","slugs":"$7f","filename":"03-components/content/skeleton/index.mdx"},{"mdxSource":"$80","examples":"$83","slugs":"$84","filename":"03-components/content/text/index.mdx"},{"mdxSource":"$85","examples":"$88","slugs":"$89","filename":"03-components/form-controls/checkbox-button/index.mdx"},{"mdxSource":"$8a","examples":"$8d","slugs":"$8e","filename":"03-components/form-controls/checkbox-group/index.mdx"},{"mdxSource":"$8f","examples":"$92","slugs":"$93","filename":"03-components/form-controls/checkbox/index.mdx"},{"mdxSource":"$94","examples":"$97","slugs":"$98","filename":"03-components/form-controls/field-react-hook-form/index.mdx"},{"mdxSource":"$99","examples":"$9c","slugs":"$9e","filename":"03-components/form-controls/form-react-hook-form/index.mdx"},{"mdxSource":"$9f","examples":"$a2","slugs":"$a3","filename":"03-components/form-controls/number-field/index.mdx"},{"mdxSource":"$a4","examples":"$a7","slugs":"$a8","filename":"03-components/form-controls/radio-group/index.mdx"},{"mdxSource":"$a9","examples":"$ac","slugs":"$ad","filename":"03-components/form-controls/select/index.mdx"},{"mdxSource":"$ae","examples":"$b1","slugs":"$b2","filename":"03-components/form-controls/slider/index.mdx"},{"mdxSource":"$b3","examples":"$b6","slugs":"$b7","filename":"03-components/form-controls/switch/index.mdx"},{"mdxSource":"$b8","examples":"$bb","slugs":"$bc","filename":"03-components/form-controls/text-area/index.mdx"},{"mdxSource":"$bd","examples":"$c0","slugs":"$c1","filename":"03-components/form-controls/text-field/index.mdx"},{"mdxSource":"$c2","examples":"$c5","slugs":"$c6","filename":"03-components/navigation/breadcrumb/index.mdx"},{"mdxSource":"$c7","examples":"$ca","slugs":"$cc","filename":"03-components/navigation/header-navigation/index.mdx"},{"mdxSource":"$cd","examples":"$d0","slugs":"$d1","filename":"03-components/navigation/link/index.mdx"},{"mdxSource":"$d2","examples":"$d5","slugs":"$d6","filename":"03-components/navigation/navigation/index.mdx"},{"mdxSource":"$d7","examples":"$da","slugs":"$dc","filename":"03-components/navigation/tabs/index.mdx"},{"mdxSource":"$dd","examples":"$e0","slugs":"$e1","filename":"03-components/overlays/contextual-help/index.mdx"},{"mdxSource":"$e2","examples":"$e5","slugs":"$e8","filename":"03-components/overlays/modal/index.mdx"},{"mdxSource":"$e9","examples":"$ec","slugs":"$ee","filename":"03-components/overlays/off-canvas/index.mdx"},{"mdxSource":"$ef","examples":"$f2","slugs":"$f3","filename":"03-components/overlays/tooltip/index.mdx"},{"mdxSource":"$f4","examples":"$f7","slugs":"$f8","filename":"03-components/status/counter-label/index.mdx"},{"mdxSource":"$f9","examples":"$fc","slugs":"$fe","filename":"03-components/status/inline-alert/index.mdx"},{"mdxSource":"$ff","examples":"$102","slugs":"$103","filename":"03-components/status/loading-spinner/index.mdx"},{"mdxSource":"$104","examples":"$107","slugs":"$108","filename":"03-components/status/notification-provider/index.mdx"},{"mdxSource":"$109","examples":"$10c","slugs":"$10d","filename":"03-components/status/notification/index.mdx"},{"mdxSource":"$10e","examples":"$111","slugs":"$112","filename":"03-components/status/progress-bar/index.mdx"},{"mdxSource":"$113","examples":"$116","slugs":"$117","filename":"03-components/status/status-badge/index.mdx"},{"mdxSource":"$118","examples":"$11b","slugs":"$11c","filename":"03-components/status/status-icon/index.mdx"},{"mdxSource":"$11d","examples":"$120","slugs":"$121","filename":"03-components/structure/accordion/index.mdx"},{"mdxSource":"$122","examples":"$125","slugs":"$126","filename":"03-components/structure/column-layout/index.mdx"},{"mdxSource":"$127","examples":"$12a","slugs":"$12b","filename":"03-components/structure/layout-card/index.mdx"},{"mdxSource":"$12c","examples":"$12f","slugs":"$133","filename":"03-components/structure/list/index.mdx"},{"mdxSource":"$134","examples":"$137","slugs":"$139","filename":"03-components/structure/section/index.mdx"},{"mdxSource":"$13a","examples":"$13d","slugs":"$13e","filename":"03-components/structure/separator/index.mdx"},{"mdxSource":"$13f","examples":"$142","slugs":"$144","filename":"03-components/structure/table/index.mdx"}]}],["$","$L145",null,{"docs":"$146"}]]}]]}]]}]}]}]]}],["$","div",null,{"className":"layout_center__e1uqg","children":[["$","$L17d",null,{"className":"layout_mainNavigation__zVTd_","children":["$","$L145",null,{"docs":[{"mdxSource":"$25","examples":"$29","slugs":"$2a","filename":"01-get-started/installation/index.mdx"},{"mdxSource":"$2b","examples":"$2f","slugs":"$30","filename":"01-get-started/stylesheet/index.mdx"},{"mdxSource":"$31","examples":"$35","slugs":"$36","filename":"02-foundations/content-guidelines/fehlermeldungen/index.mdx"},{"mdxSource":"$37","examples":"$3a","slugs":"$3b","filename":"03-components/actions/action-group/index.mdx"},{"mdxSource":"$3c","examples":"$3f","slugs":"$41","filename":"03-components/actions/action/index.mdx"},{"mdxSource":"$42","examples":"$45","slugs":"$46","filename":"03-components/actions/button/index.mdx"},{"mdxSource":"$47","examples":"$4a","slugs":"$4b","filename":"03-components/actions/context-menu/index.mdx"},{"mdxSource":"$4c","examples":"$4f","slugs":"$50","filename":"03-components/actions/copy-button/index.mdx"},{"mdxSource":"$51","examples":"$54","slugs":"$55","filename":"03-components/content/avatar/index.mdx"},{"mdxSource":"$56","examples":"$59","slugs":"$5a","filename":"03-components/content/heading/index.mdx"},{"mdxSource":"$5b","examples":"$5e","slugs":"$61","filename":"03-components/content/icon/index.mdx"},{"mdxSource":"$62","examples":"$65","slugs":"$66","filename":"03-components/content/illustrated-message/index.mdx"},{"mdxSource":"$67","examples":"$6a","slugs":"$6b","filename":"03-components/content/image/index.mdx"},{"mdxSource":"$6c","examples":"$6f","slugs":"$70","filename":"03-components/content/inline-code/index.mdx"},{"mdxSource":"$71","examples":"$74","slugs":"$75","filename":"03-components/content/label/index.mdx"},{"mdxSource":"$76","examples":"$79","slugs":"$7a","filename":"03-components/content/labeled-value/index.mdx"},{"mdxSource":"$7b","examples":"$7e","slugs":"$7f","filename":"03-components/content/skeleton/index.mdx"},{"mdxSource":"$80","examples":"$83","slugs":"$84","filename":"03-components/content/text/index.mdx"},{"mdxSource":"$85","examples":"$88","slugs":"$89","filename":"03-components/form-controls/checkbox-button/index.mdx"},{"mdxSource":"$8a","examples":"$8d","slugs":"$8e","filename":"03-components/form-controls/checkbox-group/index.mdx"},{"mdxSource":"$8f","examples":"$92","slugs":"$93","filename":"03-components/form-controls/checkbox/index.mdx"},{"mdxSource":"$94","examples":"$97","slugs":"$98","filename":"03-components/form-controls/field-react-hook-form/index.mdx"},{"mdxSource":"$99","examples":"$9c","slugs":"$9e","filename":"03-components/form-controls/form-react-hook-form/index.mdx"},{"mdxSource":"$9f","examples":"$a2","slugs":"$a3","filename":"03-components/form-controls/number-field/index.mdx"},{"mdxSource":"$a4","examples":"$a7","slugs":"$a8","filename":"03-components/form-controls/radio-group/index.mdx"},{"mdxSource":"$a9","examples":"$ac","slugs":"$ad","filename":"03-components/form-controls/select/index.mdx"},{"mdxSource":"$ae","examples":"$b1","slugs":"$b2","filename":"03-components/form-controls/slider/index.mdx"},{"mdxSource":"$b3","examples":"$b6","slugs":"$b7","filename":"03-components/form-controls/switch/index.mdx"},{"mdxSource":"$b8","examples":"$bb","slugs":"$bc","filename":"03-components/form-controls/text-area/index.mdx"},{"mdxSource":"$bd","examples":"$c0","slugs":"$c1","filename":"03-components/form-controls/text-field/index.mdx"},{"mdxSource":"$c2","examples":"$c5","slugs":"$c6","filename":"03-components/navigation/breadcrumb/index.mdx"},{"mdxSource":"$c7","examples":"$ca","slugs":"$cc","filename":"03-components/navigation/header-navigation/index.mdx"},{"mdxSource":"$cd","examples":"$d0","slugs":"$d1","filename":"03-components/navigation/link/index.mdx"},{"mdxSource":"$d2","examples":"$d5","slugs":"$d6","filename":"03-components/navigation/navigation/index.mdx"},{"mdxSource":"$d7","examples":"$da","slugs":"$dc","filename":"03-components/navigation/tabs/index.mdx"},{"mdxSource":"$dd","examples":"$e0","slugs":"$e1","filename":"03-components/overlays/contextual-help/index.mdx"},{"mdxSource":"$e2","examples":"$e5","slugs":"$e8","filename":"03-components/overlays/modal/index.mdx"},{"mdxSource":"$e9","examples":"$ec","slugs":"$ee","filename":"03-components/overlays/off-canvas/index.mdx"},{"mdxSource":"$ef","examples":"$f2","slugs":"$f3","filename":"03-components/overlays/tooltip/index.mdx"},{"mdxSource":"$f4","examples":"$f7","slugs":"$f8","filename":"03-components/status/counter-label/index.mdx"},{"mdxSource":"$f9","examples":"$fc","slugs":"$fe","filename":"03-components/status/inline-alert/index.mdx"},{"mdxSource":"$ff","examples":"$102","slugs":"$103","filename":"03-components/status/loading-spinner/index.mdx"},{"mdxSource":"$104","examples":"$107","slugs":"$108","filename":"03-components/status/notification-provider/index.mdx"},{"mdxSource":"$109","examples":"$10c","slugs":"$10d","filename":"03-components/status/notification/index.mdx"},{"mdxSource":"$10e","examples":"$111","slugs":"$112","filename":"03-components/status/progress-bar/index.mdx"},{"mdxSource":"$113","examples":"$116","slugs":"$117","filename":"03-components/status/status-badge/index.mdx"},{"mdxSource":"$118","examples":"$11b","slugs":"$11c","filename":"03-components/status/status-icon/index.mdx"},{"mdxSource":"$11d","examples":"$120","slugs":"$121","filename":"03-components/structure/accordion/index.mdx"},{"mdxSource":"$122","examples":"$125","slugs":"$126","filename":"03-components/structure/column-layout/index.mdx"},{"mdxSource":"$127","examples":"$12a","slugs":"$12b","filename":"03-components/structure/layout-card/index.mdx"},{"mdxSource":"$12c","examples":"$12f","slugs":"$133","filename":"03-components/structure/list/index.mdx"},{"mdxSource":"$134","examples":"$137","slugs":"$139","filename":"03-components/structure/section/index.mdx"},{"mdxSource":"$13a","examples":"$13d","slugs":"$13e","filename":"03-components/structure/separator/index.mdx"},{"mdxSource":"$13f","examples":"$142","slugs":"$144","filename":"03-components/structure/table/index.mdx"}]}]}],["$","main",null,{"className":"layout_main__30FUz","children":["$","$L17e",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L17f",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"styles":null}]}]]}]]}]}]}]}]
4:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"Flow – mittwald Design System"}],["$","link","3",{"rel":"icon","href":"/flow-previews/docs/close-context-menu-on-navigation/favicon.ico","type":"image/x-icon","sizes":"48x48"}]]
1:null
