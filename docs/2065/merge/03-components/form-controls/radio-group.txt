1:"$Sreact.fragment"
3:I[91908,[],""]
4:I[26818,[],""]
6:I[50721,[],"OutletBoundary"]
8:I[49820,[],"AsyncMetadataOutlet"]
a:I[50721,[],"ViewportBoundary"]
c:I[50721,[],"MetadataBoundary"]
d:"$Sreact.suspense"
f:I[24032,[],""]
:HL["/flow-previews/docs/2065/merge/_next/static/css/0156d7e11af7687b.css","style"]
:HL["/flow-previews/docs/2065/merge/_next/static/css/0e29e487bd1ede08.css","style"]
:HL["/flow-previews/docs/2065/merge/_next/static/css/ff6745c008722cd1.css","style"]
0:{"P":null,"b":"8CShb9M9H2FHegIXoUapv","p":"/flow-previews/docs/2065/merge","c":["","03-components","form-controls","radio-group"],"i":false,"f":[[["",{"children":["03-components",{"children":[["group","form-controls","d"],{"children":[["component","radio-group","d"],{"children":["__PAGE__",{}]}]}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/flow-previews/docs/2065/merge/_next/static/css/0156d7e11af7687b.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}],["$","link","1",{"rel":"stylesheet","href":"/flow-previews/docs/2065/merge/_next/static/css/0e29e487bd1ede08.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}],["$","link","2",{"rel":"stylesheet","href":"/flow-previews/docs/2065/merge/_next/static/css/ff6745c008722cd1.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],"$L2"]}],{"children":["03-components",["$","$1","c",{"children":[null,["$","$L3",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":[["group","form-controls","d"],["$","$1","c",{"children":[null,["$","$L3",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":[["component","radio-group","d"],["$","$1","c",{"children":[null,["$","$L3",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["__PAGE__",["$","$1","c",{"children":["$L5",null,["$","$L6",null,{"children":["$L7",["$","$L8",null,{"promise":"$@9"}]]}]]}],{},null,false]},null,false]},null,false]},null,false]},null,false],["$","$1","h",{"children":[null,[["$","$La",null,{"children":"$Lb"}],null],["$","$Lc",null,{"children":["$","div",null,{"hidden":true,"children":["$","$d",null,{"fallback":null,"children":"$Le"}]}]}]]}],false]],"m":"$undefined","G":["$f",[]],"s":false,"S":true}
5:E{"digest":"NEXT_REDIRECT;replace;/03-components/form-controls/radio-group/overview;307;"}
10:I[41,["275","static/chunks/56e56dd1-d9d740563edd70ac.js","7","static/chunks/7913f1fe-6480e0f0dbd677e5.js","348","static/chunks/b601c95a-a4479ee2bfef51a8.js","449","static/chunks/7d67aa13-a9505cfe119c0341.js","52","static/chunks/0f9dcbb3-d76ed7e94539a1ba.js","622","static/chunks/5707686f-b6185c31a2586637.js","685","static/chunks/685-03801d5b53342e0c.js","892","static/chunks/892-b5a5fe5cdfe2d955.js","504","static/chunks/504-d709365a7c02fc91.js","177","static/chunks/app/layout-856d70240384c0ce.js"],"RouterProvider"]
11:I[67905,["275","static/chunks/56e56dd1-d9d740563edd70ac.js","7","static/chunks/7913f1fe-6480e0f0dbd677e5.js","348","static/chunks/b601c95a-a4479ee2bfef51a8.js","449","static/chunks/7d67aa13-a9505cfe119c0341.js","52","static/chunks/0f9dcbb3-d76ed7e94539a1ba.js","622","static/chunks/5707686f-b6185c31a2586637.js","685","static/chunks/685-03801d5b53342e0c.js","892","static/chunks/892-b5a5fe5cdfe2d955.js","504","static/chunks/504-d709365a7c02fc91.js","177","static/chunks/app/layout-856d70240384c0ce.js"],"Matomo"]
12:I[56504,["275","static/chunks/56e56dd1-d9d740563edd70ac.js","7","static/chunks/7913f1fe-6480e0f0dbd677e5.js","348","static/chunks/b601c95a-a4479ee2bfef51a8.js","449","static/chunks/7d67aa13-a9505cfe119c0341.js","52","static/chunks/0f9dcbb3-d76ed7e94539a1ba.js","622","static/chunks/5707686f-b6185c31a2586637.js","685","static/chunks/685-03801d5b53342e0c.js","504","static/chunks/504-d709365a7c02fc91.js","974","static/chunks/app/page-691cf1f1ce0eb4dc.js"],"NotificationProvider"]
13:I[56504,["275","static/chunks/56e56dd1-d9d740563edd70ac.js","7","static/chunks/7913f1fe-6480e0f0dbd677e5.js","348","static/chunks/b601c95a-a4479ee2bfef51a8.js","449","static/chunks/7d67aa13-a9505cfe119c0341.js","52","static/chunks/0f9dcbb3-d76ed7e94539a1ba.js","622","static/chunks/5707686f-b6185c31a2586637.js","685","static/chunks/685-03801d5b53342e0c.js","504","static/chunks/504-d709365a7c02fc91.js","974","static/chunks/app/page-691cf1f1ce0eb4dc.js"],"Image"]
15:I[48224,["275","static/chunks/56e56dd1-d9d740563edd70ac.js","7","static/chunks/7913f1fe-6480e0f0dbd677e5.js","348","static/chunks/b601c95a-a4479ee2bfef51a8.js","449","static/chunks/7d67aa13-a9505cfe119c0341.js","52","static/chunks/0f9dcbb3-d76ed7e94539a1ba.js","622","static/chunks/5707686f-b6185c31a2586637.js","685","static/chunks/685-03801d5b53342e0c.js","892","static/chunks/892-b5a5fe5cdfe2d955.js","504","static/chunks/504-d709365a7c02fc91.js","177","static/chunks/app/layout-856d70240384c0ce.js"],"default"]
16:Tbc1,"use strict";
const {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];
const {useMDXComponents: _provideComponents} = arguments[0];
function _createMdxContent(props) {
  const _components = {
    code: "code",
    h1: "h1",
    hr: "hr",
    p: "p",
    pre: "pre",
    strong: "strong",
    ..._provideComponents(),
    ...props.components
  }, {Alert, Content, Heading} = _components;
  if (!Alert) _missingMdxReference("Alert", true);
  if (!Content) _missingMdxReference("Content", true);
  if (!Heading) _missingMdxReference("Heading", true);
  return _jsxs(_Fragment, {
    children: [_jsxs(Alert, {
      children: [_jsx(Heading, {
        children: "Hinweis zu frühem Entwicklungsstand und Stabilität"
      }), _jsx(Content, {
        children: _jsxs(_components.p, {
          children: ["Dieses Projekt befindet sich in einer ", _jsx(_components.strong, {
            children: "frühen Entwicklungsphase"
          }), ", weswegen\nwir keine Garantie zur Stabilität bieten können. Du kannst dieses Projekt\ndennoch gerne ausprobieren, verlasse dich aber bitte nicht darauf, dass die\naktuellen Inhalte in dieser Form bestehen bleiben. Wir freuen uns über jedes\nFeedback zum aktuellen Entwicklungsstand!"]
        })
      })]
    }), "\n", _jsx(_components.hr, {}), "\n", _jsx(_components.h1, {
      children: "Installation der Flow React Component Library"
    }), "\n", _jsxs(_components.p, {
      children: ["Die Flow React Component Library kann mit einem Package Manager wie ", _jsx(_components.code, {
        children: "npm"
      }), " or\n", _jsx(_components.code, {
        children: "yarn"
      }), " installiert werden."]
    }), "\n", _jsx(_components.pre, {
      children: _jsx(_components.code, {
        className: "language-shell",
        children: "yarn add @mittwald/flow-react-components\n"
      })
    }), "\n", _jsx(_components.p, {
      children: "Zur leichteren Verwaltung der Abhängigkeiten werden alle Komponenten innerhalb\ndiese Packages bereitgestellt."
    }), "\n", _jsx(_components.hr, {}), "\n", _jsx(_components.h1, {
      children: "Styles importieren"
    }), "\n", _jsx(_components.p, {
      children: "Um die Komponenten Styles zu verwenden, musst du das Stylesheet importieren.\nFüge diese Zeile zum Einstiegspunkt deines Projektes hinzu."
    }), "\n", _jsx(_components.pre, {
      children: _jsx(_components.code, {
        children: "import \"@mittwald/flow-react-components/all.css\";\n"
      })
    })]
  });
}
function MDXContent(props = {}) {
  const {wrapper: MDXLayout} = {
    ..._provideComponents(),
    ...props.components
  };
  return MDXLayout ? _jsx(MDXLayout, {
    ...props,
    children: _jsx(_createMdxContent, {
      ...props
    })
  }) : _createMdxContent(props);
}
return {
  default: MDXContent
};
function _missingMdxReference(id, component) {
  throw new Error("Expected " + (component ? "component" : "object") + " `" + id + "` to be defined: you likely forgot to import, pass, or provide it.");
}
17:T1866,"use strict";
const {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];
const {useMDXComponents: _provideComponents} = arguments[0];
function _createMdxContent(props) {
  const _components = {
    code: "code",
    h1: "h1",
    h2: "h2",
    h3: "h3",
    hr: "hr",
    p: "p",
    pre: "pre",
    strong: "strong",
    ..._provideComponents(),
    ...props.components
  }, {LiveCodeEditor} = _components;
  if (!LiveCodeEditor) _missingMdxReference("LiveCodeEditor", true);
  return _jsxs(_Fragment, {
    children: [_jsx(_components.p, {
      children: "Die Flow-Komponenten-Bibliotheken werden über ein gemeinsames Stylesheet, das\nauch für sich alleine verwendet werden kann, gestyled. Das kann nützlich sein,\nwenn du dein eigenes Framework verwendest, um Komponenten zu bauen, und dich\ndabei an die mittwald Styling Guidelines halten willst."
    }), "\n", _jsx(_components.p, {
      children: "Auf dieser Seite findest du alle Informationen darüber, wie du das Stylesheet\ninstallieren kannst und wie die Klassennamen strukturiert sind."
    }), "\n", _jsx(_components.hr, {}), "\n", _jsx(_components.h1, {
      children: "Installation des Standalone Stylesheets"
    }), "\n", _jsxs(_components.p, {
      children: ["Zum aktuellen Entwicklungsstand des Projektes kannst du das Stylesheet nur über\nNPM installieren. Die Flow-Stylesheet-Bibliothek kann über einen Package Manager\nwie ", _jsx(_components.code, {
        children: "npm"
      }), " or ", _jsx(_components.code, {
        children: "yarn"
      }), " installiert werden."]
    }), "\n", _jsx(_components.pre, {
      children: _jsx(_components.code, {
        children: "yarn add @mittwald/flow-stylesheet\n"
      })
    }), "\n", _jsx(_components.hr, {}), "\n", _jsx(_components.h1, {
      children: "Styles importieren"
    }), "\n", _jsx(_components.p, {
      children: "Um die Komponenten Styles zu verwenden, musst du das Stylesheet importieren.\nFüge diese Zeile zum Einstiegspunkt deines Projektes hinzu."
    }), "\n", _jsx(_components.pre, {
      children: _jsx(_components.code, {
        children: "import \"@mittwald/flow-stylesheet/css\";\n"
      })
    }), "\n", _jsx(_components.hr, {}), "\n", _jsx(_components.h1, {
      children: "Anwendung des Stylesheets"
    }), "\n", _jsx(_components.p, {
      children: "Um anfangen zu können, solltest du verstehen, wie die Klassennamen strukturiert\nsind. Die im Stylesheet bereitgestellten Klassennamen folgen einem konsistenten,\nkomponentenbasierten und leicht zu verstehendem Schema."
    }), "\n", _jsx(_components.hr, {}), "\n", _jsx(_components.h2, {
      children: "Generelle Klassennamen-Auszeichnungen"
    }), "\n", _jsxs(_components.p, {
      children: ["Alle Klassennamen sind in Lowercase geschrieben und benutzen ", _jsx(_components.code, {
        children: "-"
      }), " um Wörter zu\ntrennen und ", _jsx(_components.code, {
        children: "--"
      }), " um logische Abschnitte zu unterteilen."]
    }), "\n", _jsxs(_components.p, {
      children: ["Der erste logische Abschnitt ist immer der ", _jsx(_components.code, {
        children: "flow"
      }), " Namespace. Andere Abschnitte\nkönnten beispielsweise so aussehen:"]
    }), "\n", _jsx(_components.h3, {
      children: "Komponenten"
    }), "\n", _jsx(_components.pre, {
      children: _jsx(_components.code, {
        children: ".flow--button\n.flow--heading\n.flow--alert-icon\n"
      })
    }), "\n", _jsx(_components.h3, {
      children: "Sub-Komponenten"
    }), "\n", _jsx(_components.pre, {
      children: _jsx(_components.code, {
        children: ".flow--navigation\n.flow--navigation--navigation-item\n"
      })
    }), "\n", _jsx(_components.h3, {
      children: "Spezialisierung: Verschiedene Varianten"
    }), "\n", _jsx(_components.pre, {
      children: _jsx(_components.code, {
        children: ".flow--button--primary\n.flow--alert--danger\n.flow--icon--fixed-width\n"
      })
    }), "\n", _jsx(_components.h3, {
      children: "Spezialisierung: In einer Komposition verwendete Komponenten"
    }), "\n", _jsx(_components.pre, {
      children: _jsx(_components.code, {
        children: ".flow--button--icon\n.flow--alert--heading\n"
      })
    }), "\n", _jsx(_components.hr, {}), "\n", _jsx(_components.h2, {
      children: "Ein Hinweis zur Spezialisierung"
    }), "\n", _jsxs(_components.p, {
      children: ["Klassennamen die verwendet werden, um die Basiskomponente zu spezialisieren,\nmüssen immer ", _jsx(_components.strong, {
        children: "zusätzlich zum Basis-Klassennamen"
      }), " verwendet werden."]
    }), "\n", _jsx(_components.p, {
      children: "Hier ein paar Beispiele um die diese Anforderung zu verdeutlichen:"
    }), "\n", _jsx(LiveCodeEditor, {
      example: "variants"
    }), "\n", _jsx(_components.h3, {
      children: "Kombinierte Varianten"
    }), "\n", _jsx(LiveCodeEditor, {
      example: "multiple-variants"
    }), "\n", _jsx(_components.h3, {
      children: "In einer Komposition verwendete Komponenten"
    }), "\n", _jsxs(_components.p, {
      children: ["Es ist gängige Praxis, größere Komponenten aus bereits bestehenden kleineren\nKomponenten zusammenzusetzen. Der Alert besteht beispielsweise aus einem Icon,\neiner Heading und optionalem Inhalt. Die verwendeten Komponenten müssen ihren\nBasis-Klassennamen für das grundsätzliche Styling erhalten (", _jsx(_components.code, {
        children: "flow--heading"
      }), "),\nsowie den spezialisierten Klassennamen (", _jsx(_components.code, {
        children: "flow--alert--heading"
      }), "), um spezifische\nStyles des Inline Alerts zu erhalten."]
    }), "\n", _jsx(LiveCodeEditor, {
      example: "composition"
    })]
  });
}
function MDXContent(props = {}) {
  const {wrapper: MDXLayout} = {
    ..._provideComponents(),
    ...props.components
  };
  return MDXLayout ? _jsx(MDXLayout, {
    ...props,
    children: _jsx(_createMdxContent, {
      ...props
    })
  }) : _createMdxContent(props);
}
return {
  default: MDXContent
};
function _missingMdxReference(id, component) {
  throw new Error("Expected " + (component ? "component" : "object") + " `" + id + "` to be defined: you likely forgot to import, pass, or provide it.");
}
18:T75b,export default () => {
  const styles: Record<string, React.CSSProperties> = {
    layoutContainer: {
      display: "grid",
      gridTemplateAreas: `
        'header header'
        'nav content'
      `,
      gridTemplateColumns: "90px 1fr",
      gridTemplateRows: "auto 1fr",
      gap: "10px",
      border: "1px solid rgba(206, 75, 255, 1)",
      borderRadius: "4px",
      padding: "10px",
    },
    header: {
      gridArea: "header",
      backgroundColor: "rgba(0, 84, 245, 0.02)",
      padding: "10px",
      textAlign: "center",
      border: "1px dashed rgba(0, 84, 245, 1)",
      borderRadius: "4px",
    },
    sideNavigation: {
      gridArea: "nav",
      backgroundColor: "rgba(0, 84, 245, 0.02)",
      display: "flex",
      justifyContent: "center",
      padding: "55px 10px",
      border: "1px dashed rgba(0, 84, 245, 1)",
      borderRadius: "4px",
      width: "90px",
    },
    verticalText: {
      writingMode: "vertical-rl",
      transform: "rotate(180deg)",
    },
    content: {
      gridArea: "content",
      backgroundColor: "rgba(0, 84, 245, 0.02)",
      display: "flex",
      justifyContent: "center",
      alignItems: "center",
      padding: "10px",
      border: "1px dashed rgba(0, 84, 245, 1)",
      borderRadius: "4px",
    },
    textStyle: {
      color: "rgba(0, 63, 184, 1)",
      fontWeight: "400",
      fontSize: "14px",
    },
  };

  return (
    <div style={styles.layoutContainer}>
      <header style={styles.header}>
        <p style={styles.textStyle}>Header</p>
      </header>
      <nav style={styles.sideNavigation}>
        <p
          style={{
            ...styles.verticalText,
            ...styles.textStyle,
          }}
        >
          Side-Navigation
        </p>
      </nav>
      <main style={styles.content}>
        <p style={styles.textStyle}>Content</p>
      </main>
    </div>
  );
};
19:T1011,export default () => {
  const styles: Record<string, React.CSSProperties> = {
    rootContainer: {
      display: "flex",
      flexDirection: "column",
      gap: "10px",
      border: "1px solid rgba(206, 75, 255, 1)",
      borderRadius: "4px",
      padding: "10px",
    },
    headerContainer: {
      display: "grid",
      gridTemplateAreas: `
        'logo header header'
      `,
      gridTemplateColumns: "60px 1fr 1fr",
      gap: "10px",
    },
    layoutContainer: {
      display: "grid",
      gridTemplateAreas: `
        'primaryNav secondaryNav breadcrumb breadcrumb'
        'primaryNav secondaryNav pageTitle button'
        'primaryNav secondaryNav content content'
      `,
      gridTemplateColumns: "30px 60px 1fr",
      gridTemplateRows: "auto auto 1fr",
      gap: "10px",
    },
    logo: {
      gridArea: "logo",
      backgroundColor: "rgba(0, 84, 245, 0.02)",
      padding: "10px",
      border: "1px dashed rgba(0, 84, 245, 1)",
      borderRadius: "4px",
      display: "flex",
      justifyContent: "center",
      alignItems: "center",
    },
    header: {
      gridArea: "header",
      backgroundColor: "rgba(0, 84, 245, 0.02)",
      padding: "10px",
      textAlign: "center",
      border: "1px dashed rgba(0, 84, 245, 1)",
      borderRadius: "4px",
    },
    primaryNav: {
      gridArea: "primaryNav",
      backgroundColor: "rgba(0, 84, 245, 0.02)",
      display: "flex",
      justifyContent: "center",
      alignItems: "center",
      padding: "38px 0px",
      border: "1px dashed rgba(0, 84, 245, 1)",
      borderRadius: "4px",
      writingMode: "vertical-rl",
      transform: "rotate(180deg)",
    },
    secondaryNav: {
      gridArea: "secondaryNav",
      backgroundColor: "rgba(0, 84, 245, 0.02)",
      display: "flex",
      justifyContent: "center",
      alignItems: "center",
      padding: "38px 0px",
      border: "1px dashed rgba(0, 84, 245, 1)",
      borderRadius: "4px",
      writingMode: "vertical-rl",
      transform: "rotate(180deg)",
    },
    breadcrumb: {
      gridArea: "breadcrumb",
      backgroundColor: "rgba(0, 84, 245, 0.02)",
      textAlign: "center",
      border: "1px dashed rgba(0, 84, 245, 1)",
      borderRadius: "4px",
    },
    pageTitle: {
      gridArea: "pageTitle",
      backgroundColor: "rgba(0, 84, 245, 0.02)",
      textAlign: "center",
      border: "1px dashed rgba(0, 84, 245, 1)",
      borderRadius: "4px",
    },
    button: {
      gridArea: "button",
      backgroundColor: "rgba(0, 84, 245, 0.02)",
      padding: "0px 5px",
      textAlign: "center",
      border: "1px dashed rgba(0, 84, 245, 1)",
      borderRadius: "4px",
    },
    content: {
      gridArea: "content",
      backgroundColor: "rgba(0, 84, 245, 0.02)",
      display: "flex",
      justifyContent: "center",
      alignItems: "center",
      padding: "10px",
      border: "1px dashed rgba(0, 84, 245, 1)",
      borderRadius: "4px",
    },
    textStyle: {
      color: "rgba(0, 63, 184, 1)",
      fontWeight: "400",
      fontSize: "14px",
    },
  };

  return (
    <div style={styles.rootContainer}>
      <div style={styles.headerContainer}>
        <div style={styles.logo}>
          <p style={styles.textStyle}>Logo</p>
        </div>
        <header style={styles.header}>
          <p style={styles.textStyle}>Header</p>
        </header>
      </div>
      <div style={styles.layoutContainer}>
        <nav style={styles.primaryNav}>
          <p style={styles.textStyle}>Primary Navigation</p>
        </nav>
        <nav style={styles.secondaryNav}>
          <p style={styles.textStyle}>
            Secondary Navigation
          </p>
        </nav>
        <div style={styles.breadcrumb}>
          <p style={styles.textStyle}>Breadcrumb</p>
        </div>
        <div style={styles.pageTitle}>
          <p style={styles.textStyle}>Page Title</p>
        </div>
        <div style={styles.button}>
          <p style={styles.textStyle}>Button</p>
        </div>
        <main style={styles.content}>
          <p style={styles.textStyle}>Content</p>
        </main>
      </div>
    </div>
  );
};
1a:Tad5,import {
  AccentBox,
  Breadcrumb,
  Button,
  ColumnLayout,
  Flex,
  Header,
  Heading,
  Icon,
  LayoutCard,
  Link,
  Section,
  Text,
} from "@mittwald/flow-react-components";
import { IconHeartHandshake } from "@tabler/icons-react";

export default () => {
  return (
    <ColumnLayout l={[1]} m={[1]}>
      <Flex direction="column" gap="xs">
        <Breadcrumb color="light">
          <Link href="#">Organisation</Link>
          <Link href="#">Dashboard</Link>
        </Breadcrumb>
        <Heading color="light" level={1}>
          Dashboard
        </Heading>
      </Flex>
      <ColumnLayout l={[1, 1]} m={[1]}>
        <LayoutCard>
          <Section>
            <Header>
              <Heading>Vertragspartner</Heading>
              <Button
                onPress={() => alert("not implemented")}
                color="secondary"
                variant="soft"
              >
                Bearbeiten
              </Button>
            </Header>
            <Text>
              Mittwald CM Service GmbH & Co.KG
              <br />
              Max Mustermann
              <br />
              Königsberger Straße 4-6, 32339 Espelkamp
              <br />
              mittwald@mittwald.de
              <br />
              +49 1234 5678910
            </Text>
          </Section>
        </LayoutCard>
        <LayoutCard>
          <Section>
            <Header>
              <Heading>Rechnungsempfänger</Heading>
              <Button
                onPress={() => alert("not implemented")}
                color="secondary"
                variant="soft"
              >
                Bearbeiten
              </Button>
            </Header>
            <Text>
              <b>Rechnung</b>
            </Text>
            <Text>
              Max Mustermann
              <br />
              Königsberger Straße 4-6, 32339 Espelkamp
              <br />
              mittwald@mittwald.de
              <br />
              +49 1234 5678910
            </Text>
          </Section>
        </LayoutCard>
      </ColumnLayout>
      <LayoutCard>
        <AccentBox>
          <Icon>
            <IconHeartHandshake />
          </Icon>
          <Section>
            <Heading>
              Entwickle deine eigene Extension
            </Heading>
            <Text>
              Du hast Lust als Organisation deine eigene
              Extension zu bauen und sie der Community
              bereitzustellen? Du hast vorab noch Fragen
              rund um die Contribution? Lass uns drüber
              quatschen.
            </Text>
            <Link href="#" target="_blank">
              Contributor werden
            </Link>
          </Section>
        </AccentBox>
      </LayoutCard>
    </ColumnLayout>
  );
};
1b:T16e9,import {
  AlertBadge,
  Avatar,
  Button,
  ColumnLayout,
  Content,
  Flex,
  Header,
  Heading,
  IconCheck,
  IconEmail,
  Image,
  LayoutCard,
  Link,
  Section,
  Text,
  typedList,
} from "@mittwald/flow-react-components";

export default () => {
  const List = typedList<{
    title: string;
    date: string;
    status?: "info" | "warning" | "danger";
    isInvite?: boolean;
  }>();

  return (
    <ColumnLayout l={[1]} m={[1]}>
      <Heading color="light" level={1}>
        Hey Max!
      </Heading>
      <ColumnLayout m={[1]} l={[3, 2]}>
        <ColumnLayout l={[1]} m={[1]}>
          <LayoutCard>
            <Section>
              <Header>
                <Heading>Benachrichtigungen</Heading>
                <Button
                  onPress={() => alert("not implemented")}
                  variant="soft"
                  color="secondary"
                >
                  Alle anzeigen
                </Button>
              </Header>
              <List.List
                hidePagination
                onAction={() => alert("not implemented")}
              >
                <List.StaticData
                  data={[
                    {
                      title:
                        "Projekteinladung: „Mein Projekt“",
                      date: "10.03.2025, 09:42 Uhr",
                      isInvite: true,
                    },
                    {
                      title:
                        "E-Mail-Empfang wurde deaktiviert",
                      date: "15.05.2025, 10:33 Uhr",
                      status: "danger",
                    },
                    {
                      title:
                        "E-Mail-Versand wurde gesperrt",
                      date: "15.05.2025, 10:33 Uhr",
                      status: "warning",
                    },
                    {
                      title: "Ticket wurde beantwortet",
                      date: "16.05.2025, 16:33 Uhr",
                      status: "info",
                    },
                  ]}
                />
                <List.Item textValue={(i) => i.title}>
                  {(i) => (
                    <List.ItemView>
                      {i.isInvite ? (
                        <Avatar>
                          <IconEmail />
                        </Avatar>
                      ) : (
                        <Avatar status={i.status} />
                      )}
                      <Heading>{i.title}</Heading>
                      <Text>{i.date}</Text>
                      <Content>
                        {i.isInvite ? (
                          <Button
                            onPress={() =>
                              alert("not implemented")
                            }
                            variant="soft"
                            color="secondary"
                          >
                            Öffnen
                          </Button>
                        ) : (
                          <Button
                            onPress={() =>
                              alert("not implemented")
                            }
                            aria-label="Erledigt"
                            variant="plain"
                            color="secondary"
                          >
                            <IconCheck />
                          </Button>
                        )}
                      </Content>
                    </List.ItemView>
                  )}
                </List.Item>
              </List.List>
            </Section>
          </LayoutCard>

          <LayoutCard>
            <ColumnLayout m={[1, 3]} s={[null, 1]}>
              <Flex align="center" grow>
                <Image
                  src="https://mittwald.github.io/flow/assets/onboarding.png"
                  alt=""
                  aria-hidden
                />
              </Flex>
              <Section>
                <Heading>mStudio entdecken</Heading>
                <Text>
                  Du willst das Beste aus deinen Projekten
                  herausholen? Unsere{" "}
                  <Link href="#">Wissensdatenbank</Link>{" "}
                  hilft dir dabei, das mStudio und seine
                  Möglichkeiten besser kennenzulernen.
                </Text>
              </Section>
            </ColumnLayout>
          </LayoutCard>
        </ColumnLayout>

        <ColumnLayout l={[1]} m={[1]}>
          <LayoutCard>
            <Section>
              <Heading>
                Status
                <AlertBadge status="success">
                  Alle Systeme funktionieren
                </AlertBadge>
              </Heading>
              <Text>
                Das mStudio und alle dazugehörenden Systeme
                laufen einwandfrei.
              </Text>
              <Link target="_blank" href="#">
                Zur Statusseite
              </Link>
            </Section>
          </LayoutCard>

          <LayoutCard>
            <Section>
              <Heading>Neues aus dem Blog</Heading>
              <Image
                src="https://mittwald.github.io/flow/assets/blog.png"
                alt=""
                aria-hidden
              />

              <Heading level={3}>
                Zukunft pflanzen – mittwald unterstützt 8000
                m² Aufforstung für den Klimaschutz
              </Heading>
              <Text>
                Nachhaltigkeitsmanager Marvin von mittwald
                berichtet über ein regionales
                Aufforstungsprojekt mit 8.000 m² neuem Wald.
              </Text>
              <Link href="#" target="_blank">
                Zum Blogartikel
              </Link>
            </Section>
          </LayoutCard>
        </ColumnLayout>
      </ColumnLayout>
    </ColumnLayout>
  );
};
1c:Te19,import {
  Breadcrumb,
  ColumnLayout,
  DonutChart,
  Flex,
  Header,
  Heading,
  Label,
  LabeledValue,
  LayoutCard,
  Link,
  ProgressBar,
  Section,
  Text,
} from "@mittwald/flow-react-components";

export default () => {
  return (
    <ColumnLayout l={[1]} m={[1]}>
      <Flex direction="column" gap="xs">
        <Breadcrumb color="light">
          <Link href="#">Projekt</Link>
          <Link href="#">Dashboard</Link>
        </Breadcrumb>
        <Heading color="light" level={1}>
          Dashboard
        </Heading>
      </Flex>
      <LayoutCard>
        <Section>
          <Heading>Projektdetails</Heading>
          <ColumnLayout>
            <LabeledValue>
              <Label>Short-ID</Label>
              <Text>p12345</Text>
            </LabeledValue>
            <LabeledValue>
              <Label>Server</Label>
              <Link href="#">Mein Server</Link>
            </LabeledValue>
          </ColumnLayout>
        </Section>
      </LayoutCard>
      <ColumnLayout l={[1, 1]} m={[1]}>
        <LayoutCard>
          <Section>
            <Header>
              <Heading>vCPU Auslastung</Heading>
              <Link href="#">Details</Link>
            </Header>
            <Flex
              columnGap="l"
              grow
              justify="center"
              rowGap="m"
              wrap="wrap"
            >
              <DonutChart
                aria-label="vCPU Auslastung"
                status="success"
                value={43}
              >
                <b>43 %</b>
              </DonutChart>
              <Flex direction="column" grow rowGap="m">
                <LabeledValue>
                  <Label>Messzeitpunkt</Label>
                  <Text>05.09.2025, 07:30 Uhr</Text>
                </LabeledValue>
                <LabeledValue>
                  <Label>Maximum (Letzte 7 Tage)</Label>
                  <Text>67 %</Text>
                </LabeledValue>
              </Flex>
            </Flex>
          </Section>
        </LayoutCard>
        <LayoutCard>
          <Section>
            <Header>
              <Heading>RAM Auslastung</Heading>
              <Link href="#">Details</Link>
            </Header>
            <Flex
              columnGap="l"
              grow
              justify="center"
              rowGap="m"
              wrap="wrap"
            >
              <DonutChart
                aria-label="RAM Auslastung"
                status="success"
                value={12}
              >
                <b>12 %</b>
              </DonutChart>
              <Flex direction="column" grow rowGap="m">
                <LabeledValue>
                  <Label>Messzeitpunkt</Label>
                  <Text>05.09.2025, 07:30 Uhr</Text>
                </LabeledValue>
                <LabeledValue>
                  <Label>Maximum (Letzte 7 Tage)</Label>
                  <Text>24 %</Text>
                </LabeledValue>
              </Flex>
            </Flex>
          </Section>
        </LayoutCard>
      </ColumnLayout>
      <LayoutCard>
        <Section>
          <Header>
            <Heading>Speicherplatz</Heading>
            <Link href="#">Details</Link>
          </Header>
          <ProgressBar
            value={2.3}
            maxValue={5}
            formatOptions={{
              style: "unit",
              unit: "gigabyte",
            }}
            showMaxValue
            size="l"
            status="success"
          >
            <Label>Speicherplatz</Label>
          </ProgressBar>
        </Section>
      </LayoutCard>
    </ColumnLayout>
  );
};
1d:Ta7f,import {
  Align,
  Button,
  ColumnLayout,
  CopyButton,
  Header,
  Heading,
  InlineCode,
  Label,
  LabeledValue,
  LayoutCard,
  Link,
  Option,
  Section,
  Select,
  Table,
  TableBody,
  TableCell,
  TableColumn,
  TableHeader,
  TableRow,
  Text,
} from "@mittwald/flow-react-components";

<LayoutCard>
  <Section>
    <Header>
      <Heading>WordPress 6.5.3 App</Heading>
      <Button color="secondary" variant="soft">
        PHP Version anpassen
      </Button>
    </Header>
    <ColumnLayout>
      <LabeledValue>
        <Label>Installationsverzeichnis</Label>
        <Text>
          <InlineCode>/f1-blog-th6v8</InlineCode>
        </Text>
        <CopyButton value="/f1-blog-th6v8" />
      </LabeledValue>
      <LabeledValue>
        <Label>PHP-Version</Label>
        <Text>PHP 8.5.3</Text>
      </LabeledValue>
    </ColumnLayout>
  </Section>
  <Section>
    <Header>
      <Heading>Domain</Heading>
      <Button color="secondary" variant="soft">
        Bearbeiten
      </Button>
    </Header>
    <ColumnLayout>
      <LabeledValue>
        <Label>Frontend</Label>
        <Link target="_blank">
          p-xy1z2.project.frontend
        </Link>
      </LabeledValue>
      <LabeledValue>
        <Label>Backend</Label>
        <Link target="_blank">p-xy1z2.project.backend</Link>
      </LabeledValue>
    </ColumnLayout>
  </Section>
  <Section>
    <Heading>SSH-Zugangsdaten</Heading>
    <ColumnLayout l={[2, 1]} m={[2, 1]}>
      <Select defaultSelectedKey="1">
        <Label>SSH-Benutzer</Label>
        <Option value="1">
          mStudio Benutzer (m.muster@mittwald.de)
        </Option>
      </Select>
    </ColumnLayout>
    <Table>
      <TableHeader>
        <TableColumn />
        <TableColumn />
      </TableHeader>
      <TableBody>
        <TableRow>
          <TableCell rowHeader>Benutzername</TableCell>
          <TableCell>
            <Align>
              <Text>j.eimertenbrink</Text>
              <CopyButton value="m.muster" />
            </Align>
          </TableCell>
        </TableRow>
        <TableRow>
          <TableCell rowHeader>Hostname</TableCell>
          <TableCell>
            <Align>
              <Text>ssh.mittwald.host</Text>
              <CopyButton value="ssh.mittwald.host" />
            </Align>
          </TableCell>
        </TableRow>
        <TableRow>
          <TableCell rowHeader>URL</TableCell>
          <TableCell>
            <Align>
              <Text>j.eimertenbrink@ssh.mittwald.host</Text>
              <CopyButton value="m.muster@ssh.mittwald.host" />
            </Align>
          </TableCell>
        </TableRow>
      </TableBody>
    </Table>
  </Section>
</LayoutCard>;
1e:T786,import {
  ActionGroup,
  Button,
  Heading,
  IconApp,
  IllustratedMessage,
  Text,
  LayoutCard,
  ModalTrigger,
  Modal,
  typedList,
  Content,
  ListItemView,
  Avatar,
  Action,
} from "@mittwald/flow-react-components";

export default () => {
  const AppList = typedList<{
    id: string;
    name: string;
  }>();

  return (
    <LayoutCard>
      <IllustratedMessage>
        <IconApp />
        <Heading>App anlegen</Heading>
        <Text>
          Lege deine erste App an, um mit der Arbeit an
          deiner Website loszulegen.
        </Text>

        <ActionGroup>
          <ModalTrigger>
            <Button color="accent">Anlegen</Button>
            <Modal offCanvas>
              <Heading>App anlegen</Heading>
              <Content>
                <AppList.List defaultViewMode="tiles">
                  <AppList.Search />
                  <AppList.StaticData
                    data={[
                      { id: "1", name: "PHP" },
                      { id: "2", name: "TYPO3" },
                      { id: "1", name: "WordPress" },
                    ]}
                  />
                  <AppList.Item showTiles showList={false}>
                    {(app) => (
                      <ListItemView>
                        <Avatar>
                          <IconApp />
                        </Avatar>
                        <Heading>{app.name}</Heading>
                      </ListItemView>
                    )}
                  </AppList.Item>
                </AppList.List>
              </Content>
              <ActionGroup>
                <Action closeOverlay="Modal">
                  <Button color="secondary" variant="soft">
                    Abbrechen
                  </Button>
                </Action>
              </ActionGroup>
            </Modal>
          </ModalTrigger>
        </ActionGroup>
      </IllustratedMessage>
    </LayoutCard>
  );
};
1f:T12c3,import {
  Action,
  ActionGroup,
  Align,
  Button,
  ColumnLayout,
  Content,
  CopyButton,
  Header,
  Heading,
  IconAI,
  IconClose,
  InlineCode,
  Label,
  LabeledValue,
  ListItemView,
  Modal,
  ModalTrigger,
  Section,
  Table,
  TableBody,
  TableCell,
  TableColumn,
  TableHeader,
  TableRow,
  Text,
  typedList,
} from "@mittwald/flow-react-components";

export default () => {
  const VolumeList = typedList<{
    id: string;
    name: string;
    path: string;
    ai?: string;
  }>();

  return (
    <ModalTrigger>
      <Button color="accent">Beispiel öffnen</Button>
      <Modal offCanvas>
        <Heading>Container anlegen</Heading>
        <Content>
          <Section>
            <Header>
              <Heading>Entrypoint</Heading>
              <Button variant="soft" color="secondary">
                Bearbeiten
              </Button>
            </Header>
            <Text>
              Der Entrypoint definiert den primären Prozess,
              der in deinem Container gestartet werden soll.
              Der Command gibt an, mit welchen Parametern
              der Entrypoint gestartet wird.
            </Text>
            <ColumnLayout>
              <LabeledValue>
                <Label>Entrypoint</Label>
                <InlineCode>
                  docker-entrypoint.sh
                </InlineCode>
                <CopyButton value="docker-entrypoint.sh" />
              </LabeledValue>
              <LabeledValue>
                <Label>Command</Label>
                <InlineCode>mongod</InlineCode>
                <CopyButton value="mongod" />
              </LabeledValue>
            </ColumnLayout>

            <Header>
              <Heading>Volumes</Heading>
              <Button>Hinzufügen</Button>
            </Header>
            <Text>
              Volumes stellen Speicherplatz für deinem
              Container bereit. Alternativ kannst du einen
              Pfad innerhalb deines Projekts auswählen, um
              auf die Dateien zuzugreifen.
            </Text>
            <VolumeList.List
              hidePagination
              getItemId={(volume) => volume.id}
            >
              <VolumeList.StaticData
                data={[
                  {
                    id: "1",
                    name: "mongo-data-configdb-Rrku",
                    path: "/data/configdb",
                  },
                  {
                    id: "2",
                    name: "mongo-data-db-CnnD",
                    path: "/data/db",
                    ai: "Ein Verzeichnis für die Speicherung von MongoDB-Daten.",
                  },
                ]}
              />
              <VolumeList.Item>
                {(volume) => (
                  <ListItemView>
                    <Heading>{volume.name}</Heading>
                    <Text>{volume.path}</Text>
                    <Button
                      variant="plain"
                      color="secondary"
                    >
                      <IconClose />
                    </Button>
                    {volume.ai && (
                      <Content slot="bottom">
                        <Align>
                          <IconAI />
                          <Text>
                            <small>{volume.ai}</small>
                          </Text>
                        </Align>
                      </Content>
                    )}
                  </ListItemView>
                )}
              </VolumeList.Item>
            </VolumeList.List>

            <Header>
              <Heading>Umgebungsvariablen</Heading>
              <Button color="secondary" variant="soft">
                Bearbeiten
              </Button>
            </Header>
            <Table>
              <TableHeader>
                <TableColumn>Key</TableColumn>
                <TableColumn>Value</TableColumn>
                <TableColumn>KI-Unterstützung</TableColumn>
              </TableHeader>
              <TableBody>
                <TableRow>
                  <TableCell
                    colSpan={3}
                    horizontalAlign="center"
                  >
                    Keine Variablen hinterlegt
                  </TableCell>
                </TableRow>
              </TableBody>
            </Table>
          </Section>
        </Content>
        <ActionGroup>
          <Button color="accent">Anlegen</Button>
          <Button
            slot="secondary"
            color="secondary"
            variant="soft"
          >
            Zurück
          </Button>
          <Action closeOverlay="Modal">
            <Button color="secondary" variant="soft">
              Abbrechen
            </Button>
          </Action>
        </ActionGroup>
      </Modal>
    </ModalTrigger>
  );
};
20:Td9e,import {
  ActionGroup,
  Avatar,
  Button,
  Content,
  ContextMenu,
  ContextMenuTrigger,
  Heading,
  IconChevronDown,
  IconDomain,
  IconHome,
  IconInfo,
  IconMove,
  IconSubdomain,
  IconVhost,
  LayoutCard,
  ListItemView,
  MenuItem,
  Text,
  typedList,
} from "@mittwald/flow-react-components";

export default () => {
  const DomainList = typedList<{
    id: string;
    domain: string;
    type: string;
    target?: string;
  }>();

  return (
    <LayoutCard>
      <DomainList.List getItemId={(domain) => domain.id}>
        <DomainList.StaticData
          data={[
            {
              id: "1",
              domain: "mjaofd6.project.space",
              type: "Projekt-Domain",
            },
            {
              id: "2",
              domain: "formel1.de",
              type: "Domain",
              target: "Mein WordPress",
            },
            {
              id: "3",
              domain: "schumi-fanclub.de",
              type: "Virtual Host",
              target: "Mein WordPress",
            },
            {
              id: "4",
              domain: "www.formel1.de",
              type: "Subdomain",
              target: "/home/xyz/ordner/tollerpfad",
            },
          ]}
        />
        <DomainList.Search />
        <DomainList.Item showTiles>
          {(domain) => (
            <ListItemView>
              <Avatar
                color={
                  domain.type === "Projekt-Domain"
                    ? "violet"
                    : domain.type === "Subdomain"
                      ? "green"
                      : domain.type === "Domain"
                        ? "blue"
                        : "teal"
                }
              >
                {domain.type === "Projekt-Domain" ? (
                  <IconHome />
                ) : domain.type === "Subdomain" ? (
                  <IconSubdomain />
                ) : domain.type === "Domain" ? (
                  <IconDomain />
                ) : (
                  <IconVhost />
                )}
              </Avatar>
              <Heading>{domain.domain}</Heading>
              <Text>{domain.type}</Text>
              <Content>
                <small>
                  {domain.target
                    ? domain.target
                    : "Kein Ziel"}
                </small>
              </Content>
              <ContextMenu>
                <MenuItem>
                  <IconInfo />
                  <Text>Details anzeigen</Text>
                </MenuItem>
              </ContextMenu>
            </ListItemView>
          )}
        </DomainList.Item>
        <ActionGroup>
          <ContextMenuTrigger>
            <Button color="accent">
              <Text>Hinzufügen</Text>
              <IconChevronDown />
            </Button>
            <ContextMenu>
              <MenuItem>
                <IconDomain />
                <Text>Domain bestellen</Text>
              </MenuItem>
              <MenuItem>
                <IconMove />
                <Text>Domain umziehen</Text>
              </MenuItem>
              <MenuItem>
                <IconVhost />
                <Text>vHost einrichten</Text>
              </MenuItem>
              <MenuItem>
                <IconSubdomain />
                <Text>Subdomain anlegen</Text>
              </MenuItem>
            </ContextMenu>
          </ContextMenuTrigger>
        </ActionGroup>
      </DomainList.List>
    </LayoutCard>
  );
};
21:T915,import {
  Action,
  ActionGroup,
  Button,
  ColumnLayout,
  Content,
  FieldDescription,
  Header,
  Heading,
  InlineCode,
  Label,
  Modal,
  ModalTrigger,
  Option,
  PasswordCreationField,
  Section,
  Select,
  TextField,
} from "@mittwald/flow-react-components";

<ModalTrigger>
  <Button color="accent">Beispiel öffnen</Button>
  <Modal offCanvas>
    <Heading>WordPress anlegen</Heading>
    <Content>
      <Section>
        <ColumnLayout m={[2, 1]}>
          <TextField isRequired>
            <Label>Name</Label>
          </TextField>
          <Select isRequired defaultSelectedKey="6.5.3">
            <Label>Version</Label>
            <Option value="6.5.3">6.5.3 (Neueste)</Option>
            <Option value="6.5.2">6.5.2</Option>
            <Option value="6.5.1">6.5.1</Option>
          </Select>
        </ColumnLayout>
        <TextField isRequired>
          <Label>Installationsverzeichnis</Label>
          <FieldDescription>
            Deine App wird unter{" "}
            <InlineCode>{`/html/<installationsverzeichnis>`}</InlineCode>{" "}
            installiert
          </FieldDescription>
        </TextField>
        <Header>
          <Heading>Hauptdomain zuweisen</Heading>
          <Button color="accent">Subdomain anlegen</Button>
        </Header>
        <Select isRequired placeholder="Domain wählen">
          <Label>Domain</Label>
          <Option>meine-domain.de</Option>
          <Option>noch-eine-domain.de</Option>
        </Select>
        <Heading>Admin anlegen</Heading>
        <TextField isRequired defaultValue="WordPress">
          <Label>E-Mail-Adresse</Label>
        </TextField>
        <TextField
          isRequired
          defaultValue="meinname@meinedomain.de"
        >
          <Label>Benutzername</Label>
        </TextField>
        <PasswordCreationField isRequired>
          <Label>Passwort</Label>
        </PasswordCreationField>
      </Section>
    </Content>
    <ActionGroup>
      <Button color="accent">Anlegen</Button>
      <Button
        slot="secondary"
        color="secondary"
        variant="soft"
      >
        Zurück
      </Button>
      <Action closeOverlay="Modal">
        <Button color="secondary" variant="soft">
          Abbrechen
        </Button>
      </Action>
    </ActionGroup>
  </Modal>
</ModalTrigger>;
22:Tf2a,import {
  Action,
  ActionGroup,
  Alert,
  Button,
  CheckboxButton,
  ColumnLayout,
  Content,
  Heading,
  IconCheck,
  IconClose,
  Label,
  Link,
  Modal,
  ModalTrigger,
  Option,
  Section,
  Select,
  Table,
  TableBody,
  TableCell,
  TableColumn,
  TableHeader,
  TableRow,
  Text,
} from "@mittwald/flow-react-components";

<ModalTrigger>
  <Button color="accent">Beispiel öffnen</Button>
  <Modal offCanvas>
    <Heading>Passwortschutz installieren</Heading>
    <Content>
      <Section>
        <Text>
          Wähle das Projekt aus, in das die Extension
          installiert werden soll. Die Extension wird dort
          integriert und bereitgestellt.
        </Text>
        <ColumnLayout m={[2, 1]}>
          <Select isRequired defaultSelectedKey="1">
            <Label>Organisation</Label>
            <Option value="1">Meine Organisation</Option>
            <Option value="2">
              Noch eine Organisation
            </Option>
          </Select>
        </ColumnLayout>
        <Alert status="warning">
          <Heading>Kein Vertragspartner hinterlegt</Heading>
          <Content>
            <Text>
              Die gewählte Organisation hat derzeit keinen
              Vertragspartner hinterlegt. Um mit der
              Installation fortzufahren, lege bitte einen
              Vertragspartner an.
            </Text>
            <Button color="accent">
              Vertragspartner anlegen
            </Button>
          </Content>
        </Alert>
        <Heading>Berechtigungen </Heading>
        <Text>
          Extensions brauchen Zugriffsberechtigungen, um
          bestimmte Bereiche im mStudio verwalten und/oder
          bearbeiten zu können. Bitte bestätige, dass diese
          Extension auf die folgenden Bereiche zugreifen
          darf:
        </Text>
        <Table>
          <TableHeader>
            <TableColumn>Bereich</TableColumn>
            <TableColumn>Lesen</TableColumn>
            <TableColumn>Schreiben</TableColumn>
            <TableColumn>Löschen</TableColumn>
          </TableHeader>
          <TableBody>
            <TableRow>
              <TableCell>Projekt</TableCell>
              <TableCell>
                <IconCheck status="success" />
              </TableCell>
              <TableCell>
                <IconClose status="danger" />
              </TableCell>
              <TableCell>
                <IconClose status="danger" />
              </TableCell>
            </TableRow>
            <TableRow>
              <TableCell>App</TableCell>
              <TableCell>
                <IconCheck status="success" />
              </TableCell>
              <TableCell>
                <IconClose status="danger" />
              </TableCell>
              <TableCell>
                <IconClose status="danger" />
              </TableCell>
            </TableRow>
            <TableRow>
              <TableCell>SSH-Benutzer</TableCell>
              <TableCell>
                <IconCheck status="success" />
              </TableCell>
              <TableCell>
                <IconCheck status="success" />
              </TableCell>
              <TableCell>
                <IconCheck status="success" />
              </TableCell>
            </TableRow>
          </TableBody>
        </Table>
        <CheckboxButton>
          <Text>
            Ich habe die{" "}
            <Link target="_blank">
              Vereinbarung zur Auftragsdatenverarbeitung
            </Link>{" "}
            gelesen und akzeptiere diese.
          </Text>
        </CheckboxButton>
      </Section>
    </Content>
    <ActionGroup>
      <Button isDisabled>Zur Bestellübersicht</Button>
      <Action closeOverlay="Modal">
        <Button color="secondary" variant="soft">
          Abbrechen
        </Button>
      </Action>
    </ActionGroup>
  </Modal>
</ModalTrigger>;
23:T712,import {
  ActionGroup,
  Avatar,
  Button,
  ContextMenu,
  Heading,
  IconInfo,
  IconProject,
  ListItemView,
  MenuItem,
  Text,
  typedList,
  LayoutCard,
} from "@mittwald/flow-react-components";

export default () => {
  const ProjectList = typedList<{
    id: string;
    name: string;
    type: string;
  }>();

  return (
    <LayoutCard>
      <ProjectList.List getItemId={(project) => project.id}>
        <ProjectList.StaticData
          data={[
            {
              id: "1",
              name: "Café-Gebäck-Haus",
              type: "Space-Server: Mein Server",
            },
            {
              id: "2",
              name: "Steelwork",
              type: "proSpace",
            },
            {
              id: "3",
              name: "UtopiaVRSchule",
              type: "proSpace lite",
            },
            {
              id: "4",
              name: "IT-Profis-Website",
              type: "Space-Server: Mein Server",
            },
          ]}
        />
        <ProjectList.Search />
        <ProjectList.Item showTiles>
          {(project) => (
            <ListItemView>
              <Avatar>
                <IconProject />
              </Avatar>
              <Heading>{project.name}</Heading>
              <Text>{project.type}</Text>
              <ContextMenu>
                <MenuItem>
                  <IconInfo />
                  <Text>Details anzeigen</Text>
                </MenuItem>
              </ContextMenu>
            </ListItemView>
          )}
        </ProjectList.Item>
        <ActionGroup>
          <Button color="secondary" variant="soft">
            Tarif bestellen
          </Button>
          <Button color="accent">Anlegen</Button>
        </ActionGroup>
      </ProjectList.List>
    </LayoutCard>
  );
};
24:T4b3,"use strict";
const {jsx: _jsx, jsxs: _jsxs} = arguments[0];
const {useMDXComponents: _provideComponents} = arguments[0];
function _createMdxContent(props) {
  const _components = {
    p: "p",
    strong: "strong",
    ..._provideComponents(),
    ...props.components
  };
  return _jsxs(_components.p, {
    children: ["Detailseiten sind die zentrale Oberfläche innerhalb der Anwendung. Sie bündeln alle relevanten Informationen zu einem einzelnen Objekt und stellen diese im Content-Bereich übersichtlich dar. Von hier aus können Bearbeitungs- und Anlageprozesse gestartet werden. Sie gliedert sich in zwei Hauptbereiche: den ", _jsx(_components.strong, {
      children: "ContentHeader"
    }), ", der dem User Orientierung gibt, und den ", _jsx(_components.strong, {
      children: "Content"
    }), ", in dem die eigentlichen Informationen und Aktionen dargestellt werden."]
  });
}
function MDXContent(props = {}) {
  const {wrapper: MDXLayout} = {
    ..._provideComponents(),
    ...props.components
  };
  return MDXLayout ? _jsx(MDXLayout, {
    ...props,
    children: _jsx(_createMdxContent, {
      ...props
    })
  }) : _createMdxContent(props);
}
return {
  default: MDXContent
};
25:T1aa2,import {
  Breadcrumb,
  Button,
  ColumnLayout,
  Content,
  ContextMenu,
  ContextMenuTrigger,
  Flex,
  Header,
  Heading,
  IconChevronDown,
  IconDelete,
  IconEdit,
  IconExternalLink,
  IconPassword,
  Label,
  LabeledValue,
  LayoutCard,
  Link,
  MenuItem,
  Modal,
  ModalTrigger,
  ProgressBar,
  Section,
  Segment,
  SegmentedControl,
  Switch,
  Tab,
  Table,
  TableBody,
  TableCell,
  TableColumn,
  TableHeader,
  TableRow,
  Tabs,
  TabTitle,
  Text,
} from "@mittwald/flow-react-components";
import { useState } from "react";

export default () => {
  const [connectionType, setConnectionType] =
    useState("IMAP");

  return (
    <Flex direction="column" gap="m">
      <Flex direction="column">
        <Breadcrumb color="light">
          <Link>Projekt</Link>
          <Link>E-Mails</Link>
          <Link>E-Mail-Details</Link>
        </Breadcrumb>
        <Flex justify="space-between">
          <Heading color="light" level={1}>
            max@mustermann.de
          </Heading>
          <ContextMenuTrigger>
            <Button variant="outline" color="light">
              <Text>Aktionen</Text>
              <IconChevronDown />
            </Button>
            <ContextMenu placement="bottom end">
              <MenuItem>
                <IconEdit />
                <Text>E-Mail-Adresse bearbeiten</Text>
              </MenuItem>
              <MenuItem>
                <IconPassword />
                <Text>Passwort ändern</Text>
              </MenuItem>
              <MenuItem>
                <IconExternalLink />
                <Text>mittwald Webmailer</Text>
              </MenuItem>
              <MenuItem>
                <IconDelete />
                <Text>Löschen</Text>
              </MenuItem>
            </ContextMenu>
          </ContextMenuTrigger>
        </Flex>
      </Flex>
      <LayoutCard>
        <Tabs>
          <Tab>
            <TabTitle>Allgemein</TabTitle>
            <Section>
              <Header>
                <Heading>E-Mail-Adresse</Heading>
                <ModalTrigger>
                  <Button variant="soft" color="secondary">
                    Passwort ändern
                  </Button>
                  <Modal>
                    <Heading>Passwort ändern</Heading>
                    <Content>
                      <Text>...</Text>
                    </Content>
                  </Modal>
                </ModalTrigger>
                <ModalTrigger>
                  <Button>E-Mail-Adresse bearbeiten</Button>
                  <Modal>
                    <Heading>
                      E-Mail-Adresse bearbeiten
                    </Heading>
                    <Content>
                      <Text>...</Text>
                    </Content>
                  </Modal>
                </ModalTrigger>
              </Header>
              <ColumnLayout>
                <LabeledValue>
                  <Label>E-Mail-Adresse</Label>
                  <Text>max@mustermann.de</Text>
                </LabeledValue>
                <LabeledValue>
                  <Label>Webmailer</Label>
                  <Link target="_blank">
                    mittwald Webmailer
                  </Link>
                </LabeledValue>
              </ColumnLayout>
            </Section>
            <Section>
              <Header>
                <Heading>Speicherplatz</Heading>
                <ModalTrigger>
                  <Button variant="soft" color="secondary">
                    Bearbeiten
                  </Button>
                  <Modal>
                    <Heading>
                      Speicherplatz bearbeiten
                    </Heading>
                    <Content>
                      <Text>...</Text>
                    </Content>
                  </Modal>
                </ModalTrigger>
              </Header>
              <Text>
                Die E-Mail-Adresse verfügt über einen
                Speicherplatz zum Empfangen und Speichern
                von E-Mails. Wir empfehlen dir, mindestens 2
                GB zu reservieren.
              </Text>
              <ProgressBar
                formatOptions={{
                  style: "unit",
                  unit: "gigabyte",
                }}
                size="l"
                showMaxValue
                maxValue={2}
                value={1}
                status="success"
              >
                <Label>Speicherplatz</Label>
              </ProgressBar>
            </Section>
            <Section>
              <Heading>Verbindungsinformationen</Heading>
              <SegmentedControl
                defaultValue={connectionType}
                onChange={setConnectionType}
                aria-label="Verbindungsart"
              >
                <Segment value="IMAP">IMAP</Segment>
                <Segment value="POP3">POP3</Segment>
                <Segment value="SMTP">SMTP</Segment>
              </SegmentedControl>
              <Table aria-label="Verbindungsinformationen">
                <TableHeader>
                  <TableColumn></TableColumn>
                  <TableColumn></TableColumn>
                </TableHeader>
                <TableBody>
                  <TableRow>
                    <TableCell rowHeader>
                      Benutzername
                    </TableCell>
                    <TableCell>max@mustermann.de</TableCell>
                  </TableRow>
                  <TableRow>
                    <TableCell rowHeader>
                      {connectionType} Port
                    </TableCell>
                    <TableCell>...</TableCell>
                  </TableRow>
                  <TableRow>
                    <TableCell rowHeader>
                      {connectionType} Postausgang
                    </TableCell>
                    <TableCell>...</TableCell>
                  </TableRow>
                </TableBody>
              </Table>
            </Section>
            <Section>
              <Header>
                <Heading>Spamschutz</Heading>
                <Switch defaultSelected>Aktivieren</Switch>
              </Header>
              <Text>
                Der Spamfilter schützt dich vor ungewollten
                E-Mails. Niemand will Müll in seinem
                Postfach, daher empfehlen wir den Spamschutz
                immer aktiviert zu lassen.
              </Text>
            </Section>
          </Tab>
          <Tab>
            <TabTitle>Weiterleitungen</TabTitle>
            <Section>
              <Text>...</Text>
            </Section>
          </Tab>
          <Tab>
            <TabTitle>Autoresponder</TabTitle>
            <Section>
              <Text>...</Text>
            </Section>
          </Tab>
        </Tabs>
      </LayoutCard>
    </Flex>
  );
};
26:T4d1,import {
  ActionGroup,
  Button,
  Content,
  ContextMenu,
  ContextMenuTrigger,
  Heading,
  IconContextMenu,
  IconEdit,
  Label,
  MenuItem,
  Modal,
  TextField,
  useOverlayController,
  Text,
  Action,
} from "@mittwald/flow-react-components";

export default () => {
  const modalController = useOverlayController("Modal");

  return (
    <>
      <ContextMenuTrigger>
        <Button variant="plain" color="secondary">
          <IconContextMenu />
        </Button>
        <ContextMenu>
          <MenuItem
            onAction={() => {
              modalController.open();
            }}
          >
            <IconEdit />
            <Text>Bearbeiten</Text>
          </MenuItem>
        </ContextMenu>
      </ContextMenuTrigger>
      <Modal controller={modalController}>
        <Heading>Bearbeiten</Heading>
        <Content>
          <TextField>
            <Label>Name</Label>
          </TextField>
        </Content>
        <ActionGroup>
          <Action closeOverlay="Modal">
            <Button color="accent">Speichern</Button>
            <Button color="secondary" variant="soft">
              Abbrechen
            </Button>
          </Action>
        </ActionGroup>
      </Modal>
    </>
  );
};
27:T7c4,import {
  Align,
  Avatar,
  Button,
  Chat,
  Content,
  Header,
  Initials,
  Message,
  MessageSeparator,
  MessageThread,
  Text,
  TextArea,
} from "@mittwald/flow-react-components";

<Chat height={400}>
  <MessageThread>
    <MessageSeparator>Ticket geöffnet</MessageSeparator>
    <Message>
      <Header>
        <Align>
          <Avatar>
            <Initials>Max Mustermann</Initials>
          </Avatar>
          <Text>
            <b>Max Mustermann</b>
          </Text>
        </Align>
      </Header>
      <Content>
        <Text>
          Lorem ipsum dolor sit amet consectetur adipisicing
          elit. Cumque eius quam quas vel voluptas, ullam
          aliquid fugit. Voluptate harum accusantium rerum
          ullam modi blanditiis vitae, laborum ea tempore,
          dolore voluptas. Earum pariatur, similique
          corrupti id officia perferendis. Labore,
          similique. Earum, quas in. At dolorem corrupti
          blanditiis nulla deserunt laborum! Corrupti
          delectus aspernatur nihil nulla obcaecati ipsam
          porro sequi rem? Quam.
        </Text>
      </Content>
    </Message>
    <Message type="sender">
      <Header>
        <Align>
          <Avatar>
            <Initials>John Doe</Initials>
          </Avatar>
          <Text>
            <b>John Doe</b>
          </Text>
        </Align>
      </Header>
      <Content>
        <Text>
          Lorem ipsum dolor sit amet consectetur adipisicing
          elit. Cumque eius quam quas vel voluptas, ullam
          aliquid fugit. Voluptate harum accusantium rerum
          ullam modi blanditiis vitae, laborum ea tempore,
          dolore voluptas. Earum pariatur, similique
          corrupti id officia perferendis. Labore,
          similique. Earum, quas in.
        </Text>
      </Content>
    </Message>
  </MessageThread>
  <TextArea
    aria-label="Nachricht"
    rows={3}
    autoResizeMaxRows={10}
  />
  <Button color="accent">Senden</Button>
</Chat>;
28:T70f,import {
  Align,
  Avatar,
  Button,
  Chat,
  Content,
  Header,
  Initials,
  Message,
  MessageThread,
  Text,
  TextArea,
} from "@mittwald/flow-react-components";
import { useForm } from "react-hook-form";
import {
  Field,
  Form,
} from "@mittwald/flow-react-components/react-hook-form";

export default () => {
  const form = useForm<{ message: string }>();

  return (
    <Chat>
      <MessageThread>
        <Message>
          <Header>
            <Align>
              <Avatar>
                <Initials>Max Mustermann</Initials>
              </Avatar>
              <Text>
                <b>Max Mustermann</b>
              </Text>
            </Align>
          </Header>
          <Content>
            <Text>
              Lorem ipsum dolor sit amet consectetur
              adipisicing elit. Cumque eius quam quas vel
              voluptas, ullam aliquid fugit. Voluptate harum
              accusantium rerum ullam modi blanditiis vitae,
              laborum ea tempore, dolore voluptas. Earum
              pariatur, similique corrupti id officia
              perferendis. Labore, similique. Earum, quas
              in. At dolorem corrupti blanditiis nulla
              deserunt laborum! Corrupti delectus aspernatur
              nihil nulla obcaecati ipsam porro sequi rem?
              Quam.
            </Text>
          </Content>
        </Message>
      </MessageThread>
      <Form
        form={form}
        onSubmit={() => {
          console.log("submitted");
        }}
      >
        <Field name="message">
          <TextArea
            aria-label="message"
            rows={3}
            autoResizeMaxRows={10}
          />
        </Field>
        <Button color="accent" type="submit">
          Submit
        </Button>
      </Form>
    </Chat>
  );
};
29:T7d0,import {
  Align,
  Avatar,
  Button,
  Chat,
  Content,
  Header,
  Initials,
  MarkdownEditor,
  Message,
  MessageSeparator,
  MessageThread,
  Text,
} from "@mittwald/flow-react-components";

<Chat height={400}>
  <MessageThread>
    <MessageSeparator>Ticket geöffnet</MessageSeparator>
    <Message>
      <Header>
        <Align>
          <Avatar>
            <Initials>Max Mustermann</Initials>
          </Avatar>
          <Text>
            <b>Max Mustermann</b>
          </Text>
        </Align>
      </Header>
      <Content>
        <Text>
          Lorem ipsum dolor sit amet consectetur adipisicing
          elit. Cumque eius quam quas vel voluptas, ullam
          aliquid fugit. Voluptate harum accusantium rerum
          ullam modi blanditiis vitae, laborum ea tempore,
          dolore voluptas. Earum pariatur, similique
          corrupti id officia perferendis. Labore,
          similique. Earum, quas in. At dolorem corrupti
          blanditiis nulla deserunt laborum! Corrupti
          delectus aspernatur nihil nulla obcaecati ipsam
          porro sequi rem? Quam.
        </Text>
      </Content>
    </Message>
    <Message type="sender">
      <Header>
        <Align>
          <Avatar>
            <Initials>John Doe</Initials>
          </Avatar>
          <Text>
            <b>John Doe</b>
          </Text>
        </Align>
      </Header>
      <Content>
        <Text>
          Lorem ipsum dolor sit amet consectetur adipisicing
          elit. Cumque eius quam quas vel voluptas, ullam
          aliquid fugit. Voluptate harum accusantium rerum
          ullam modi blanditiis vitae, laborum ea tempore,
          dolore voluptas. Earum pariatur, similique
          corrupti id officia perferendis. Labore,
          similique. Earum, quas in.
        </Text>
      </Content>
    </Message>
  </MessageThread>
  <MarkdownEditor
    aria-label="Nachricht"
    rows={3}
    autoResizeMaxRows={10}
  />
  <Button color="accent">Senden</Button>
</Chat>;
2a:T481,import {
  Align,
  Avatar,
  Button,
  Chat,
  Content,
  FileCard,
  FileCardList,
  FileField,
  Header,
  Initials,
  Message,
  MessageThread,
  Text,
  TextArea,
} from "@mittwald/flow-react-components";

<Chat>
  <MessageThread>
    <Message>
      <Header>
        <Align>
          <Avatar>
            <Initials>Max Mustermann</Initials>
          </Avatar>
          <Text>
            <b>Max Mustermann</b>
          </Text>
        </Align>
      </Header>
      <Content>
        <Text>
          Labore, similique. Earum, quas in. At dolorem
          corrupti blanditiis nulla deserunt laborum!
          Corrupti delectus aspernatur nihil nulla obcaecati
          ipsam porro sequi rem? Quam.
        </Text>
      </Content>
    </Message>
  </MessageThread>

  <TextArea
    aria-label="Nachricht"
    rows={3}
    autoResizeMaxRows={10}
  />

  <FileField>
    <Button variant="outline" color="secondary">
      Datei anhängen
    </Button>
  </FileField>
  <Button color="accent">Senden</Button>
  <FileCardList>
    <FileCard name="Hochgeladene Datei 1" />
    <FileCard name="Hochgeladene Datei 2" />
  </FileCardList>
</Chat>;
2b:T753,import {
  Align,
  Avatar,
  Content,
  Header,
  Initials,
  Message,
  MessageSeparator,
  MessageThread,
  Text,
} from "@mittwald/flow-react-components";

<MessageThread>
  <Message type="sender">
    <Header>
      <Align>
        <Avatar>
          <Initials>Max Mustermann</Initials>
        </Avatar>
        <Text>
          <b>Max Mustermann</b>
        </Text>
      </Align>
    </Header>
    <Content>
      <Text>
        Lorem ipsum dolor sit amet consectetur adipisicing
        elit. Cumque eius quam quas vel voluptas, ullam
        aliquid fugit. Voluptate harum accusantium rerum
        ullam modi blanditiis vitae.
      </Text>
    </Content>
  </Message>

  <Message type="responder">
    <Header>
      <Align>
        <Avatar>
          <Initials>John Doe</Initials>
        </Avatar>
        <Text>
          <b>John Doe</b>
        </Text>
      </Align>
    </Header>
    <Content>
      <Text>
        Lorem ipsum dolor sit amet consectetur adipisicing
        elit. Cumque eius quam quas vel voluptas, ullam
        aliquid fugit. Voluptate harum accusantium rerum
        ullam modi blanditiis vitae, laborum ea tempore,
        dolore voluptas. Earum pariatur, similique corrupti
        id officia perferendis. Labore, similique. Earum,
        quas in. At dolorem corrupti blanditiis nulla
        deserunt laborum! Corrupti delectus aspernatur nihil
        nulla obcaecati ipsam porro sequi rem? Quam.
      </Text>
    </Content>
  </Message>

  <MessageSeparator>Ticket geschlossen</MessageSeparator>

  <Message type="sender">
    <Header>
      <Align>
        <Avatar>
          <Initials>Max Mustermann</Initials>
        </Avatar>
        <Text>
          <b>Max Mustermann</b>
        </Text>
      </Align>
    </Header>
    <Content>
      <Text>Lorem ipsum dolor sit amet.</Text>
    </Content>
  </Message>
</MessageThread>;
2c:T418,import {
  Align,
  Avatar,
  Button,
  Content,
  ContextMenu,
  ContextMenuTrigger,
  Header,
  Initials,
  MenuItem,
  Message,
  Text,
  Markdown,
} from "@mittwald/flow-react-components";

<Message>
  <Header>
    <ContextMenuTrigger>
      <Button />
      <ContextMenu>
        <MenuItem>Bearbeiten</MenuItem>
        <MenuItem>Löschen</MenuItem>
      </ContextMenu>
    </ContextMenuTrigger>
    <Align>
      <Avatar>
        <Initials>Max Mustermann</Initials>
      </Avatar>
      <Text>
        <b>Max Mustermann</b>
        Organisationsinhaber
      </Text>
    </Align>
    <Text>01.09.2024, 12:45</Text>
  </Header>

  <Content>
    <Markdown>
      Lorem ipsum dolor sit amet, consetetur **sadipscing
      elitr**, sed diam nonumy eirmod tempor invidunt ut
      labore et dolore magna aliquyam erat, sed *diam
      voluptua*. At vero eos et accusam et justo duo dolores
      et ea rebum. Stet clita kasd gubergren, no sea
      takimata sanctus est Lorem ipsum ***dolor sit amet***.
    </Markdown>
  </Content>
</Message>;
2d:T406,import {
  Align,
  Avatar,
  Button,
  Content,
  ContextMenu,
  ContextMenuTrigger,
  Header,
  Initials,
  MenuItem,
  Message,
  Text,
} from "@mittwald/flow-react-components";

<Message type="sender">
  <Header>
    <ContextMenuTrigger>
      <Button />
      <ContextMenu>
        <MenuItem>Bearbeiten</MenuItem>
        <MenuItem>Löschen</MenuItem>
      </ContextMenu>
    </ContextMenuTrigger>
    <Align>
      <Avatar>
        <Initials>Max Mustermann</Initials>
      </Avatar>
      <Text>
        <b>Max Mustermann</b>
        Organisationsinhaber
      </Text>
    </Align>
    <Text>01.09.2024, 12:45</Text>
  </Header>

  <Content>
    <Text>
      Lorem ipsum dolor sit amet, consetetur sadipscing
      elitr, sed diam nonumy eirmod tempor invidunt ut
      labore et dolore magna aliquyam erat, sed diam
      voluptua. At vero eos et accusam et justo duo dolores
      et ea rebum. Stet clita kasd gubergren, no sea
      takimata sanctus est Lorem ipsum dolor sit amet.
    </Text>
  </Content>
</Message>;
2e:Ta5a,import {
  AlertBadge,
  Avatar,
  Heading,
  IconEmail,
  Section,
  Text,
  typedList,
} from "@mittwald/flow-react-components";

export default () => {
  const NotificationList = typedList<{
    status: "info" | "success" | "danger" | "warning";
    content: string;
  }>();

  const EmailList = typedList<{
    address: string;
    blocked?: boolean;
  }>();

  return (
    <>
      <Section>
        <Heading>Benachrichtigungen</Heading>
        <Text>
          Hier wird der Status durch den Inhalt der
          Benachrichtigung erklärt, daher kann der Status
          Avatar verwendet werden.
        </Text>

        <NotificationList.List>
          <NotificationList.StaticData
            data={[
              {
                status: "danger",
                content:
                  'E-Mail-Adresse "mail@example.de" gesperrt',
              },
              {
                status: "success",
                content: "App erfolgreich angelegt",
              },
            ]}
          />
          <NotificationList.Item
            textValue={(notification) =>
              notification.content
            }
          >
            {(notification) => (
              <NotificationList.ItemView>
                <Avatar status={notification.status} />
                <Heading>{notification.content}</Heading>
              </NotificationList.ItemView>
            )}
          </NotificationList.Item>
        </NotificationList.List>
      </Section>
      <Section>
        <Heading>E-Mail-Adressen</Heading>
        <Text>
          Hier muss der Status durch das AlertBadge erklärt
          werden, der Status Avatar kann daher nicht
          verwendet werden.
        </Text>
        <EmailList.List>
          <EmailList.StaticData
            data={[
              {
                address: "mail@example.de",
                blocked: true,
              },
              {
                address: "info@example.de",
              },
            ]}
          />
          <EmailList.Item
            textValue={(email) => email.address}
          >
            {(email) => (
              <EmailList.ItemView>
                <Avatar>
                  <IconEmail />
                </Avatar>
                <Heading>
                  {email.address}
                  {email.blocked && (
                    <AlertBadge status="danger">
                      E-Mail-Adresse gesperrt
                    </AlertBadge>
                  )}
                </Heading>
              </EmailList.ItemView>
            )}
          </EmailList.Item>
        </EmailList.List>
      </Section>
    </>
  );
};
2f:T17b4,import {
  ColumnLayout,
  IconAI,
  IconAnalytics,
  IconApp,
  IconAutoresponder,
  IconBackup,
  IconCamera,
  IconCertificate,
  IconChangelog,
  IconContainer,
  IconContract,
  IconContributor,
  IconCronjob,
  IconCustomer,
  IconDashboard,
  IconDatabase,
  IconDate,
  IconDeliveryBox,
  IconDesktop,
  IconDirectory,
  IconDomain,
  IconEmail,
  IconExtension,
  IconFile,
  IconForwardAddress,
  IconKnowledgeHint,
  IconLeadFyndr,
  IconMainUser,
  IconMarketplace,
  IconMember,
  IconMittwald,
  IconMobile,
  IconMonitoring,
  IconMove,
  IconNumber,
  IconOrder,
  IconPassword,
  IconPayment,
  IconPicture,
  IconProject,
  IconRegistry,
  IconSecurity,
  IconServer,
  IconSsh,
  IconSshKey,
  IconSshSftp,
  IconStar,
  IconStarFilled,
  IconSubdomain,
  IconSupport,
  IconTerminate,
  IconTicket,
  IconTime,
  IconUser,
  IconVhost,
  IconVolume,
  IconPath,
  Label,
  LabeledValue,
  IconDnsZone,
  IconEmailArchive,
  IconInvite,
  IconDnsSubZone,
} from "@mittwald/flow-react-components";

<ColumnLayout l={[1, 1, 1, 1, 1]} m={[1, 1, 1]} s={[1, 1]}>
  <LabeledValue>
    <Label>mittwald</Label>
    <IconMittwald />
  </LabeledValue>
  <LabeledValue>
    <Label>Star</Label>
    <IconStar />
  </LabeledValue>
  <LabeledValue>
    <Label>StarFilled</Label>
    <IconStarFilled />
  </LabeledValue>
  <LabeledValue>
    <Label>AI</Label>
    <IconAI />
  </LabeledValue>
  <LabeledValue>
    <Label>Project</Label>
    <IconProject />
  </LabeledValue>
  <LabeledValue>
    <Label>Server</Label>
    <IconServer />
  </LabeledValue>
  <LabeledValue>
    <Label>Customer</Label>
    <IconCustomer />
  </LabeledValue>
  <LabeledValue>
    <Label>Support</Label>
    <IconSupport />
  </LabeledValue>
  <LabeledValue>
    <Label>Email</Label>
    <IconEmail />
  </LabeledValue>
  <LabeledValue>
    <Label>DeliveryBox</Label>
    <IconDeliveryBox />
  </LabeledValue>
  <LabeledValue>
    <Label>EmailArchive</Label>
    <IconEmailArchive />
  </LabeledValue>
  <LabeledValue>
    <Label>App</Label>
    <IconApp />
  </LabeledValue>
  <LabeledValue>
    <Label>Domain</Label>
    <IconDomain />
  </LabeledValue>
  <LabeledValue>
    <Label>Vhost</Label>
    <IconVhost />
  </LabeledValue>
  <LabeledValue>
    <Label>Subdomain</Label>
    <IconSubdomain />
  </LabeledValue>
  <LabeledValue>
    <Label>Domainpfad</Label>
    <IconPath />
  </LabeledValue>
  <LabeledValue>
    <Label>Certificate</Label>
    <IconCertificate />
  </LabeledValue>
  <LabeledValue>
    <Label>DnsZone</Label>
    <IconDnsZone />
  </LabeledValue>
  <LabeledValue>
    <Label>DnsSubZone</Label>
    <IconDnsSubZone />
  </LabeledValue>
  <LabeledValue>
    <Label>Move</Label>
    <IconMove />
  </LabeledValue>
  <LabeledValue>
    <Label>Directory</Label>
    <IconDirectory />
  </LabeledValue>
  <LabeledValue>
    <Label>File</Label>
    <IconFile />
  </LabeledValue>
  <LabeledValue>
    <Label>Database</Label>
    <IconDatabase />
  </LabeledValue>
  <LabeledValue>
    <Label>Changelog</Label>
    <IconChangelog />
  </LabeledValue>
  <LabeledValue>
    <Label>Extension</Label>
    <IconExtension />
  </LabeledValue>
  <LabeledValue>
    <Label>Order</Label>
    <IconOrder />
  </LabeledValue>
  <LabeledValue>
    <Label>Monitoring</Label>
    <IconMonitoring />
  </LabeledValue>
  <LabeledValue>
    <Label>Analytics</Label>
    <IconAnalytics />
  </LabeledValue>
  <LabeledValue>
    <Label>Ticket</Label>
    <IconTicket />
  </LabeledValue>
  <LabeledValue>
    <Label>Contributor</Label>
    <IconContributor />
  </LabeledValue>
  <LabeledValue>
    <Label>Payment</Label>
    <IconPayment />
  </LabeledValue>
  <LabeledValue>
    <Label>Contract</Label>
    <IconContract />
  </LabeledValue>
  <LabeledValue>
    <Label>Camera</Label>
    <IconCamera />
  </LabeledValue>
  <LabeledValue>
    <Label>Backup</Label>
    <IconBackup />
  </LabeledValue>
  <LabeledValue>
    <Label>Cronjob</Label>
    <IconCronjob />
  </LabeledValue>
  <LabeledValue>
    <Label>Member</Label>
    <IconMember />
  </LabeledValue>
  <LabeledValue>
    <Label>User</Label>
    <IconUser />
  </LabeledValue>
  <LabeledValue>
    <Label>Marketplace</Label>
    <IconMarketplace />
  </LabeledValue>
  <LabeledValue>
    <Label>SshSftp</Label>
    <IconSshSftp />
  </LabeledValue>
  <LabeledValue>
    <Label>LeadFyndr</Label>
    <IconLeadFyndr />
  </LabeledValue>
  <LabeledValue>
    <Label>Container</Label>
    <IconContainer />
  </LabeledValue>
  <LabeledValue>
    <Label>Volume</Label>
    <IconVolume />
  </LabeledValue>
  <LabeledValue>
    <Label>Number</Label>
    <IconNumber />
  </LabeledValue>
  <LabeledValue>
    <Label>Time</Label>
    <IconTime />
  </LabeledValue>
  <LabeledValue>
    <Label>Date</Label>
    <IconDate />
  </LabeledValue>
  <LabeledValue>
    <Label>Dashboard</Label>
    <IconDashboard />
  </LabeledValue>
  <LabeledValue>
    <Label>Terminate</Label>
    <IconTerminate />
  </LabeledValue>
  <LabeledValue>
    <Label>Security</Label>
    <IconSecurity />
  </LabeledValue>
  <LabeledValue>
    <Label>SshKey</Label>
    <IconSshKey />
  </LabeledValue>
  <LabeledValue>
    <Label>ForwardAddress</Label>
    <IconForwardAddress />
  </LabeledValue>
  <LabeledValue>
    <Label>Autoresponder</Label>
    <IconAutoresponder />
  </LabeledValue>
  <LabeledValue>
    <Label>Password</Label>
    <IconPassword />
  </LabeledValue>
  <LabeledValue>
    <Label>Desktop</Label>
    <IconDesktop />
  </LabeledValue>
  <LabeledValue>
    <Label>Mobile</Label>
    <IconMobile />
  </LabeledValue>
  <LabeledValue>
    <Label>Registry</Label>
    <IconRegistry />
  </LabeledValue>
  <LabeledValue>
    <Label>Picture</Label>
    <IconPicture />
  </LabeledValue>
  <LabeledValue>
    <Label>MainUser</Label>
    <IconMainUser />
  </LabeledValue>
  <LabeledValue>
    <Label>Ssh</Label>
    <IconSsh />
  </LabeledValue>
  <LabeledValue>
    <Label>KnowledgeHint</Label>
    <IconKnowledgeHint />
  </LabeledValue>
  <LabeledValue>
    <Label>Invite</Label>
    <IconInvite />
  </LabeledValue>
</ColumnLayout>;
30:T1251,import {
  ColumnLayout,
  IconAttachment,
  IconBackLink,
  IconCheck,
  IconCheckboxChecked,
  IconCheckboxEmpty,
  IconCheckboxIndeterminate,
  IconChevronDown,
  IconChevronLeft,
  IconChevronRight,
  IconChevronUp,
  IconClose,
  IconCode,
  IconContextMenu,
  IconContextMenuVertical,
  IconCopy,
  IconDelete,
  IconDownload,
  IconEdit,
  IconExternalLink,
  IconFilter,
  IconHide,
  IconHome,
  IconLink,
  IconLogout,
  IconMaximize,
  IconMenu,
  IconMinimize,
  IconMinus,
  IconNotification,
  IconPause,
  IconPlus,
  IconRadioOff,
  IconRadioOn,
  IconRedo,
  IconRefresh,
  IconSave,
  IconSearch,
  IconSend,
  IconSettings,
  IconShare,
  IconShow,
  IconSorting,
  IconStart,
  IconUndo,
  IconUpload,
  IconView,
  Label,
  LabeledValue,
} from "@mittwald/flow-react-components";

<ColumnLayout l={[1, 1, 1, 1, 1]} m={[1, 1, 1]} s={[1, 1]}>
  <LabeledValue>
    <Label>Home</Label>
    <IconHome />
  </LabeledValue>
  <LabeledValue>
    <Label>Notification</Label>
    <IconNotification />
  </LabeledValue>
  <LabeledValue>
    <Label>Logout</Label>
    <IconLogout />
  </LabeledValue>
  <LabeledValue>
    <Label>Search</Label>
    <IconSearch />
  </LabeledValue>
  <LabeledValue>
    <Label>Menu</Label>
    <IconMenu />
  </LabeledValue>
  <LabeledValue>
    <Label>View</Label>
    <IconView />
  </LabeledValue>
  <LabeledValue>
    <Label>Filter</Label>
    <IconFilter />
  </LabeledValue>
  <LabeledValue>
    <Label>Sorting</Label>
    <IconSorting />
  </LabeledValue>
  <LabeledValue>
    <Label>ContextMenu</Label>
    <IconContextMenu />
  </LabeledValue>
  <LabeledValue>
    <Label>ContextMenuVertical</Label>
    <IconContextMenuVertical />
  </LabeledValue>
  <LabeledValue>
    <Label>Maximize</Label>
    <IconMaximize />
  </LabeledValue>
  <LabeledValue>
    <Label>Minimize</Label>
    <IconMinimize />
  </LabeledValue>
  <LabeledValue>
    <Label>Edit</Label>
    <IconEdit />
  </LabeledValue>
  <LabeledValue>
    <Label>Share</Label>
    <IconShare />
  </LabeledValue>
  <LabeledValue>
    <Label>Save</Label>
    <IconSave />
  </LabeledValue>
  <LabeledValue>
    <Label>Settings</Label>
    <IconSettings />
  </LabeledValue>
  <LabeledValue>
    <Label>Delete</Label>
    <IconDelete />
  </LabeledValue>
  <LabeledValue>
    <Label>Copy</Label>
    <IconCopy />
  </LabeledValue>
  <LabeledValue>
    <Label>Backlink</Label>
    <IconBackLink />
  </LabeledValue>
  <LabeledValue>
    <Label>ExternalLink</Label>
    <IconExternalLink />
  </LabeledValue>
  <LabeledValue>
    <Label>ChevronDown</Label>
    <IconChevronDown />
  </LabeledValue>
  <LabeledValue>
    <Label>ChevronLeft</Label>
    <IconChevronLeft />
  </LabeledValue>
  <LabeledValue>
    <Label>ChevronRight</Label>
    <IconChevronRight />
  </LabeledValue>
  <LabeledValue>
    <Label>ChevronUp</Label>
    <IconChevronUp />
  </LabeledValue>
  <LabeledValue>
    <Label>Close</Label>
    <IconClose />
  </LabeledValue>
  <LabeledValue>
    <Label>Show</Label>
    <IconShow />
  </LabeledValue>
  <LabeledValue>
    <Label>Hide</Label>
    <IconHide />
  </LabeledValue>
  <LabeledValue>
    <Label>Plus</Label>
    <IconPlus />
  </LabeledValue>
  <LabeledValue>
    <Label>Minus</Label>
    <IconMinus />
  </LabeledValue>
  <LabeledValue>
    <Label>Code</Label>
    <IconCode />
  </LabeledValue>
  <LabeledValue>
    <Label>CheckboxChecked</Label>
    <IconCheckboxChecked />
  </LabeledValue>
  <LabeledValue>
    <Label>CheckboxEmpty</Label>
    <IconCheckboxEmpty />
  </LabeledValue>
  <LabeledValue>
    <Label>CheckboxIndeterminate</Label>
    <IconCheckboxIndeterminate />
  </LabeledValue>
  <LabeledValue>
    <Label>RadioOff</Label>
    <IconRadioOff />
  </LabeledValue>
  <LabeledValue>
    <Label>RadioOn</Label>
    <IconRadioOn />
  </LabeledValue>
  <LabeledValue>
    <Label>Refresh</Label>
    <IconRefresh />
  </LabeledValue>
  <LabeledValue>
    <Label>Check</Label>
    <IconCheck />
  </LabeledValue>
  <LabeledValue>
    <Label>Download</Label>
    <IconDownload />
  </LabeledValue>
  <LabeledValue>
    <Label>Redo</Label>
    <IconRedo />
  </LabeledValue>
  <LabeledValue>
    <Label>Undo</Label>
    <IconUndo />
  </LabeledValue>
  <LabeledValue>
    <Label>Upload</Label>
    <IconUpload />
  </LabeledValue>
  <LabeledValue>
    <Label>Send</Label>
    <IconSend />
  </LabeledValue>
  <LabeledValue>
    <Label>Attachment</Label>
    <IconAttachment />
  </LabeledValue>
  <LabeledValue>
    <Label>Pause</Label>
    <IconPause />
  </LabeledValue>
  <LabeledValue>
    <Label>Start</Label>
    <IconStart />
  </LabeledValue>
  <LabeledValue>
    <Label>Link</Label>
    <IconLink />
  </LabeledValue>
</ColumnLayout>;
31:T43f,import {
  CartesianChart,
  type CartesianChartEmptyViewProps,
  Flex,
  Heading,
  IconDanger,
  IconMonitoring,
  IllustratedMessage,
  Link,
  XAxis,
  YAxis,
} from "@mittwald/flow-react-components";

export default () => {
  const EmptyView = (
    props: CartesianChartEmptyViewProps,
  ) => {
    if (props.data === undefined) {
      return (
        <IllustratedMessage color="danger">
          <IconDanger />
          <Heading>Laden der Daten fehlgeschlagen</Heading>
          <Link>Neu laden</Link>
        </IllustratedMessage>
      );
    }

    return (
      <IllustratedMessage>
        <IconMonitoring />
        <Heading>Keine Daten verfügbar</Heading>
      </IllustratedMessage>
    );
  };

  const Chart = (props: CartesianChartEmptyViewProps) => {
    return (
      <CartesianChart
        emptyView={EmptyView}
        height="300px"
        flexGrow
        {...props}
      >
        <XAxis />
        <YAxis />
      </CartesianChart>
    );
  };

  return (
    <Flex direction="row" grow>
      <Chart />
      <Chart data={[]} />
    </Flex>
  );
};
32:T672,import {
  Area,
  CartesianChart,
  CartesianGrid,
  ChartTooltip,
  ChartLegend,
  XAxis,
  YAxis,
  Section,
  Heading,
} from "@mittwald/flow-react-components";

<Section>
  <Heading>CPU</Heading>
  <CartesianChart
    data={[
      {
        Zeit: "0 Uhr",
        Datenbanken: 40,
        Projekte: 24,
      },
      {
        Zeit: "1 Uhr",
        Datenbanken: 30,
        Projekte: 13,
      },
      {
        Zeit: "2 Uhr",
        Datenbanken: 20,
        Projekte: 78,
      },
      {
        Zeit: "3 Uhr",
        Datenbanken: 27,
        Projekte: 39,
      },
    ]}
    height="200px"
    syncId="syncedCharts"
  >
    <CartesianGrid />
    <Area dataKey="Datenbanken" />
    <Area dataKey="Projekte" color="palatinate-blue" />
    <XAxis dataKey="Zeit" />
    <YAxis domain={[0, 100]} unit=" %" />
    <ChartTooltip formatter={(v, k) => `${k}: ${v} %`} />
  </CartesianChart>
  <Heading>RAM</Heading>
  <CartesianChart
    data={[
      {
        Zeit: "0 Uhr",
        Datenbanken: 39,
        Projekte: 27,
      },
      {
        Zeit: "1 Uhr",
        Datenbanken: 30,
        Projekte: 13,
      },
      {
        Zeit: "2 Uhr",
        Datenbanken: 63,
        Projekte: 10,
      },
      {
        Zeit: "3 Uhr",
        Datenbanken: 24,
        Projekte: 40,
      },
    ]}
    height="200px"
    syncId="syncedCharts"
  >
    <CartesianGrid />
    <Area dataKey="Datenbanken" />
    <Area dataKey="Projekte" color="palatinate-blue" />
    <XAxis dataKey="Zeit" />
    <YAxis domain={[0, 100]} unit=" %" />
    <ChartTooltip formatter={(v, k) => `${k}: ${v} %`} />
    <ChartLegend />
  </CartesianChart>
</Section>;
33:T4d8,import {
  Area,
  Line,
  CartesianChart,
  CartesianGrid,
  YAxis,
  XAxis,
} from "@mittwald/flow-react-components";

export default () => {
  const data = [
    {
      Zeit: "A",
      A: 40,
      B: 45,
    },
    {
      Zeit: "B",
      A: 32,
      B: 35,
    },
    {
      Zeit: "C",
      A: 20,
      B: 78,
    },
    {
      Zeit: "D",
      A: 27,
      B: 39,
    },
  ];
  return (
    <Row>
      <CartesianChart flexGrow data={data} height="300px">
        <CartesianGrid />
        <Area dataKey="A" />
        <Area dataKey="B" color="palatinate-blue" />
        <XAxis dataKey="Zeit" />
        <YAxis domain={[0, 100]} unit=" %" />
      </CartesianChart>
      <CartesianChart flexGrow data={data} height="300px">
        <CartesianGrid />
        <Line dataKey="A" />
        <Line dataKey="B" color="palatinate-blue" />
        <XAxis dataKey="Zeit" />
        <YAxis domain={[0, 100]} unit=" %" />
      </CartesianChart>
      <CartesianChart flexGrow data={data} height="300px">
        <CartesianGrid />
        <Area dataKey="A" />
        <Line dataKey="B" color="palatinate-blue" />
        <XAxis dataKey="Zeit" />
        <YAxis domain={[0, 100]} unit=" %" />
      </CartesianChart>
    </Row>
  );
};
34:T5e5,import {
  Button,
  Label,
  Autocomplete,
  Section,
  TextField,
  Option,
} from "@mittwald/flow-react-components";
import { useForm, useWatch } from "react-hook-form";
import {
  Form,
  typedField,
} from "@mittwald/flow-react-components/react-hook-form";
import { sleep } from "@/content/03-components/actions/action/examples/lib";

export default () => {
  const form = useForm<{ email: string }>({
    defaultValues: {
      email: "",
    },
  });
  const Field = typedField(form);

  const currentEmailValue = useWatch({
    name: "email",
    control: form.control,
  });

  const generateSuggestItems = () => {
    return [
      "example.com",
      "test.org",
      "email.net",
      "mail.com",
    ]
      .map((d) => {
        const email = `${currentEmailValue.split("@")[0]}@${d}`;
        return (
          <Option
            key={email}
            value={email}
            textValue={email}
          >
            {email}
          </Option>
        );
      })
      .filter(() => currentEmailValue);
  };

  return (
    <Section>
      <Form form={form} onSubmit={sleep}>
        <Field
          name="email"
          rules={{
            required: "Bitte wähle eine App aus",
          }}
        >
          <Autocomplete>
            <TextField>
              <Label>Test</Label>
            </TextField>
            {generateSuggestItems()}
          </Autocomplete>
        </Field>
        <Button type="submit">Speichern</Button>
      </Form>
    </Section>
  );
};
35:T61a,import {
  Button,
  FileCard,
  FileCardList,
  FileField,
  Label,
  Section,
} from "@mittwald/flow-react-components";
import { useForm } from "react-hook-form";
import {
  Form,
  typedField,
} from "@mittwald/flow-react-components/react-hook-form";
import { sleep } from "@/content/03-components/actions/action/examples/lib";

export default () => {
  const form = useForm<{
    files: FileList | File[] | [];
  }>({ defaultValues: { files: [] } });
  const Field = typedField(form);

  const watchedFiles = [...form.watch("files")];

  return (
    <Section>
      <Form form={form} onSubmit={sleep}>
        <Field
          name="files"
          rules={{
            required:
              "Bitte wähle mindestens eine Datei aus",
          }}
        >
          <FileField multiple>
            <Label>Dateien</Label>
            <Button variant="outline" color="secondary">
              Auswählen
            </Button>
          </FileField>
        </Field>
        <FileCardList>
          {watchedFiles.map((file) => (
            <FileCard
              name={file.name}
              type={file.type}
              key={file.name}
              sizeInBytes={file.size}
              onDelete={() =>
                form.setValue(
                  "files",
                  watchedFiles.filter(
                    (watched) => watched !== file,
                  ),
                )
              }
            />
          ))}
        </FileCardList>
        <Button type="submit">Hochladen</Button>
      </Form>
    </Section>
  );
};
36:T454,import { sleepLong } from "@/content/03-components/actions/action/examples/lib";
import {
  ActionGroup,
  Button,
  FieldDescription,
  Label,
  TextField,
} from "@mittwald/flow-react-components";
import {
  Field,
  Form,
} from "@mittwald/flow-react-components/react-hook-form";
import { useForm } from "react-hook-form";

export default () => {
  interface Values {
    name: string;
  }
  const form = useForm<Values>({
    defaultValues: {
      name: "",
    },
  });

  return (
    <Form
      form={form}
      onSubmit={async () => {
        await sleepLong();
        // recommended way to reset forms after submit
        return () => {
          form.reset();
        };
      }}
    >
      <Field
        name="name"
        rules={{
          required: "The project name is required",
        }}
      >
        <TextField>
          <Label>Name</Label>
          <FieldDescription>
            The name of the project
          </FieldDescription>
        </TextField>
      </Field>
      <ActionGroup>
        <Button type="submit">Save</Button>
      </ActionGroup>
    </Form>
  );
};
37:T7a2,import {
  Align,
  Avatar,
  Button,
  Chat,
  Content,
  Header,
  Initials,
  Message,
  MessageSeparator,
  MessageThread,
  Text,
  MarkdownEditor,
} from "@mittwald/flow-react-components";

<Chat height={400}>
  <MessageThread>
    <MessageSeparator>Ticket geöffnet</MessageSeparator>
    <Message>
      <Header>
        <Align>
          <Avatar>
            <Initials>Max Mustermann</Initials>
          </Avatar>
          <Text>
            <b>Max Mustermann</b>
          </Text>
        </Align>
      </Header>
      <Content>
        <Text>
          Lorem ipsum dolor sit amet consectetur adipisicing
          elit. Cumque eius quam quas vel voluptas, ullam
          aliquid fugit. Voluptate harum accusantium rerum
          ullam modi blanditiis vitae, laborum ea tempore,
          dolore voluptas. Earum pariatur, similique
          corrupti id officia perferendis. Labore,
          similique. Earum, quas in. At dolorem corrupti
          blanditiis nulla deserunt laborum! Corrupti
          delectus aspernatur nihil nulla obcaecati ipsam
          porro sequi rem? Quam.
        </Text>
      </Content>
    </Message>
    <Message type="sender">
      <Header>
        <Align>
          <Avatar>
            <Initials>John Doe</Initials>
          </Avatar>
          <Text>
            <b>John Doe</b>
          </Text>
        </Align>
      </Header>
      <Content>
        <Text>
          Lorem ipsum dolor sit amet consectetur adipisicing
          elit. Cumque eius quam quas vel voluptas, ullam
          aliquid fugit. Voluptate harum accusantium rerum
          ullam modi blanditiis vitae, laborum ea tempore,
          dolore voluptas. Earum pariatur, similique
          corrupti id officia perferendis. Labore,
          similique. Earum, quas in.
        </Text>
      </Content>
    </Message>
  </MessageThread>
  <MarkdownEditor aria-label="Nachricht" />
  <Button color="accent">Senden</Button>
</Chat>;
38:T555,import { useForm } from "react-hook-form";
import {
  Form,
  typedField,
} from "@mittwald/flow-react-components/react-hook-form";
import { sleep } from "@/content/03-components/actions/action/examples/lib";
import {
  Button,
  Label,
  Section,
  PasswordCreationField,
} from "@mittwald/flow-react-components";
import {
  generatePasswordCreationFieldValidation,
  Policy,
  RuleType,
} from "@mittwald/flow-react-components/mittwald-password-tools-js";

export default () => {
  const customPolicy = Policy.fromDeclaration({
    minComplexity: 3,
    rules: [
      {
        ruleType: RuleType.length,
        min: 8,
        max: 12,
      },
    ],
  });

  const form = useForm<{ password: string }>({
    defaultValues: {
      password: "",
    },
  });
  const Field = typedField(form);

  return (
    <Section>
      <Form form={form} onSubmit={sleep}>
        <Field
          name="password"
          rules={{
            required: true,
            validate:
              generatePasswordCreationFieldValidation(
                customPolicy,
              ),
          }}
        >
          <PasswordCreationField
            validationPolicy={customPolicy}
          >
            <Label>Passwort</Label>
          </PasswordCreationField>
        </Field>
        <Button type="submit">Speichern</Button>
      </Form>
    </Section>
  );
};
39:T554,import {
  Label,
  PasswordCreationField,
} from "@mittwald/flow-react-components";

import {
  Policy,
  RuleType,
} from "@mittwald/flow-react-components/mittwald-password-tools-js";
import { useState } from "react";

export default () => {
  const [password, setPassword] = useState("");

  return (
    <PasswordCreationField
      validationPolicy={Policy.fromDeclaration({
        minComplexity: 3,
        rules: [
          {
            ruleType: RuleType.length,
            min: 8,
            max: 12,
          },
          {
            ruleType: RuleType.regex,
            pattern: "^[0-9]",
            min: 1,
            max: 2,
          },
          {
            ruleType: RuleType.hibp,
          },
          {
            identifier: "special",
            ruleType: RuleType.charPool,
            charPools: ["special"],
            min: 1,
            max: 2,
          },
          {
            identifier: "numbers",
            ruleType: RuleType.charPool,
            charPools: ["numbers"],
            min: 1,
            max: 2,
          },
          {
            ruleType: RuleType.blocklist,
            blocklist: ["foo", "bar"],
            substringMatch: true,
          },
        ],
      })}
      value={password}
      onChange={setPassword}
    >
      <Label>Password</Label>
    </PasswordCreationField>
  );
};
3a:T5a8,import {
  Content,
  RadioButton,
  RadioGroup,
  Text,
} from "@mittwald/flow-react-components";

<RadioGroup
  defaultValue="bookDomain"
  aria-label="Domain"
  l={[1, 1]}
>
  <RadioButton value="bookDomain">
    <Text>Domain buchen</Text>
    <Content>
      Du hast eine Wunsch-Domain? Kein Problem, wir helfen
      dir, die passende Domain für dich zu finden.
      <br />
      <strong>
        <small>8,28€ jährlich</small>
      </strong>
    </Content>
  </RadioButton>
  <RadioButton value="moveDomain">
    <Text>Domain umziehen</Text>
    <Content>
      Du hast schon eine Domain und möchtest sie von deinem
      jetzigen Anbieter zu mittwald umziehen.
      <br />
      <strong>
        <small>8,28€ jährlich</small>
      </strong>
    </Content>
  </RadioButton>
  <RadioButton value="virtualHost">
    <Text>Virtual Host einrichten</Text>
    <Content>
      Die Domain bleibt bei deinem bisherigen Anbieter, du
      kannst sie aber für deine Website in unserem mStudio
      verwenden.
      <br />
      <strong>
        <small>kostenlos</small>
      </strong>
    </Content>
  </RadioButton>
  <RadioButton value="subdomain">
    <Text>Subdomain anlegen</Text>
    <Content>
      Eine Subdomain von einer bereits vorhandenen Domain
      erstellen, um sie für dein Projekt zu verwenden.
      <br />
      <strong>
        <small>kostenlos</small>
      </strong>
    </Content>
  </RadioButton>
</RadioGroup>;
3b:T472,import {
  Button,
  Label,
  Radio,
  RadioGroup,
  Section,
} from "@mittwald/flow-react-components";
import { useForm } from "react-hook-form";
import {
  Form,
  typedField,
} from "@mittwald/flow-react-components/react-hook-form";
import { sleep } from "@/content/03-components/actions/action/examples/lib";

export default () => {
  const form = useForm<{ coffee: string }>({
    defaultValues: { coffee: "more" },
  });
  const Field = typedField(form);

  return (
    <Section>
      <Form form={form} onSubmit={sleep}>
        <Field
          name="coffee"
          rules={{
            required: "Bitte gib deinen Kaffeekonsum an",
          }}
        >
          <RadioGroup>
            <Label>Täglicher Kaffeekonsum</Label>
            <Radio value="more">Mehr als 6 Tassen</Radio>
            <Radio value="5-6">5-6 Tassen</Radio>
            <Radio value="3-4">3-4 Tassen</Radio>
            <Radio value="1-2">1-2 Tassen</Radio>
            <Radio value="none">Trinke keinen Kaffee</Radio>
          </RadioGroup>
        </Field>
        <Button type="submit">Speichern</Button>
      </Form>
    </Section>
  );
};
3c:T43c,import {
  ColumnLayout,
  FieldDescription,
  Label,
  Section,
  Segment,
  SegmentedControl,
  TextField,
} from "@mittwald/flow-react-components";
import { useState } from "react";

export default () => {
  const [showContent, setShowContent] =
    useState<boolean>(false);

  return (
    <Section>
      <SegmentedControl
        defaultValue="lastschrift"
        onChange={() => setShowContent(!showContent)}
      >
        <Label>Zahlungsart</Label>
        <Segment value="lastschrift">Lastschrift</Segment>
        <Segment value="Rechnung">Rechnung</Segment>
        {showContent && (
          <FieldDescription>
            Wähle bitte eine Bankverbindung für die
            Bezahlung mit SEPA-Lastschrift aus.
          </FieldDescription>
        )}
      </SegmentedControl>
      {showContent && (
        <ColumnLayout>
          <TextField isRequired>
            <Label>Kontoinhaber</Label>
          </TextField>
          <TextField isRequired>
            <Label>IBAN</Label>
          </TextField>
        </ColumnLayout>
      )}
    </Section>
  );
};
3d:T42b,import {
  Button,
  Label,
  Section,
  Slider,
} from "@mittwald/flow-react-components";
import { useForm } from "react-hook-form";
import {
  Form,
  typedField,
} from "@mittwald/flow-react-components/react-hook-form";
import { sleep } from "@/content/03-components/actions/action/examples/lib";

export default () => {
  const form = useForm<{ storage: number }>();
  const Field = typedField(form);

  return (
    <Section>
      <Form form={form} onSubmit={sleep}>
        <Field
          name="storage"
          rules={{
            required:
              "Bitte wähle deinen Speicherplatz aus",
          }}
        >
          <Slider
            formatOptions={{
              style: "unit",
              unit: "gigabyte",
            }}
            minValue={50}
            maxValue={750}
            defaultValue={150}
            step={50}
            showInitialMarker
          >
            <Label>Speicherplatz</Label>
          </Slider>
        </Field>
        <Button type="submit">Speichern</Button>
      </Form>
    </Section>
  );
};
3e:T42c,import {
  Header,
  Heading,
  Label,
  LabeledValue,
  Section,
  Switch,
  Tab,
  Tabs,
  TabTitle,
  Text,
  TextField,
} from "@mittwald/flow-react-components";

<Tabs>
  <Tab>
    <TabTitle>Allgemein</TabTitle>
    <Section>
      <Heading>Allgemein</Heading>
      <TextField defaultValue="example@mittwald.de">
        <Label>E-Mail-Adresse</Label>
      </TextField>
    </Section>
  </Tab>
  <Tab id="storage">
    <TabTitle>Speicherplatz</TabTitle>
    <Section>
      <Heading>Speicherplatz</Heading>
      <LabeledValue>
        <Label>Verfügbarer Speicherplatz</Label>
        <Text>2.4 GB</Text>
      </LabeledValue>
    </Section>
  </Tab>
  <Tab>
    <TabTitle>Spamschutz</TabTitle>
    <Section>
      <Header>
        <Heading>Spamschutz</Heading>
        <Switch>Spamfilter</Switch>
      </Header>
      <Text>
        Der Spamfilter schützt dich vor ungewollten E-Mails.
        Niemand will Müll in seinem Postfach, daher
        empfehlen wir den Spamschutz immer aktiviert zu
        lassen.
      </Text>
    </Section>
  </Tab>
</Tabs>;
3f:T569,import {
  Action,
  ActionGroup,
  Button,
  Content,
  Heading,
  Label,
  Modal,
  Section,
  Text,
  TextField,
  useOverlayController,
} from "@mittwald/flow-react-components";
import { sleepLong } from "@/content/03-components/actions/action/examples/lib";

export default () => {
  const controller = useOverlayController("Modal");

  return (
    <>
      <Button onPress={controller.open}>
        Modal öffnen
      </Button>

      <Modal controller={controller}>
        <Heading>Organisation anlegen</Heading>
        <Content>
          <Section>
            <Text>
              Eine Organisation kannst du dir wie ein
              Unternehmen vorstellen. An diesem Ort
              verwaltest du deine Mitarbeiter,
              Zahlungsmodalitäten und kannst deine
              Rechnungen einsehen.
            </Text>
            <TextField isRequired>
              <Label>Organisationsname</Label>
            </TextField>
          </Section>
        </Content>
        <ActionGroup>
          <Action closeOverlay="Modal">
            <Action action={sleepLong}>
              <Button color="accent">
                Organisation anlegen
              </Button>
            </Action>
            <Button variant="soft" color="secondary">
              Abbrechen
            </Button>
          </Action>
        </ActionGroup>
      </Modal>
    </>
  );
};
40:T44e,import {
  Action,
  ActionGroup,
  Button,
  Content,
  Heading,
  Label,
  Modal,
  ModalTrigger,
  Section,
  Text,
  TextField,
} from "@mittwald/flow-react-components";
import { sleepLong } from "@/content/03-components/actions/action/examples/lib";

<ModalTrigger>
  <Button>Modal öffnen</Button>
  <Modal>
    <Heading>Organisation anlegen</Heading>
    <Content>
      <Section>
        <Text>
          Eine Organisation kannst du dir wie ein
          Unternehmen vorstellen. An diesem Ort verwaltest
          du deine Mitarbeiter, Zahlungsmodalitäten und
          kannst deine Rechnungen einsehen.
        </Text>
        <TextField isRequired>
          <Label>Organisationsname</Label>
        </TextField>
      </Section>
    </Content>
    <ActionGroup>
      <Action closeOverlay="Modal">
        <Action action={sleepLong}>
          <Button color="accent">
            Organisation anlegen
          </Button>
        </Action>
        <Button variant="soft" color="secondary">
          Abbrechen
        </Button>
      </Action>
    </ActionGroup>
  </Modal>
</ModalTrigger>;
41:T5a9,import {
  Action,
  ActionGroup,
  Button,
  Content,
  Heading,
  Label,
  Modal,
  TextField,
  useOverlayController,
} from "@mittwald/flow-react-components";
import { useForm } from "react-hook-form";
import {
  Form,
  typedField,
} from "@mittwald/flow-react-components/react-hook-form";

export default () => {
  const controller = useOverlayController("Modal");

  const form = useForm<{ name: string }>();

  const Field = typedField(form);

  const handleOnSubmit = async () => {
    // submit form

    controller.close();
  };

  return (
    <>
      <Button onPress={controller.open}>
        Modal öffnen
      </Button>

      <Modal controller={controller}>
        <Form form={form} onSubmit={handleOnSubmit}>
          <Heading>Organisation anlegen</Heading>

          <Content>
            <Field
              name="name"
              rules={{
                required: "Bitte gib einen Namen ein",
              }}
            >
              <TextField>
                <Label>Name</Label>
              </TextField>
            </Field>
          </Content>

          <ActionGroup>
            <Button color="accent" type="submit">
              Speichern
            </Button>
            <Action closeOverlay="Modal">
              <Button color="secondary" variant="soft">
                Abbrechen
              </Button>
            </Action>
          </ActionGroup>
        </Form>
      </Modal>
    </>
  );
};
42:T451,import {
  Action,
  ActionGroup,
  Button,
  Content,
  Heading,
  Label,
  Modal,
  ModalTrigger,
  Section,
  Text,
  TextField,
} from "@mittwald/flow-react-components";
import { sleepLong } from "@/content/03-components/actions/action/examples/lib";

<ModalTrigger>
  <Button>OffCanvas öffnen</Button>
  <Modal offCanvas>
    <Heading>Organisation anlegen</Heading>
    <Content>
      <Section>
        <Text>
          Eine Organisation kannst du dir wie ein
          Unternehmen vorstellen. An diesem Ort verwaltest
          du deine Mitarbeiter, Zahlungsmodalitäten und
          kannst deine Rechnungen einsehen.
        </Text>
        <TextField>
          <Label>Organisationsname</Label>
        </TextField>
      </Section>
    </Content>
    <ActionGroup>
      <Action closeOverlay="Modal">
        <Action action={sleepLong}>
          <Button color="accent">
            Organisation anlegen
          </Button>
        </Action>
        <Button variant="soft" color="secondary">
          Abbrechen
        </Button>
      </Action>
    </ActionGroup>
  </Modal>
</ModalTrigger>;
43:T232a,import {
  Action,
  ActionGroup,
  Button,
  ColumnLayout,
  Content,
  DatePicker,
  FieldDescription,
  Heading,
  Label,
  Link,
  Modal,
  ModalTrigger,
  Option,
  RadioButton,
  RadioGroup,
  Section,
  Segment,
  SegmentedControl,
  Select,
  Switch,
  Text,
  TextField,
} from "@mittwald/flow-react-components";
import { sleepLong } from "@/content/03-components/actions/action/examples/lib";

export default () => {
  return (
    <Row>
      <ModalTrigger>
        <Button>Modal S</Button>
        <Modal size="s">
          <Heading>
            Möchtest du die Bestellung wirklich abbrechen?
          </Heading>
          <Content>
            <Section>
              <Text>
                Deine eingegebenen Daten werden nicht
                gespeichert.
              </Text>
            </Section>
          </Content>
          <ActionGroup>
            <Action closeOverlay="Modal">
              <Action action={sleepLong}>
                <Button color="danger">
                  Bestellung abbrechen
                </Button>
              </Action>
              <Button variant="soft" color="secondary">
                Bestellung fortsetzen
              </Button>
            </Action>
          </ActionGroup>
        </Modal>
      </ModalTrigger>

      <ModalTrigger>
        <Button>Modal M</Button>
        <Modal size="m">
          <Heading>Backup anlegen</Heading>
          <Content>
            <Section>
              <Text>
                Das Backup enthält alle Dateien deines
                Dateisystems und den Inhalt deiner
                Datenbanken. Dei Erstellung eines Backups
                dauert in der Regel einige Minuten.
              </Text>
              <ColumnLayout m={[1, 1]}>
                <TextField>
                  <Label>Beschreibung</Label>
                </TextField>
                <Select isRequired>
                  <Label>Speicherdauer</Label>
                  <Option>7 Tage</Option>
                  <Option>14 Tage</Option>
                  <Option>30 Tage</Option>
                  <Option>6 Monate</Option>
                  <Option>12 Monate</Option>
                </Select>
              </ColumnLayout>
            </Section>
          </Content>
          <ActionGroup>
            <Action closeOverlay="Modal">
              <Action action={sleepLong}>
                <Button color="accent">
                  Backup anlegen
                </Button>
              </Action>
              <Button variant="soft" color="secondary">
                Abbrechen
              </Button>
            </Action>
          </ActionGroup>
        </Modal>
      </ModalTrigger>

      <ModalTrigger>
        <Button>OffCanvas S</Button>
        <Modal size="s" offCanvas>
          <Heading>Dashboard-Einstellungen</Heading>
          <Content>
            <Section>
              <Heading>Widget-Sichtbarkeit</Heading>
              <Text>
                Aktiviere und deaktiviere die Widgets, die
                du wirklich benötigst. So bestimmst du
                selbst, wie dein Dashboard aussehen soll.
              </Text>
              <ColumnLayout s={[1]} gap="xl">
                <ColumnLayout s={[1]} gap="s">
                  <Switch>Erste Schritte</Switch>
                  <Text>
                    Im Onboarding erklären wir dir alles
                    Wichtige im mStudio.
                  </Text>
                  <Link>Erste Schritte starten</Link>
                </ColumnLayout>

                <ColumnLayout s={[1]} gap="s">
                  <Switch defaultSelected>
                    mittwald Status
                  </Switch>
                  <Text>
                    Wir informieren dich über Wartung und
                    Störungen.
                  </Text>
                </ColumnLayout>

                <ColumnLayout s={[1]} gap="s">
                  <Switch>mittwald Produkt-Slider</Switch>
                  <Text>
                    Im Produkt-Slider erhälst du
                    Informationen und einen schnellen
                    Einstieg in weitere mittwald Produkte.
                  </Text>
                </ColumnLayout>

                <ColumnLayout s={[1]} gap="s">
                  <Switch defaultSelected>
                    Neue Features
                  </Switch>
                  <Text>
                    Wir entwickeln das mStudio stetig weiter
                    Alle kommenden Features findest du auf
                    der <Link>Roadmap</Link>.
                  </Text>
                  <Link>Changelog öffnen</Link>
                </ColumnLayout>

                <ColumnLayout s={[1]} gap="s">
                  <Switch defaultSelected>
                    Neue Blogbeiträge
                  </Switch>
                  <Text>
                    Wir zeigen dir den neuesten mittwald
                    Blogartikel an.
                  </Text>
                  <Link>Blogartikel öffnen</Link>
                </ColumnLayout>

                <ColumnLayout s={[1]} gap="s">
                  <Switch>Lastschift Hinweis</Switch>
                  <Text>
                    Wir informieren über die neue
                    Möglichkeit, deine Rechnungen per
                    Lastschrift zu bezahlen.
                  </Text>
                </ColumnLayout>
              </ColumnLayout>
            </Section>
          </Content>
          <ActionGroup>
            <Action closeOverlay="Modal">
              <Button variant="soft" color="secondary">
                Schließen
              </Button>
            </Action>
          </ActionGroup>
        </Modal>
      </ModalTrigger>

      <ModalTrigger>
        <Button>OffCanvas M</Button>
        <Modal size="m" offCanvas>
          <Heading>SFTP-Benutzer anlegen</Heading>
          <Content>
            <Section>
              <Heading>Beschreibung</Heading>
              <Text>
                Mit einem SFTP-Benutzer kannst du dich mit
                deinem Projekt verbinden, um z. B. Dateien
                hochzuladen.
              </Text>
              <ColumnLayout m={[1, 1]}>
                <TextField isRequired>
                  <Label>Bezeichnung</Label>
                </TextField>
                <DatePicker>
                  <Label>Ablaufdatum</Label>
                  <FieldDescription>
                    Nach diesem Datum wird der SFTP-Benutzer
                    gelöscht.
                  </FieldDescription>
                </DatePicker>
              </ColumnLayout>

              <Heading>Authentifizierung</Heading>
              <Text>
                Wähle zwischen der Authentifikation per
                Passwort oder über einen SSH-Key.
              </Text>
              <SegmentedControl
                value="password"
                aria-label="Authentifizierung"
              >
                <Segment value="password">Passwort</Segment>
                <Segment value="ssh">SSH-Key</Segment>
              </SegmentedControl>
              <ColumnLayout s={[1, 1]}>
                <TextField isRequired>
                  <Label>Passwort</Label>
                </TextField>
              </ColumnLayout>

              <Heading>Berechtigungen</Heading>
              <Text>
                Wähle hier die Berechtigungen aus, mit denen
                der SFTP-Benutzer zugreifen darf.
              </Text>
              <RadioGroup
                s={[1, 1]}
                defaultValue="read&write"
                aria-label="Berechtigungen"
              >
                <RadioButton value="write">
                  <Text>Lesezugriff</Text>
                  <Content>
                    Der SFTP-Benutzer kann Dateien einsehen
                    und herunterladen.
                  </Content>
                </RadioButton>
                <RadioButton value="read&write">
                  <Text>Lese- und Schreibzugriff</Text>
                  <Content>
                    Der SFTP-Benutzer kann Dateien einsehen,
                    bearbeiten, hoch und herunterladen.
                  </Content>
                </RadioButton>
              </RadioGroup>

              <Heading>Verzeichnisauswahl</Heading>
              <Text>
                Hier legst du das Verzeichnis fest, auf das
                der SFTP-Benutzer Zugriff hat.
              </Text>
              <TextField isRequired>
                <Label>Pfad</Label>
              </TextField>
            </Section>
          </Content>
          <ActionGroup>
            <Action closeOverlay="Modal">
              <Action action={sleepLong}>
                <Button color="accent">
                  SFTP-Benutzer anlegen
                </Button>
              </Action>
              <Button variant="soft" color="secondary">
                Abbrechen
              </Button>
            </Action>
          </ActionGroup>
        </Modal>
      </ModalTrigger>
    </Row>
  );
};
44:T470,import {
  Alert,
  Content,
  Heading,
} from "@mittwald/flow-react-components";

<Row>
  <Alert status="info">
    <Heading>E-Mail-Adresse wurde archiviert</Heading>
    <Content>
      Da deine Domain gelöscht wurde, wurde diese
      E-Mail-Adresse archiviert. Um E-Mails empfangen und
      senden zu können musst du die Adresse wieder
      umbenennen.
    </Content>
  </Alert>

  <Alert status="warning">
    <Heading>Dein Speicher ist fast voll</Heading>
    <Content>
      Dein Speicher ist zu über 80% belegt. Wir empfehlen
      dir deinen Speicherplatz zu erweitern, um Problemen
      vorzubeugen.
    </Content>
  </Alert>

  <Alert status="danger">
    <Heading>
      Es konnte kein SSL-Zertifikat ausgestellt werden
    </Heading>
    <Content>
      Für diese Domain konnte kein SSL-Zertifikat
      ausgestellt werden, da die Domain per IP nicht auf
      deine Server-IP zeigt.
    </Content>
  </Alert>

  <Alert status="success">
    <Heading>Deine App wurde aktualisiert</Heading>
    <Content>
      Deine App wurde erfolgreich auf die neueste Version
      aktualisiert.
    </Content>
  </Alert>
</Row>;
45:T413,import {
  Button,
  Heading,
  Notification,
  Text,
  useNotificationController,
} from "@mittwald/flow-react-components";

export default () => {
  const controller = useNotificationController();

  return (
    <Button
      onPress={() => {
        const filename = `export_${Math.round(Math.random() * 1000)}.zip`;

        const notificationId = controller.add(
          <Notification status="info" autoClose={false}>
            <Heading>File is downloading</Heading>
            <Text>
              The file "{filename}" is beeing downloaded.
            </Text>
          </Notification>,
        );

        setTimeout(() => {
          controller.remove(notificationId);
          controller.add(
            <Notification status="success" autoClose>
              <Heading>Download completed</Heading>
              <Text>
                The download of "{filename}" is completed.
              </Text>
            </Notification>,
          );
        }, 3000);
      }}
    >
      Trigger Notification
    </Button>
  );
};
46:T7ae,import {
  AccentBox,
  BigNumber,
  ColumnLayout,
  Flex,
  Heading,
  Icon,
  Link,
  Rating,
  Section,
  Text,
} from "@mittwald/flow-react-components";
import {
  IconLeaf,
  IconMoodSmileBeam,
} from "@tabler/icons-react";

<Section>
  <AccentBox color="blue">
    <Icon>
      <IconMoodSmileBeam />
    </Icon>
    <Section>
      <Heading>
        Hilf uns, Flow noch besser zu machen!
      </Heading>
      <Text>
        Fehlt dir eine bestimmte Component oder etwas
        anderes? Hast du Feedback? Dann teile es uns gerne
        auf GitHub mit.
      </Text>
      <Link href="#" target="_blank">
        Feedback zu Flow geben
      </Link>
    </Section>
  </AccentBox>

  <AccentBox color="green">
    <Icon>
      <IconLeaf />
    </Icon>
    <Section>
      <Heading>Tipps & Tricks für mehr Klimaschutz</Heading>
      <Text>
        Dein Cronjob läuft in weniger als
        5-Minuten-Intervallen. Das verbraucht mehr
        Ressourcen. Falls das nicht unbedingt nötig ist,
        kannst du ein längeres Intervall wählen - das spart
        Energie und schützt das Klima
      </Text>
      <Link href="#" target="_blank">
        Blogartikel zu mehr Nachhaltigkeit
      </Link>
    </Section>
  </AccentBox>

  <ColumnLayout>
    <AccentBox color="neutral">
      <Flex direction="column" gap="s" align="center">
        <BigNumber>
          <Text>250 ms</Text>
          <Text>Dateioperationen</Text>
        </BigNumber>
        <Rating value={4} />
        <Text>
          <small>Geringer Optimierungsbedarf</small>
        </Text>
      </Flex>
    </AccentBox>

    <AccentBox color="neutral">
      <Flex direction="column" gap="xs" align="center">
        <BigNumber>
          <Text>100 ms</Text>
          <Text>Serveroperationen</Text>
        </BigNumber>
        <Rating value={2} />
        <Text>
          <small>Optimierungsbedarf</small>
        </Text>
      </Flex>
    </AccentBox>
  </ColumnLayout>
</Section>;
47:Tbb6,import {
  ActionGroup,
  AlertBadge,
  Avatar,
  Button,
  ContextMenu,
  Heading,
  IconDomain,
  IconSubdomain,
  MenuItem,
  Text,
  typedList,
} from "@mittwald/flow-react-components";
import {
  type Domain,
  domains,
} from "@/content/03-components/structure/list/examples/domainApi";

export default () => {
  const DomainList = typedList<Domain>();

  return (
    <DomainList.List
      batchSize={4}
      aria-label="Domains"
      defaultViewMode="list"
    >
      <DomainList.StaticData data={domains} />
      <ActionGroup>
        <Button color="accent">Anlegen</Button>
      </ActionGroup>
      <DomainList.Search />
      <DomainList.Filter
        property="type"
        mode="some"
        name="Typ"
      />
      <DomainList.Sorting
        property="hostname"
        name="Domain A bis Z"
        direction="asc"
      />
      <DomainList.Sorting
        property="hostname"
        name="Domain Z bis A"
        direction="desc"
      />
      <DomainList.Table>
        <DomainList.TableHeader>
          <DomainList.TableColumn>
            Name
          </DomainList.TableColumn>
          <DomainList.TableColumn>
            Type
          </DomainList.TableColumn>
          <DomainList.TableColumn>
            TLD
          </DomainList.TableColumn>
          <DomainList.TableColumn>
            Hostname
          </DomainList.TableColumn>
        </DomainList.TableHeader>

        <DomainList.TableBody>
          <DomainList.TableRow>
            <DomainList.TableCell>
              {(domain) => domain.domain}
            </DomainList.TableCell>
            <DomainList.TableCell>
              {(domain) => domain.type}
            </DomainList.TableCell>
            <DomainList.TableCell>
              {(domain) => domain.tld}
            </DomainList.TableCell>
            <DomainList.TableCell>
              {(domain) => domain.hostname}
            </DomainList.TableCell>
          </DomainList.TableRow>
        </DomainList.TableBody>
      </DomainList.Table>
      <DomainList.Item
        textValue={(domain) => domain.domain}
        showTiles
      >
        {(domain) => (
          <DomainList.ItemView>
            <Avatar
              color={
                domain.type === "Domain" ? "blue" : "teal"
              }
            >
              {domain.type === "Domain" ? (
                <IconDomain />
              ) : (
                <IconSubdomain />
              )}
            </Avatar>
            <Heading>
              {domain.hostname}
              {!domain.verified && (
                <AlertBadge status="warning">
                  Unverifiziert
                </AlertBadge>
              )}
            </Heading>
            <Text>{domain.type}</Text>

            <ContextMenu>
              <MenuItem>Details anzeigen</MenuItem>
              <MenuItem>Löschen</MenuItem>
            </ContextMenu>
          </DomainList.ItemView>
        )}
      </DomainList.Item>
    </DomainList.List>
  );
};
48:T6b3,import {
  AlertBadge,
  Avatar,
  ContextMenu,
  Heading,
  IconDomain,
  IconSubdomain,
  MenuItem,
  Text,
  typedList,
} from "@mittwald/flow-react-components";
import {
  type Domain,
  domains,
} from "@/content/03-components/structure/list/examples/domainApi";

export default () => {
  const DomainList = typedList<Domain>();

  return (
    <DomainList.List batchSize={2} aria-label="Domains">
      <DomainList.StaticData data={domains} />
      <DomainList.Filter
        property="verified"
        mode="some"
        name="Status"
        values={["Verifiziert", "Unverifiziert"]}
        matcher={(filterValue, verified) => {
          return filterValue === "Verifiziert"
            ? verified
            : !verified;
        }}
      />
      <DomainList.Item
        textValue={(domain) => domain.domain}
      >
        {(domain) => (
          <DomainList.ItemView>
            <Avatar
              color={
                domain.type === "Domain" ? "blue" : "teal"
              }
            >
              {domain.type === "Domain" ? (
                <IconDomain />
              ) : (
                <IconSubdomain />
              )}
            </Avatar>
            <Heading>
              {domain.hostname}
              {!domain.verified && (
                <AlertBadge status="warning">
                  Unverifiziert
                </AlertBadge>
              )}
            </Heading>
            <Text>{domain.type}</Text>

            <ContextMenu>
              <MenuItem>Details anzeigen</MenuItem>
              <MenuItem>Löschen</MenuItem>
            </ContextMenu>
          </DomainList.ItemView>
        )}
      </DomainList.Item>
    </DomainList.List>
  );
};
49:T798,import {
  AlertBadge,
  Avatar,
  ContextMenu,
  Heading,
  IconDomain,
  IconSubdomain,
  MenuItem,
  Text,
  typedList,
} from "@mittwald/flow-react-components";
import {
  type Domain,
  domains,
} from "@/content/03-components/structure/list/examples/domainApi";

export default () => {
  const DomainList = typedList<Domain>();

  return (
    <DomainList.List batchSize={2} aria-label="Domains">
      <DomainList.StaticData data={domains} />
      <DomainList.Filter
        property="verified"
        mode="some"
        name="Status"
        values={["Verifiziert", "Unverifiziert"]}
        matcher={(filterValue, verified) => {
          return filterValue === "Verifiziert"
            ? verified
            : !verified;
        }}
      />
      <DomainList.Filter
        property="id"
        mode="some"
        name="Filter"
        values={[
          "SSL Zertifikat abgelaufen",
          "Kein Ziel hinterlegt",
        ]}
        matcher={() => true}
      />
      <DomainList.Item
        textValue={(domain) => domain.domain}
      >
        {(domain) => (
          <DomainList.ItemView>
            <Avatar
              color={
                domain.type === "Domain" ? "blue" : "teal"
              }
            >
              {domain.type === "Domain" ? (
                <IconDomain />
              ) : (
                <IconSubdomain />
              )}
            </Avatar>
            <Heading>
              {domain.hostname}
              {!domain.verified && (
                <AlertBadge status="warning">
                  Unverifiziert
                </AlertBadge>
              )}
            </Heading>
            <Text>{domain.type}</Text>

            <ContextMenu>
              <MenuItem>Details anzeigen</MenuItem>
              <MenuItem>Löschen</MenuItem>
            </ContextMenu>
          </DomainList.ItemView>
        )}
      </DomainList.Item>
    </DomainList.List>
  );
};
4a:T430,import {
  ActionGroup,
  Avatar,
  Button,
  Content,
  Heading,
  IconDomain,
  typedList,
} from "@mittwald/flow-react-components";
import {
  type Domain,
  domains,
} from "@/content/03-components/structure/list/examples/domainApi";

export default () => {
  const List = typedList<Domain>();

  return (
    <List.List
      batchSize={2}
      hidePagination
      aria-label="Domains"
    >
      <List.StaticData data={domains} />
      <List.Item textValue={(domain) => domain.domain}>
        {(domain) => (
          <List.ItemView>
            <Avatar>
              <IconDomain />
            </Avatar>
            <Heading>{domain.hostname}</Heading>

            <Content>
              <ActionGroup>
                <Button variant="soft" color="secondary">
                  Bearbeiten
                </Button>
                <Button variant="soft" color="danger">
                  Löschen
                </Button>
              </ActionGroup>
            </Content>
          </List.ItemView>
        )}
      </List.Item>
    </List.List>
  );
};
4b:Ta39,import {
  Avatar,
  Checkbox,
  Heading,
  IconDomain,
  Text,
  typedList,
} from "@mittwald/flow-react-components";
import {
  type Domain,
  domains,
} from "@/content/03-components/structure/list/examples/domainApi";
import { useState } from "react";

export default () => {
  const List = typedList<Domain>();

  const [selectedDomains, setSelectedDomains] = useState<
    Domain[]
  >([]);

  const onSelected = (
    domain: Domain,
    selected: boolean,
  ) => {
    if (selected) {
      setSelectedDomains((prev) => [...prev, domain]);
    } else {
      setSelectedDomains((prev) =>
        prev.filter((d) => d.id !== domain.id),
      );
    }
  };

  const isSelected = (domain: Domain) => {
    return (
      selectedDomains.find((d) => d.id === domain.id) !==
      undefined
    );
  };

  return (
    <List.List
      hidePagination
      batchSize={2}
      aria-label="Domains"
      onAction={(domain) => {
        onSelected(domain, !isSelected(domain));
      }}
    >
      <List.StaticData data={domains} />
      <List.Item
        showTiles
        textValue={(domain) => domain.hostname}
      >
        {(domain) => (
          <List.ItemView>
            <Checkbox
              isSelected={isSelected(domain)}
              onChange={(value) =>
                onSelected(domain, value)
              }
              aria-label={`${domain.hostname} auswählen`}
            />
            <Avatar>
              <IconDomain />
            </Avatar>
            <Heading>{domain.hostname}</Heading>
            <Text>{domain.type}</Text>
          </List.ItemView>
        )}
      </List.Item>

      <List.Table>
        <List.TableHeader>
          <List.TableColumn>
            <Checkbox
              aria-label="Alle auswählen"
              onChange={(v) =>
                setSelectedDomains(v ? domains : [])
              }
            />
          </List.TableColumn>
          <List.TableColumn>Domain</List.TableColumn>
        </List.TableHeader>
        <List.TableBody>
          <List.TableRow>
            <List.TableCell>
              {(domain) => (
                <Checkbox
                  isSelected={isSelected(domain)}
                  onChange={(value) =>
                    onSelected(domain, value)
                  }
                  aria-label={`${domain.hostname} auswählen`}
                />
              )}
            </List.TableCell>
            <List.TableCell>
              {(domain) => domain.hostname}
            </List.TableCell>
          </List.TableRow>
        </List.TableBody>
      </List.Table>
    </List.List>
  );
};
4c:T4d5,import {
  Avatar,
  Content,
  ContextMenu,
  Heading,
  IconEmail,
  Label,
  MenuItem,
  ProgressBar,
  typedList,
} from "@mittwald/flow-react-components";

export default () => {
  const List = typedList<{ mail: string }>();

  return (
    <div style={{ width: 400 }}>
      <List.List
        batchSize={2}
        aria-label="E-Mail-Adressen"
        hidePagination
      >
        <List.StaticData
          data={[
            { mail: "john@doe.com" },
            { mail: "max@mustermann.de" },
          ]}
        />
        <List.Item textValue={(mail) => mail.mail}>
          {(mail) => (
            <List.ItemView
              l={[3, 1]}
              m={[2, 1]}
              s={[1, null]}
            >
              <Avatar>
                <IconEmail />
              </Avatar>
              <Heading>{mail.mail}</Heading>

              <Content>
                <ProgressBar size="s" value={50}>
                  <Label>Speicherplatz</Label>
                </ProgressBar>
              </Content>

              <ContextMenu>
                <MenuItem>Details anzeigen</MenuItem>
              </ContextMenu>
            </List.ItemView>
          )}
        </List.Item>
      </List.List>
    </div>
  );
};
4d:T430,import {
  Avatar,
  Content,
  ContextMenu,
  Heading,
  IconEmail,
  Label,
  MenuItem,
  ProgressBar,
  typedList,
} from "@mittwald/flow-react-components";

export default () => {
  const List = typedList<{ mail: string }>();

  return (
    <List.List
      batchSize={2}
      aria-label="E-Mail-Adressen"
      hidePagination
    >
      <List.StaticData
        data={[
          { mail: "john@doe.com" },
          { mail: "max@mustermann.de" },
        ]}
      />
      <List.Item textValue={(mail) => mail.mail}>
        {(mail) => (
          <List.ItemView l={[3, 1]} m={[2, 1]} s={[1]}>
            <Avatar>
              <IconEmail />
            </Avatar>
            <Heading>{mail.mail}</Heading>

            <Content>
              <ProgressBar size="s" value={50}>
                <Label>Speicherplatz</Label>
              </ProgressBar>
            </Content>

            <ContextMenu>
              <MenuItem>Details anzeigen</MenuItem>
            </ContextMenu>
          </List.ItemView>
        )}
      </List.Item>
    </List.List>
  );
};
4e:Tcfd,import {
  ActionGroup,
  AlertBadge,
  Avatar,
  Button,
  ContextMenu,
  Heading,
  IconDomain,
  IconDownload,
  IconSubdomain,
  MenuItem,
  Text,
  typedList,
} from "@mittwald/flow-react-components";
import {
  type Domain,
  domains,
} from "@/content/03-components/structure/list/examples/domainApi";

export default () => {
  const DomainList = typedList<Domain>();

  return (
    <DomainList.List batchSize={2} aria-label="Domains">
      <DomainList.StaticData data={domains} />
      <ActionGroup>
        <Button
          color="secondary"
          variant="soft"
          slot="secondary"
        >
          <IconDownload />
        </Button>
        <Button color="accent">Anlegen</Button>
      </ActionGroup>
      <DomainList.Search />
      <DomainList.Filter
        property="type"
        mode="some"
        name="Type"
      />
      <DomainList.Sorting
        property="hostname"
        name="Domain A bis Z"
        direction="asc"
      />
      <DomainList.Sorting
        property="hostname"
        name="Domain Z bis A"
        direction="desc"
      />
      <DomainList.Sorting
        property="type"
        name="Type A bis Z"
        direction="asc"
      />
      <DomainList.Sorting
        property="type"
        name="Type Z bis A"
        direction="desc"
      />
      <DomainList.Table>
        <DomainList.TableHeader>
          <DomainList.TableColumn>
            Name
          </DomainList.TableColumn>
          <DomainList.TableColumn>
            Type
          </DomainList.TableColumn>
          <DomainList.TableColumn>
            TLD
          </DomainList.TableColumn>
          <DomainList.TableColumn>
            Hostname
          </DomainList.TableColumn>
        </DomainList.TableHeader>

        <DomainList.TableBody>
          <DomainList.TableRow>
            <DomainList.TableCell>
              {(domain) => domain.domain}
            </DomainList.TableCell>
            <DomainList.TableCell>
              {(domain) => domain.type}
            </DomainList.TableCell>
            <DomainList.TableCell>
              {(domain) => domain.tld}
            </DomainList.TableCell>
            <DomainList.TableCell>
              {(domain) => domain.hostname}
            </DomainList.TableCell>
          </DomainList.TableRow>
        </DomainList.TableBody>
      </DomainList.Table>
      <DomainList.Item
        textValue={(domain) => domain.domain}
      >
        {(domain) => (
          <DomainList.ItemView>
            <Avatar
              color={
                domain.type === "Domain" ? "blue" : "teal"
              }
            >
              {domain.type === "Domain" ? (
                <IconDomain />
              ) : (
                <IconSubdomain />
              )}
            </Avatar>
            <Heading>
              {domain.hostname}
              {!domain.verified && (
                <AlertBadge status="warning">
                  Unverifiziert
                </AlertBadge>
              )}
            </Heading>
            <Text>{domain.type}</Text>

            <ContextMenu>
              <MenuItem>Details anzeigen</MenuItem>
              <MenuItem>Löschen</MenuItem>
            </ContextMenu>
          </DomainList.ItemView>
        )}
      </DomainList.Item>
    </DomainList.List>
  );
};
4f:T5a8,import {
  AlertBadge,
  Avatar,
  ContextMenu,
  Heading,
  IconDomain,
  IconSubdomain,
  MenuItem,
  Text,
  typedList,
} from "@mittwald/flow-react-components";
import {
  type Domain,
  domains,
} from "@/content/03-components/structure/list/examples/domainApi";

export default () => {
  const DomainList = typedList<Domain>();

  return (
    <DomainList.List
      batchSize={4}
      aria-label="Domains"
      hidePagination
    >
      <DomainList.StaticData data={domains} />

      <DomainList.Item
        textValue={(domain) => domain.domain}
      >
        {(domain) => (
          <DomainList.ItemView>
            <Avatar
              color={
                domain.type === "Domain" ? "blue" : "teal"
              }
            >
              {domain.type === "Domain" ? (
                <IconDomain />
              ) : (
                <IconSubdomain />
              )}
            </Avatar>
            <Heading>
              {domain.hostname}
              {!domain.verified && (
                <AlertBadge status="warning">
                  Unverifiziert
                </AlertBadge>
              )}
            </Heading>
            <Text>{domain.type}</Text>

            <ContextMenu>
              <MenuItem>Details anzeigen</MenuItem>
              <MenuItem>Löschen</MenuItem>
            </ContextMenu>
          </DomainList.ItemView>
        )}
      </DomainList.Item>
    </DomainList.List>
  );
};
50:T5d8,import { typedList } from "@mittwald/flow-react-components";
import {
  type Domain,
  domains,
} from "@/content/03-components/structure/list/examples/domainApi";

export default () => {
  const DomainList = typedList<Domain>();

  return (
    <DomainList.List
      batchSize={4}
      defaultViewMode="table"
      aria-label="Domains"
      hidePagination
    >
      <DomainList.StaticData data={domains} />
      <DomainList.Table>
        <DomainList.TableHeader>
          <DomainList.TableColumn>
            Name
          </DomainList.TableColumn>
          <DomainList.TableColumn>
            Type
          </DomainList.TableColumn>
          <DomainList.TableColumn>
            TLD
          </DomainList.TableColumn>
          <DomainList.TableColumn>
            Hostname
          </DomainList.TableColumn>
        </DomainList.TableHeader>

        <DomainList.TableBody>
          <DomainList.TableRow>
            <DomainList.TableCell>
              {(domain) => domain.domain}
            </DomainList.TableCell>
            <DomainList.TableCell>
              {(domain) => domain.type}
            </DomainList.TableCell>
            <DomainList.TableCell>
              {(domain) => domain.tld}
            </DomainList.TableCell>
            <DomainList.TableCell>
              {(domain) => domain.hostname}
            </DomainList.TableCell>
          </DomainList.TableRow>
        </DomainList.TableBody>
      </DomainList.Table>
    </DomainList.List>
  );
};
51:T5f0,import {
  AlertBadge,
  Avatar,
  ContextMenu,
  Heading,
  IconDomain,
  IconSubdomain,
  MenuItem,
  Text,
  typedList,
} from "@mittwald/flow-react-components";
import {
  type Domain,
  domains,
} from "@/content/03-components/structure/list/examples/domainApi";

export default () => {
  const DomainList = typedList<Domain>();

  return (
    <DomainList.List
      batchSize={4}
      aria-label="Domains"
      hidePagination
      defaultViewMode="tiles"
    >
      <DomainList.StaticData data={domains} />
      <DomainList.Item
        textValue={(domain) => domain.domain}
        showTiles
        showList={false}
      >
        {(domain) => (
          <DomainList.ItemView>
            <Avatar
              color={
                domain.type === "Domain" ? "blue" : "teal"
              }
            >
              {domain.type === "Domain" ? (
                <IconDomain />
              ) : (
                <IconSubdomain />
              )}
            </Avatar>
            <Heading>
              {domain.hostname}
              {!domain.verified && (
                <AlertBadge status="warning">
                  Unverifiziert
                </AlertBadge>
              )}
            </Heading>
            <Text>{domain.type}</Text>

            <ContextMenu>
              <MenuItem>Details anzeigen</MenuItem>
              <MenuItem>Löschen</MenuItem>
            </ContextMenu>
          </DomainList.ItemView>
        )}
      </DomainList.Item>
    </DomainList.List>
  );
};
52:T79a,import {
  AlertBadge,
  Avatar,
  ContextMenu,
  Heading,
  IconDomain,
  IconSubdomain,
  MenuItem,
  Text,
  typedList,
} from "@mittwald/flow-react-components";
import {
  type Domain,
  domains,
} from "@/content/03-components/structure/list/examples/domainApi";

export default () => {
  const DomainList = typedList<Domain>();

  return (
    <DomainList.List batchSize={5} aria-label="Domains">
      <DomainList.StaticData data={domains} />
      <DomainList.Filter
        property="type"
        mode="some"
        name="Type"
        values={["Domain", "Subdomain"]}
        defaultSelected={["Domain"]}
      />
      <DomainList.Filter
        property="verified"
        mode="some"
        name="Verifizierung"
        matcher={(filterValue, propertyValue) =>
          filterValue === "Verifiziert"
            ? propertyValue
            : !propertyValue
        }
        defaultSelected={["Unverifiziert"]}
        values={["Verifiziert", "Unverifiziert"]}
      />
      <DomainList.Item
        textValue={(domain) => domain.domain}
      >
        {(domain) => (
          <DomainList.ItemView>
            <Avatar
              color={
                domain.type === "Domain" ? "blue" : "teal"
              }
            >
              {domain.type === "Domain" ? (
                <IconDomain />
              ) : (
                <IconSubdomain />
              )}
            </Avatar>
            <Heading>
              {domain.hostname}
              {!domain.verified && (
                <AlertBadge status="warning">
                  Unverifiziert
                </AlertBadge>
              )}
            </Heading>
            <Text>{domain.type}</Text>

            <ContextMenu>
              <MenuItem>Details anzeigen</MenuItem>
              <MenuItem>Löschen</MenuItem>
            </ContextMenu>
          </DomainList.ItemView>
        )}
      </DomainList.Item>
    </DomainList.List>
  );
};
53:T8b8,import {
  AlertBadge,
  Avatar,
  ContextMenu,
  Heading,
  IconDomain,
  IconSubdomain,
  MenuItem,
  Text,
  typedList,
} from "@mittwald/flow-react-components";
import {
  type Domain,
  domains,
} from "@/content/03-components/structure/list/examples/domainApi";

export default () => {
  const DomainList = typedList<Domain>();

  return (
    <DomainList.List batchSize={5} aria-label="Domains">
      <DomainList.StaticData data={domains} />
      <DomainList.Filter
        property="type"
        mode="some"
        name="Type"
        matcher={(filterValue, propertyValue) =>
          filterValue === "Type Domain"
            ? propertyValue === "Domain"
            : propertyValue === "Subdomain"
        }
        values={["Type Domain", "Type Subdomain"]}
        defaultSelected={["Type Domain"]}
      />
      <DomainList.Filter
        property="verified"
        mode="some"
        name="Verifizierung"
        matcher={(filterValue, propertyValue) =>
          filterValue === "Verifizierung Verifiziert"
            ? propertyValue
            : !propertyValue
        }
        defaultSelected={["Verifizierung Unverifiziert"]}
        values={[
          "Verifizierung Verifiziert",
          "Verifizierung Unverifiziert",
        ]}
      />
      <DomainList.Item
        textValue={(domain) => domain.domain}
      >
        {(domain) => (
          <DomainList.ItemView>
            <Avatar
              color={
                domain.type === "Domain" ? "blue" : "teal"
              }
            >
              {domain.type === "Domain" ? (
                <IconDomain />
              ) : (
                <IconSubdomain />
              )}
            </Avatar>
            <Heading>
              {domain.hostname}
              {!domain.verified && (
                <AlertBadge status="warning">
                  Unverifiziert
                </AlertBadge>
              )}
            </Heading>
            <Text>{domain.type}</Text>

            <ContextMenu>
              <MenuItem>Details anzeigen</MenuItem>
              <MenuItem>Löschen</MenuItem>
            </ContextMenu>
          </DomainList.ItemView>
        )}
      </DomainList.Item>
    </DomainList.List>
  );
};
54:T75a,import {
  type Domain,
  domains,
} from "@/content/03-components/structure/list/examples/domainApi";
import {
  AlertBadge,
  Avatar,
  ContextMenu,
  Heading,
  IconDomain,
  IconSubdomain,
  MenuItem,
  Text,
  typedList,
} from "@mittwald/flow-react-components";

export default () => {
  const DomainList = typedList<Domain>();

  return (
    <DomainList.List batchSize={5} aria-label="Domains">
      <DomainList.StaticData data={domains} />
      <DomainList.Sorting
        property="hostname"
        name="Name A bis Z"
        direction="asc"
      />
      <DomainList.Sorting
        property="hostname"
        name="Name Z bis A"
        direction="desc"
        defaultEnabled
      />
      <DomainList.Sorting
        property="tld"
        name="TLD A bis Z"
        direction="asc"
      />
      <DomainList.Sorting
        property="tld"
        name="TLD Z bis A"
        direction="desc"
      />
      <DomainList.Item
        textValue={(domain) => domain.domain}
      >
        {(domain) => (
          <DomainList.ItemView>
            <Avatar
              color={
                domain.type === "Domain" ? "blue" : "teal"
              }
            >
              {domain.type === "Domain" ? (
                <IconDomain />
              ) : (
                <IconSubdomain />
              )}
            </Avatar>
            <Heading>
              {domain.hostname}
              {!domain.verified && (
                <AlertBadge status="warning">
                  Unverifiziert
                </AlertBadge>
              )}
            </Heading>
            <Text>{domain.type}</Text>

            <ContextMenu>
              <MenuItem>Details anzeigen</MenuItem>
              <MenuItem>Löschen</MenuItem>
            </ContextMenu>
          </DomainList.ItemView>
        )}
      </DomainList.Item>
    </DomainList.List>
  );
};
55:T620,import {
  AlertBadge,
  Avatar,
  ContextMenu,
  Heading,
  IconDomain,
  IconSubdomain,
  MenuItem,
  Text,
  typedList,
} from "@mittwald/flow-react-components";
import {
  type Domain,
  domains,
} from "@/content/03-components/structure/list/examples/domainApi";

export default () => {
  const DomainList = typedList<Domain>();

  return (
    <DomainList.List batchSize={5} aria-label="Domains">
      <DomainList.StaticData data={domains} />
      <DomainList.Sorting
        property="domain"
        name="Name"
        defaultEnabled
      />
      <DomainList.Sorting property="tld" name="TLD" />
      <DomainList.Item
        textValue={(domain) => domain.domain}
      >
        {(domain) => (
          <DomainList.ItemView>
            <Avatar
              color={
                domain.type === "Domain" ? "blue" : "teal"
              }
            >
              {domain.type === "Domain" ? (
                <IconDomain />
              ) : (
                <IconSubdomain />
              )}
            </Avatar>
            <Heading>
              {domain.hostname}
              {!domain.verified && (
                <AlertBadge status="warning">
                  Unverifiziert
                </AlertBadge>
              )}
            </Heading>
            <Text>{domain.type}</Text>

            <ContextMenu>
              <MenuItem>Details anzeigen</MenuItem>
              <MenuItem>Löschen</MenuItem>
            </ContextMenu>
          </DomainList.ItemView>
        )}
      </DomainList.Item>
    </DomainList.List>
  );
};
56:T415,import {
  Flex,
  Heading,
  ListItemView,
  ListSummary,
  Text,
  typedList,
} from "@mittwald/flow-react-components";

export default () => {
  const InvoiceList = typedList<{
    id: string;
    amount: string;
  }>();

  return (
    <InvoiceList.List
      batchSize={2}
      hidePagination
      aria-label="Rechnungen"
    >
      <ListSummary position="bottom">
        <Flex justify="end">
          <Text>
            <b>Gesamt: 37,00 €</b>
          </Text>
        </Flex>
      </ListSummary>
      <InvoiceList.StaticData
        data={[
          {
            id: "Rechnung 1",
            amount: "25,00 €",
          },
          {
            id: "Rechnung 2",
            amount: "12,00 €",
          },
        ]}
      />

      <InvoiceList.Item textValue={(invoice) => invoice.id}>
        {(invoice) => (
          <ListItemView>
            <Heading>{invoice.id}</Heading>
            <Text>{invoice.amount}</Text>
          </ListItemView>
        )}
      </InvoiceList.Item>
    </InvoiceList.List>
  );
};
57:T486,import {
  AlertBadge,
  Button,
  ColumnLayout,
  Content,
  CopyButton,
  Header,
  Heading,
  IconContextMenu,
  IconExternalLink,
  Label,
  LabeledValue,
  Link,
  Section,
  Text,
} from "@mittwald/flow-react-components";

<Section>
  <Header>
    <Heading>
      Mein Projekt
      <AlertBadge status="danger">
        Fehlende Vertragspartnerdaten
      </AlertBadge>
    </Heading>
    <Button
      variant="soft"
      color="secondary"
      aria-label="Weitere Aktionen anzeigen"
    >
      <IconContextMenu />
    </Button>
    <Button variant="soft" color="secondary">
      Datenbank migrieren
    </Button>
  </Header>

  <ColumnLayout>
    <LabeledValue>
      <Label>Projektname</Label>
      <Content>Dolce Vita</Content>
    </LabeledValue>
    <LabeledValue>
      <Label>Short-ID</Label>
      <Content>p-lol3qe</Content>
      <CopyButton text="p-lol3qe" />
    </LabeledValue>
    <LabeledValue>
      <Label>Projektdomain</Label>
      <Link>
        <Text>p-lol3qe.project.space</Text>
        <IconExternalLink />
      </Link>
      <CopyButton text="p-lol3qe.project.space" />
    </LabeledValue>
  </ColumnLayout>
</Section>;
58:T504,import {
  Button,
  ColumnLayout,
  Content,
  ContextMenu,
  ContextMenuTrigger,
  CopyButton,
  Header,
  Heading,
  IconContextMenu,
  IconExternalLink,
  Label,
  LabeledValue,
  Link,
  MenuItem,
  Section,
  Text,
} from "@mittwald/flow-react-components";

<Section>
  <Header>
    <Heading>Mein Projekt</Heading>

    <ContextMenuTrigger>
      <Button
        variant="soft"
        color="secondary"
        aria-label="Weitere Aktionen anzeigen"
      >
        <IconContextMenu />
      </Button>
      <ContextMenu aria-label="Weitere Aktionen">
        <MenuItem>Datenbank migrieren</MenuItem>
        <MenuItem>Volume migrieren</MenuItem>
      </ContextMenu>
    </ContextMenuTrigger>

    <Button color="danger">Deaktivieren</Button>
  </Header>

  <ColumnLayout>
    <LabeledValue>
      <Label>Projektname</Label>
      <Content>Dolce Vita</Content>
    </LabeledValue>
    <LabeledValue>
      <Label>Short-ID</Label>
      <Content>p-lol3qe</Content>
      <CopyButton text="p-lol3qe" />
    </LabeledValue>
    <LabeledValue>
      <Label>Projektdomain</Label>
      <Link>
        <Text>p-lol3qe.project.space</Text>
        <IconExternalLink />
      </Link>
      <CopyButton text="p-lol3qe.project.space" />
    </LabeledValue>
  </ColumnLayout>
</Section>;
59:T484,import {
  InlineCode,
  Table,
  TableBody,
  TableCell,
  TableColumn,
  TableHeader,
  TableRow,
} from "@mittwald/flow-react-components";

<Table aria-label="Button Props">
  <TableHeader>
    <TableColumn>Name</TableColumn>
    <TableColumn>Type</TableColumn>
    <TableColumn>Default</TableColumn>
    <TableColumn>Description</TableColumn>
  </TableHeader>
  <TableBody>
    <TableRow>
      <TableCell>
        <InlineCode>color</InlineCode>
      </TableCell>
      <TableCell>
        primary | accent | secondary | danger
      </TableCell>
      <TableCell>primary</TableCell>
      <TableCell>The color of the button</TableCell>
    </TableRow>
    <TableRow>
      <TableCell>
        <InlineCode>variant</InlineCode>
      </TableCell>
      <TableCell>plain | solid | soft</TableCell>
      <TableCell>solid</TableCell>
      <TableCell>The variant of the button</TableCell>
    </TableRow>
    <TableRow>
      <TableCell>
        <InlineCode>size</InlineCode>
      </TableCell>
      <TableCell>m | s</TableCell>
      <TableCell>m</TableCell>
      <TableCell>The size of the button</TableCell>
    </TableRow>
  </TableBody>
</Table>;
2:["$","html",null,{"lang":"de","children":["$","body",null,{"className":"flow layout_body__oiEIT","children":["$","$L10",null,{"children":[["$","$L11",null,{}],["$","$L12",null,{"children":[["$","$L13",null,{"src":"/flow-previews/docs/2065/merge/_next/static/media/flow-wave.a8c69672.svg","className":"layout_wave__G1i1s"}],"$L14",["$","div",null,{"className":"layout_wrapper__L7TNG","children":[["$","$L15",null,{"docs":[{"mdxSource":{"compiledSource":"$16","frontmatter":{"description":"Willkommen in der Flow Dokumentation!"},"scope":{}},"examples":{},"slugs":["01-get-started","installation"],"filename":"01-get-started/installation/index.mdx","anchors":["Installation der Flow React Component Library","Styles importieren"]},{"mdxSource":{"compiledSource":"$17","frontmatter":{},"scope":{}},"examples":{"composition":"import ExampleSvg from \"@/content/01-get-started/stylesheet/examples/components/ExampleSvg\";\n\n<aside className=\"flow--alert\">\n  <h3 className=\"flow--heading flow--heading--h3 flow--alert--heading\">\n    <ExampleSvg className=\"flow--icon flow--alert-icon\" />\n    E-Mail Adresse wurde archiviert\n  </h3>\n  <div className=\"flow--alert--content\">\n    Da deine Domain gelöscht wurde, wurde diese\n    E-Mail-Adresse archiviert. Um E-Mails empfangen und\n    senden zu können musst du die Adresse wieder umbenennen.\n  </div>\n</aside>;\n","multiple-variants":"<button className=\"flow--button flow--button--accent flow--button--size-s\">\n  Small Accented Button\n</button>;\n","variants":"<button className=\"flow--button flow--button--accent\">\n  Accented Button\n</button>;\n"},"slugs":["01-get-started","stylesheet"],"filename":"01-get-started/stylesheet/index.mdx","anchors":["Installation des Standalone Stylesheets","Styles importieren","Anwendung des Stylesheets"]},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    p: \"p\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsx(_components.p, {\n    children: \"Design Tokens übersetzen grundlegende Designentscheidungen wie Farben, Abstände\\nund mehr in eine einheitliche Sprache. Entwickler und Designer nutzen diese\\nSprache, um ein konsistentes, skalierbares und wiederverwendbares Design in der\\ngesamten Benutzeroberfläche sicherzustellen.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{"title":"Design Tokens"},"scope":{}},"examples":{"schema":"import {\n  Badge,\n  ColumnLayout,\n  Text,\n} from \"@mittwald/flow-react-components\";\n\n<ColumnLayout m={[1, 1, 1]}>\n  <Text>\n    <Badge color=\"teal\">Context</Badge>\n    Einordnung <br />\n    <small>z. B. Farbe, Component</small>\n  </Text>\n  <Text>\n    <Badge color=\"orange\">Common Unit</Badge>\n    Kategorie <br />\n    <small>z. B. Variante, Sizing, Styling</small>\n  </Text>\n  <Text>\n    <Badge color=\"lilac\">Clarification</Badge>\n    Spezifizierung <br />\n    <small>z. B. Farbwert, State</small>\n  </Text>\n</ColumnLayout>;\n"},"slugs":["02-foundations","01-design","01-design-tokens"],"filename":"02-foundations/01-design/01-design-tokens/index.mdx","anchors":[]},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    p: \"p\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsx(_components.p, {\n    children: \"Ausgewählte Colors verkörpern die Marke und dienen gleichzeitig als wesentliches\\nKommunikationsmittel in der Benutzeroberfläche. Sie lenken die Aufmerksamkeit\\ndes Users und vermitteln gezielt wichtige Informationen wie z. B. den Status.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{"title":"Color"},"scope":{}},"examples":{},"slugs":["02-foundations","01-design","02-colors"],"filename":"02-foundations/01-design/02-colors/index.mdx","anchors":[]},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    p: \"p\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsx(_components.p, {\n    children: \"Typography strukturiert den Inhaltsbereich, indem sie eine visuelle Hierarchie\\nschafft. Darüber hinaus erhöht eine gute Typography die Lesbarkeit und stärkt\\ndie Marke im Erscheinungsbild.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{"title":"Typography"},"scope":{}},"examples":{},"slugs":["02-foundations","01-design","05-typography"],"filename":"02-foundations/01-design/05-typography/index.mdx","anchors":[]},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    p: \"p\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsx(_components.p, {\n    children: \"Das Layout organisiert die Benutzeroberfläche in einer logischen und\\nhierarchischen Struktur, um die Aufmerksamkeit des Users gezielt zu lenken.\\nDabei werden Elemente wie Header, Navigation und Content-Bereich berücksichtigt.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{"title":"Layout"},"scope":{}},"examples":{"general-layout":"$18","mStudio-layout":"$19"},"slugs":["02-foundations","02-structure","01-layout"],"filename":"02-foundations/02-structure/01-layout/index.mdx","anchors":[]},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    p: \"p\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsx(_components.p, {\n    children: \"Spacing definiert die vertikalen und horizontalen Abstände zwischen Elementen\\nund sorgt so für ein harmonisches Layout.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{"title":"Spacing"},"scope":{}},"examples":{"falseSpacing":"import {\n  Avatar,\n  Content,\n  Initials,\n  Text,\n} from \"@mittwald/flow-react-components\";\n\n<Content\n  style={{\n    display: \"grid\",\n    gridTemplateAreas: '\"avatar title\" \"avatar subtitle\"',\n    gridTemplateColumns: \"auto 1fr\",\n    alignItems: \"center\",\n    columnGap: \"32px\",\n    width: \"max-content\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n  }}\n>\n  <div\n    style={{\n      gridArea: \"avatar\",\n    }}\n  >\n    <Avatar>\n      <Initials>Sven Fuchs</Initials>\n    </Avatar>\n  </div>\n  <Text\n    style={{\n      gridArea: \"title\",\n    }}\n  >\n    <b style={{ margin: 0 }}>Sven Fuchs</b>\n  </Text>\n  <Text\n    style={{\n      gridArea: \"subtitle\",\n      fontSize: \"14px\",\n    }}\n  >\n    Projektentwickler\n  </Text>\n</Content>;\n","rightSpacing":"import {\n  Avatar,\n  Content,\n  Initials,\n  Text,\n} from \"@mittwald/flow-react-components\";\n\n<Content\n  style={{\n    display: \"grid\",\n    gridTemplateAreas: '\"avatar title\" \"avatar subtitle\"',\n    gridTemplateColumns: \"auto 1fr\",\n    alignItems: \"center\",\n    columnGap: \"8px\",\n    width: \"max-content\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n  }}\n>\n  <div\n    style={{\n      gridArea: \"avatar\",\n    }}\n  >\n    <Avatar>\n      <Initials>Sven Fuchs</Initials>\n    </Avatar>\n  </div>\n  <Text\n    style={{\n      gridArea: \"title\",\n    }}\n  >\n    <b style={{ margin: 0 }}>Sven Fuchs</b>\n  </Text>\n  <Text\n    style={{\n      gridArea: \"subtitle\",\n      fontSize: \"14px\",\n    }}\n  >\n    Projektentwickler\n  </Text>\n</Content>;\n"},"slugs":["02-foundations","02-structure","02-spacing"],"filename":"02-foundations/02-structure/02-spacing/index.mdx","anchors":[]},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    p: \"p\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsx(_components.p, {\n    children: \"Erfahre, was unsere Sprache auszeichnet und an welchen Leitlinien du dich bei\\ndeinen Texten orientieren kannst. Außerdem erklärt unser Glossar alle Begriffe,\\nauf die du im mStudio Kontext treffen kannst.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{"title":"Sprach-Guide"},"scope":{}},"examples":{},"slugs":["02-foundations","03-content-guidelines","01-sprach-guide"],"filename":"02-foundations/03-content-guidelines/01-sprach-guide/index.mdx","anchors":[]},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    p: \"p\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsx(_components.p, {\n    children: \"Fehler entstehen, wenn User auf unerwartete Ergebnisse stoßen – das führt oft zu\\nFrustration, Verwirrung und zusätzlichem Aufwand. Daher ist der beste Fehler\\nder, der gar nicht erst auftritt. Sollte dennoch ein Fehler auftreten, muss die\\nFehlermeldung klar, hilfreich und leicht verständlich formuliert sein, um den\\nUser bestmöglich zu unterstützen.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{"title":"Fehlermeldungen"},"scope":{}},"examples":{},"slugs":["02-foundations","03-content-guidelines","02-fehlermeldungen"],"filename":"02-foundations/03-content-guidelines/02-fehlermeldungen/index.mdx","anchors":[]},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    p: \"p\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsx(_components.p, {\n    children: \"Ein Dashboard präsentiert dem User relevante Informationen übersichtlich in klar abgegrenzten Bereichen auf einer einzigen Oberfläche. Es unterstützt den User dabei, wichtige Daten auf einen Blick zu erfassen. Häufig dient ein Dashboard als Startseite oder zur Darstellung von Analyse-Diagrammen.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{"title":"Dashboard"},"scope":{}},"examples":{"customer-dashboard":"$1a","dashboard":"$1b","project-dashboard":"$1c"},"slugs":["02-foundations","04-ui-patterns","01-dashboard"],"filename":"02-foundations/04-ui-patterns/01-dashboard/index.mdx","anchors":[]},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    p: \"p\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsx(_components.p, {\n    children: \"Anlegen und Bearbeiten sind zentrale Interaktionen im mStudio. Sie dienen dazu,\\nneue Elemente zur Benutzeroberfläche hinzuzufügen oder bestehende Inhalte\\nanzupassen. Damit jeder Prozess von überall aufgerufen werden kann, werden sie\\nin einem Modal platziert.\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{"title":"Anlegen und Bearbeiten"},"scope":{}},"examples":{"app-details":"$1d","app-illustrated-message":"$1e","create-container":"$1f","domain-list":"$20","install-app":"$21","install-extension":"$22","project-illustrated-message":"import {\n  ActionGroup,\n  Button,\n  Heading,\n  IconProject,\n  IllustratedMessage,\n  Text,\n  LayoutCard,\n} from \"@mittwald/flow-react-components\";\n\n<LayoutCard>\n  <IllustratedMessage>\n    <IconProject />\n    <Heading>Erstes Projekt anlegen</Heading>\n    <Text>\n      Du hast noch keine Projekte angelegt! Lege ein Projekt\n      an und schon kannst du mit dem Entwickeln loslegen.\n    </Text>\n\n    <ActionGroup>\n      <Button color=\"secondary\" variant=\"soft\">\n        Tarif bestellen\n      </Button>\n      <Button color=\"accent\">Anlegen</Button>\n    </ActionGroup>\n  </IllustratedMessage>\n</LayoutCard>;\n","project-list":"$23"},"slugs":["02-foundations","04-ui-patterns","02-anlegeprozess"],"filename":"02-foundations/04-ui-patterns/02-anlegeprozess/index.mdx","anchors":[]},{"mdxSource":{"compiledSource":"$24","frontmatter":{"title":"Detailseite"},"scope":{}},"examples":{"detail-page":"$25"},"slugs":["02-foundations","04-ui-patterns","03-struktur"],"filename":"02-foundations/04-ui-patterns/03-struktur/index.mdx","anchors":[]},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true,\n    zoom: 0.7\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"ActionGroup","description":"Die ActionGroup dient dazu, zusammengehörige Actions sinnvoll zu gruppieren. Sie wird beispielsweise in Sections oder Modals verwendet."},"scope":{}},"examples":{"default":"import {\n  ActionGroup,\n  Button,\n} from \"@mittwald/flow-react-components\";\n\n<ActionGroup>\n  <Button color=\"accent\">Organisation erstellen</Button>\n  <Button color=\"secondary\" variant=\"soft\">\n    Abbrechen\n  </Button>\n</ActionGroup>;\n","link":"import {\n  ActionGroup,\n  Button,\n  Link,\n} from \"@mittwald/flow-react-components\";\n\n<ActionGroup>\n  <Link slot=\"abort\">Passwort vergessen?</Link>\n  <Button color=\"accent\">Anmelden</Button>\n</ActionGroup>;\n","slots":"import {\n  ActionGroup,\n  Button,\n} from \"@mittwald/flow-react-components\";\n\n<ActionGroup>\n  <Button color=\"accent\">E-Mail-Addresse anlegen</Button>\n  <Button color=\"secondary\" variant=\"soft\" slot=\"secondary\">\n    Speichern und weitere anlegen\n  </Button>\n  <Button color=\"secondary\" variant=\"soft\">\n    Abbrechen\n  </Button>\n</ActionGroup>;\n"},"slugs":["03-components","actions","action-group"],"filename":"03-components/actions/action-group/index.mdx","anchors":[]},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"Action","description":"Die Action wird um einen Button gelegt, um beispielsweise visuelles Feedback bei asynchronen Aktionen zu ermöglichen oder ein Bestätigungsmodal auszulösen."},"scope":{}},"examples":{"confirmation":"import {\n  Action,\n  ActionGroup,\n  Button,\n  Content,\n  Heading,\n  Modal,\n} from \"@mittwald/flow-react-components\";\nimport { sleepLong } from \"@/content/03-components/actions/action/examples/lib\";\n\n<Action action={sleepLong}>\n  <Modal slot=\"actionConfirm\">\n    <Heading>Projekt löschen</Heading>\n    <Content>\n      Wenn das Projekt &quot;Test&quot; einmal gelöscht ist,\n      kann es nicht wiederhergestellt werden.\n    </Content>\n    <ActionGroup>\n      <Button color=\"danger\">Löschen</Button>\n      <Button color=\"secondary\" variant=\"soft\">\n        Abbrechen\n      </Button>\n    </ActionGroup>\n  </Modal>\n  <Button color=\"danger\">Projekt löschen</Button>\n</Action>;\n","default":"import {\n  Action,\n  Button,\n} from \"@mittwald/flow-react-components\";\nimport { sleep } from \"@/content/03-components/actions/action/examples/lib\";\n\n<Action action={sleep}>\n  <Button color=\"accent\">Speichern</Button>\n</Action>;\n","feedback":"import {\n  Action,\n  Button,\n} from \"@mittwald/flow-react-components\";\n\n<Action\n  action={() => {\n    // do nothing\n  }}\n  showFeedback\n>\n  <Button color=\"accent\">Speichern</Button>\n</Action>;\n","longAction":"import {\n  Action,\n  Button,\n} from \"@mittwald/flow-react-components\";\nimport { sleepLong } from \"@/content/03-components/actions/action/examples/lib\";\n\n<Action action={sleepLong}>\n  <Button color=\"accent\">Speichern</Button>\n</Action>;\n","nested":"import {\n  Action,\n  Button,\n} from \"@mittwald/flow-react-components\";\n\n<Action action={() => console.log(\"close modal\")}>\n  <Action action={() => console.log(\"save\")}>\n    <Button color=\"accent\">Speichern</Button>\n  </Action>\n</Action>;\n"},"slugs":["03-components","actions","action"],"filename":"03-components/actions/action/index.mdx","anchors":[]},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"Button","description":"Mit einem Button können User Aktionen ausführen. Je nach Bedarf kann ein Button – mit Text und/oder mit einem Icon – in verschiedenen Größen und Typen gewählt werden."},"scope":{}},"examples":{"align":"import {\n  Align,\n  Button,\n  Label,\n  TextField,\n} from \"@mittwald/flow-react-components\";\n\n<Align>\n  <TextField>\n    <Label>Weiterleitungsziel</Label>\n  </TextField>\n  <Button>Hinzufügen</Button>\n</Align>;\n","colors":"import { Button } from \"@mittwald/flow-react-components\";\n\n<Row>\n  <Button color=\"primary\">Fortfahren/Aktion</Button>\n  <Button color=\"secondary\">Abbrechen/Zurück</Button>\n  <Button color=\"accent\">Erstellen/Speichern</Button>\n  <Button color=\"danger\">Löschen/Kündigen</Button>\n</Row>;\n","dark":"import { Button } from \"@mittwald/flow-react-components\";\n\n<Row>\n  <Button color=\"dark\">Dark</Button>\n  <Button variant=\"soft\" color=\"dark\">\n    Dark\n  </Button>\n  <Button variant=\"plain\" color=\"dark\">\n    Dark\n  </Button>\n  <Button variant=\"outline\" color=\"dark\">\n    Dark\n  </Button>\n</Row>;\n","default":"import { Button } from \"@mittwald/flow-react-components\";\n\n<Button\n  onPress={() => {\n    alert(\"Button gedrückt\");\n  }}\n>\n  Button\n</Button>;\n","hierarchy-order-do":"import { Button } from \"@mittwald/flow-react-components\";\n\n<Row>\n  <Button variant=\"soft\" color=\"secondary\">\n    Pausieren\n  </Button>\n  <Button color=\"secondary\">Stoppen</Button>\n  <Button>Starten</Button>\n</Row>;\n","hierarchy-order-dont":"import { Button } from \"@mittwald/flow-react-components\";\n\n<Row>\n  <Button color=\"secondary\">Stoppen</Button>\n  <Button variant=\"soft\" color=\"secondary\">\n    Pausieren\n  </Button>\n  <Button>Starten</Button>\n</Row>;\n","hierarchy-soft-do":"import { Button } from \"@mittwald/flow-react-components\";\n\n<Row>\n  <Button variant=\"soft\" color=\"secondary\">\n    Zurück\n  </Button>\n  <Button>Weiter</Button>\n</Row>;\n","hierarchy-solid-do":"import { Button } from \"@mittwald/flow-react-components\";\n\n<Row>\n  <Button color=\"secondary\">\n    Speichern & weitere anlegen\n  </Button>\n  <Button color=\"accent\">Anlegen</Button>\n</Row>;\n","icon-clarity-do":"import {\n  Button,\n  IconFilter,\n  IconSorting,\n  TextField,\n} from \"@mittwald/flow-react-components\";\n\n<Row>\n  <TextField value=\"Suche\" aria-label=\"Suche\" />\n  <Button variant=\"plain\" aria-label=\"Sortierung\">\n    <IconSorting />\n  </Button>\n  <Button variant=\"plain\" aria-label=\"Filter\">\n    <IconFilter />\n  </Button>\n  <Button variant=\"outline\" aria-label=\"Filter\">\n    <IconFilter />\n  </Button>\n</Row>;\n","icon-clarity-dont":"import {\n  Button,\n  Icon,\n  TextField,\n} from \"@mittwald/flow-react-components\";\nimport { IconCat, IconDog } from \"@tabler/icons-react\";\n\n<Row>\n  <TextField value=\"Suche\" aria-label=\"Suche\" />\n  <Button variant=\"plain\" aria-label=\"Katze\">\n    <Icon>\n      <IconCat />\n    </Icon>\n  </Button>\n  <Button variant=\"plain\" aria-label=\"Hund\">\n    <Icon>\n      <IconDog />\n    </Icon>\n  </Button>\n  <Button variant=\"outline\" aria-label=\"Hund\">\n    <Icon>\n      <IconDog />\n    </Icon>\n  </Button>\n</Row>;\n","icon-context-menu-do":"import {\n  Button,\n  ContextMenu,\n  ContextMenuTrigger,\n  Icon,\n  IconChevronDown,\n  IconEmail,\n  MenuItem,\n  Text,\n} from \"@mittwald/flow-react-components\";\nimport { IconAt } from \"@tabler/icons-react\";\n\n<ContextMenuTrigger>\n  <Button color=\"accent\">\n    <Text>E-Mail-Addresse anlegen</Text>\n    <IconChevronDown />\n  </Button>\n  <ContextMenu aria-label=\"E-Mail-Addresse anlegen\">\n    <MenuItem id=\"1\">\n      <Icon>\n        <IconAt />\n      </Icon>\n      <Text>Weiterleitungsaddresse</Text>\n    </MenuItem>\n    <MenuItem id=\"2\">\n      <IconEmail />\n      <Text>E-Mail-Adresse</Text>\n    </MenuItem>\n  </ContextMenu>\n</ContextMenuTrigger>;\n","icon":"import {\n  Button,\n  IconHome,\n} from \"@mittwald/flow-react-components\";\n\n<Row>\n  <Button size=\"s\" aria-label=\"Home\">\n    <IconHome />\n  </Button>\n  <Button aria-label=\"Home\">\n    <IconHome />\n  </Button>\n</Row>;\n","iconText":"import {\n  Button,\n  IconChevronDown,\n  IconClose,\n  Text,\n} from \"@mittwald/flow-react-components\";\n\n<Row>\n  <Button size=\"s\">\n    <Text>E-Mail hinzufügen</Text>\n    <IconChevronDown />\n  </Button>\n  <Button>\n    <Text>E-Mail hinzufügen</Text>\n    <IconChevronDown />\n  </Button>\n  <Button size=\"s\">\n    <Text>Filter</Text>\n    <IconClose />\n  </Button>\n  <Button>\n    <Text>Filter</Text>\n    <IconClose />\n  </Button>\n</Row>;\n","light":"import { Button } from \"@mittwald/flow-react-components\";\n\n<Row>\n  <Button color=\"light\">Light</Button>\n  <Button variant=\"soft\" color=\"light\">\n    Light\n  </Button>\n  <Button variant=\"plain\" color=\"light\">\n    Light\n  </Button>\n  <Button variant=\"outline\" color=\"light\">\n    Light\n  </Button>\n</Row>;\n","mobile-width-group-do":"import {\n  ActionGroup,\n  Button,\n  Heading,\n  Label,\n  TextField,\n} from \"@mittwald/flow-react-components\";\n\n<StaticModal>\n  <header className=\"flow--modal--header\">\n    <Heading>Projekt anlegen</Heading>\n  </header>\n  <div className=\"flow--modal--content\">\n    <TextField>\n      <Label>Projekt Name</Label>\n    </TextField>\n  </div>\n  <ActionGroup className=\"flow--modal--action-group\">\n    <Button>Weiter</Button>\n    <Button variant=\"soft\" color=\"secondary\">\n      Abbrechen\n    </Button>\n  </ActionGroup>\n</StaticModal>;\n","mobile-width-standard-do":"import {\n  Button,\n  HeaderNavigation,\n  Heading,\n  IconMenu,\n  IconSearch,\n  IconSupport,\n  LayoutCard,\n  Section,\n  Text,\n} from \"@mittwald/flow-react-components\";\n\n<Section style={{ height: \"100%\" }}>\n  <HeaderNavigation\n    aria-label=\"Header Navigation\"\n    color=\"light\"\n    style={{ alignSelf: \"flex-end\" }}\n  >\n    <Button>\n      <IconSearch />\n    </Button>\n    <Button>\n      <IconSupport />\n    </Button>\n    <Button>\n      <IconMenu />\n    </Button>\n  </HeaderNavigation>\n  <Button color=\"accent\">Projekt anlegen</Button>\n  <LayoutCard style={{ width: \"100%\", flexGrow: \"1\" }}>\n    <Heading>Projekte</Heading>\n    <Text>...</Text>\n  </LayoutCard>\n</Section>;\n","position-info":"import {\n  Button,\n  Heading,\n  LayoutCard,\n  Section,\n  Text,\n} from \"@mittwald/flow-react-components\";\n\n<Column>\n  <Button color=\"accent\" style={{ alignSelf: \"flex-end\" }}>\n    App anlegen\n  </Button>\n  <LayoutCard style={{ width: \"100%\" }}>\n    <Section>\n      <Heading>Apps</Heading>\n      <Text>...</Text>\n    </Section>\n  </LayoutCard>\n</Column>;\n","sizes-dont":"import { Button } from \"@mittwald/flow-react-components\";\n\n<Row>\n  <Button>Weiter</Button>\n  <Button size=\"s\">Weiter</Button>\n  <Button size=\"s\">Weiter</Button>\n</Row>;\n","sizes":"import { Button } from \"@mittwald/flow-react-components\";\n\n<Row>\n  <Button size=\"s\">Small</Button>\n  <Button>Medium</Button>\n</Row>;\n","states":"import { Button } from \"@mittwald/flow-react-components\";\n\n<Row>\n  <Button isDisabled>Fortfahren/Aktion</Button>\n  <Button isPending>Fortfahren/Aktion</Button>\n  <Button isSucceeded>Fortfahren/Aktion</Button>\n  <Button isFailed>Fortfahren/Aktion</Button>\n</Row>;\n","text-clarity-do":"import {\n  ActionGroup,\n  Button,\n  Heading,\n  Text,\n} from \"@mittwald/flow-react-components\";\n\n<StaticModal>\n  <header className=\"flow--modal--header\">\n    <Heading>\n      Möchtest du die Bestellung wirklich verlassen?\n    </Heading>\n  </header>\n  <div className=\"flow--modal--content\">\n    <Text>\n      Bist du sicher, dass du die Bestellung wirklich\n      verlassen möchtest? Deine eingegebenen Daten werden\n      nicht gespeichert.\n    </Text>\n  </div>\n  <ActionGroup className=\"flow--modal--action-group\">\n    <Button color=\"secondary\" variant=\"soft\">\n      Bestellung fortsetzen\n    </Button>\n    <Button color=\"danger\">Bestellung verlassen</Button>\n  </ActionGroup>\n</StaticModal>;\n","text-clarity-dont":"import {\n  ActionGroup,\n  Button,\n  Heading,\n  Text,\n} from \"@mittwald/flow-react-components\";\n\n<StaticModal>\n  <header className=\"flow--modal--header\">\n    <Heading>\n      Möchtest du die Bestellung wirklich verlassen?\n    </Heading>\n  </header>\n  <div className=\"flow--modal--content\">\n    <Text>\n      Bist du sicher, dass du die Bestellung wirklich\n      verlassen möchtest? Deine eingegebenen Daten werden\n      nicht gespeichert.\n    </Text>\n  </div>\n  <ActionGroup className=\"flow--modal--action-group\">\n    <Button color=\"secondary\" variant=\"soft\">\n      Abbrechen\n    </Button>\n    <Button color=\"danger\">Verlassen</Button>\n  </ActionGroup>\n</StaticModal>;\n","text-length-do":"import { Button } from \"@mittwald/flow-react-components\";\n\n<Button color=\"accent\">Projekt anpassen</Button>;\n","text-length-dont":"import { Button } from \"@mittwald/flow-react-components\";\n\n<Button color=\"accent\">\n  Projekt und\n  <br />\n  Tarif anpassen\n</Button>;\n","variants":"import { Button } from \"@mittwald/flow-react-components\";\n\n<Row>\n  <Button>Solid</Button>\n  <Button variant=\"soft\">Soft</Button>\n  <Button variant=\"plain\">Plain</Button>\n  <Button variant=\"outline\">Outline</Button>\n</Row>;\n"},"slugs":["03-components","actions","button"],"filename":"03-components/actions/button/index.mdx","anchors":[]},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"ContextMenu","description":"Das ContextMenu öffnet ein Popover mit einer Liste von Aktionen oder Links, welches in der Regel über einen Button geöffnet wird."},"scope":{}},"examples":{"avatar":"import {\n  Avatar,\n  Button,\n  ContextMenu,\n  ContextMenuTrigger,\n  Heading,\n  IconCamera,\n  Initials,\n  MenuItem,\n  Section,\n  Separator,\n  Text,\n} from \"@mittwald/flow-react-components\";\n\n<ContextMenuTrigger>\n  <Button>Trigger</Button>\n  <ContextMenu selectionMode=\"navigation\">\n    <Section>\n      <MenuItem>\n        <Avatar>\n          <Initials>Max Mustermann</Initials>\n        </Avatar>\n        <IconCamera />\n      </MenuItem>\n      <Heading>Max Mustermann</Heading>\n    </Section>\n    <Separator />\n    <Section>\n      <MenuItem>\n        <Text>Settings</Text>\n      </MenuItem>\n      <MenuItem>\n        <Text>Logout</Text>\n      </MenuItem>\n    </Section>\n  </ContextMenu>\n</ContextMenuTrigger>;\n","default":"import {\n  Button,\n  ContextMenu,\n  ContextMenuTrigger,\n  MenuItem,\n} from \"@mittwald/flow-react-components\";\n\n<ContextMenuTrigger>\n  <Button>Trigger</Button>\n  <ContextMenu\n    onAction={(id) => {\n      alert(id);\n    }}\n  >\n    <MenuItem id=\"1\">Item 1</MenuItem>\n    <MenuItem id=\"2\">Item 2</MenuItem>\n    <MenuItem id=\"3\">Item 3</MenuItem>\n  </ContextMenu>\n</ContextMenuTrigger>;\n","icon":"import {\n  Button,\n  ContextMenu,\n  ContextMenuTrigger,\n  IconInfo,\n  MenuItem,\n  Text,\n} from \"@mittwald/flow-react-components\";\n\n<ContextMenuTrigger>\n  <Button>Trigger</Button>\n  <ContextMenu\n    onAction={(id) => {\n      alert(id);\n    }}\n  >\n    <MenuItem id=\"1\">\n      <IconInfo />\n      <Text>Item 1</Text>\n    </MenuItem>\n    <MenuItem id=\"2\">\n      <IconInfo />\n      <Text>Item 2</Text>\n    </MenuItem>\n    <MenuItem id=\"3\">\n      <IconInfo />\n      <Text>Item 3</Text>\n    </MenuItem>\n  </ContextMenu>\n</ContextMenuTrigger>;\n","modal":"$26","multi-select":"import {\n  Button,\n  ContextMenu,\n  ContextMenuTrigger,\n  MenuItem,\n} from \"@mittwald/flow-react-components\";\n\n<ContextMenuTrigger>\n  <Button>Trigger</Button>\n  <ContextMenu\n    selectionMode=\"multiple\"\n    defaultSelectedKeys={[\"item2\", \"item3\"]}\n  >\n    <MenuItem id=\"item1\">Item 1</MenuItem>\n    <MenuItem id=\"item2\">Item 2</MenuItem>\n    <MenuItem id=\"item3\">Item 3</MenuItem>\n  </ContextMenu>\n</ContextMenuTrigger>;\n","section":"import {\n  Button,\n  ContextMenu,\n  ContextMenuSection,\n  ContextMenuTrigger,\n  Heading,\n  MenuItem,\n  Separator,\n} from \"@mittwald/flow-react-components\";\n\n<ContextMenuTrigger>\n  <Button>Trigger</Button>\n  <ContextMenu>\n    <ContextMenuSection>\n      <Heading>Section 1</Heading>\n      <MenuItem id=\"1\">Item 1</MenuItem>\n      <MenuItem id=\"2\">Item 2</MenuItem>\n      <MenuItem id=\"3\">Item 3</MenuItem>\n    </ContextMenuSection>\n    <Separator />\n    <ContextMenuSection>\n      <Heading>Section 2</Heading>\n      <MenuItem id=\"4\">Item 4</MenuItem>\n      <MenuItem id=\"5\">Item 5</MenuItem>\n    </ContextMenuSection>\n  </ContextMenu>\n</ContextMenuTrigger>;\n","sectionSelectionMode":"import {\n  Button,\n  ContextMenu,\n  ContextMenuSection,\n  ContextMenuTrigger,\n  MenuItem,\n  Separator,\n} from \"@mittwald/flow-react-components\";\n\n<ContextMenuTrigger>\n  <Button>Trigger</Button>\n  <ContextMenu>\n    <ContextMenuSection selectionMode=\"multiple\">\n      <MenuItem id=\"item1\">Item 1</MenuItem>\n      <MenuItem id=\"item2\">Item 2</MenuItem>\n      <MenuItem id=\"item3\">Item 3</MenuItem>\n    </ContextMenuSection>\n    <Separator />\n    <ContextMenuSection selectionMode=\"single\">\n      <MenuItem id=\"item1\">Item 4</MenuItem>\n      <MenuItem id=\"item2\">Item 5</MenuItem>\n      <MenuItem id=\"item3\">Item 6</MenuItem>\n    </ContextMenuSection>\n  </ContextMenu>\n</ContextMenuTrigger>;\n","separator":"import {\n  Button,\n  ContextMenu,\n  ContextMenuTrigger,\n  MenuItem,\n  Separator,\n} from \"@mittwald/flow-react-components\";\n\n<ContextMenuTrigger>\n  <Button>Trigger</Button>\n  <ContextMenu>\n    <MenuItem id=\"1\">Item 1</MenuItem>\n    <Separator />\n    <MenuItem id=\"2\">Item 2</MenuItem>\n    <MenuItem id=\"3\">Item 3</MenuItem>\n  </ContextMenu>\n</ContextMenuTrigger>;\n","single-select":"import {\n  Button,\n  ContextMenu,\n  ContextMenuTrigger,\n  MenuItem,\n} from \"@mittwald/flow-react-components\";\n\n<ContextMenuTrigger>\n  <Button>Trigger</Button>\n  <ContextMenu\n    selectionMode=\"single\"\n    defaultSelectedKeys={[\"item2\"]}\n  >\n    <MenuItem id=\"item1\">Item 1</MenuItem>\n    <MenuItem id=\"item2\">Item 2</MenuItem>\n    <MenuItem id=\"item3\">Item 3</MenuItem>\n  </ContextMenu>\n</ContextMenuTrigger>;\n","switch":"import {\n  Button,\n  ContextMenu,\n  ContextMenuTrigger,\n  MenuItem,\n} from \"@mittwald/flow-react-components\";\n\n<ContextMenuTrigger>\n  <Button>Trigger</Button>\n  <ContextMenu selectionMode=\"switch\">\n    <MenuItem id=\"item1\">Item 1</MenuItem>\n    <MenuItem id=\"item2\">Item 2</MenuItem>\n    <MenuItem id=\"item3\">Item 3</MenuItem>\n  </ContextMenu>\n</ContextMenuTrigger>;\n","width":"import {\n  Button,\n  ContextMenu,\n  ContextMenuTrigger,\n  MenuItem,\n} from \"@mittwald/flow-react-components\";\n\n<ContextMenuTrigger>\n  <Button>Trigger</Button>\n  <ContextMenu\n    width={300}\n    onAction={(id) => {\n      alert(id);\n    }}\n  >\n    <MenuItem id=\"1\">Mein Projekt</MenuItem>\n    <MenuItem id=\"2\">Mein zweites Projekt</MenuItem>\n    <MenuItem id=\"3\">\n      Mein drittes Projekt mit einem sehr langen Namen\n    </MenuItem>\n  </ContextMenu>\n</ContextMenuTrigger>;\n"},"slugs":["03-components","actions","context-menu"],"filename":"03-components/actions/context-menu/index.mdx","anchors":[]},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"CopyButton","description":"Mit dem CopyButton können Informationen mit einem Klick in die Zwischenablage kopiert werden."},"scope":{}},"examples":{"align":"import {\n  Align,\n  CopyButton,\n  Text,\n} from \"@mittwald/flow-react-components\";\n\n<Align>\n  <Text>mail.agenturserver.de</Text>\n  <CopyButton text=\"mail.agenturserver.de\" />\n</Align>;\n","default":"import { CopyButton } from \"@mittwald/flow-react-components\";\n\n<CopyButton text=\"Kopierter Inhalt\" />;\n"},"slugs":["03-components","actions","copy-button"],"filename":"03-components/actions/copy-button/index.mdx","anchors":[]},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true,\n    example: \"intro\",\n    zoom: 0.8\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"Chat","description":"Der Chat kombiniert den MessageThread mit einer Texteingabe zur Darstellung eines vollständigen Chat-Interfaces."},"scope":{}},"examples":{"default":"$27","form":"$28","intro":"import {\n  Align,\n  Avatar,\n  Button,\n  Chat,\n  Content,\n  Header,\n  Initials,\n  Message,\n  MessageThread,\n  Text,\n  TextArea,\n} from \"@mittwald/flow-react-components\";\n\n<Chat>\n  <MessageThread>\n    <Message>\n      <Header>\n        <Align>\n          <Avatar>\n            <Initials>Max Mustermann</Initials>\n          </Avatar>\n          <Text>\n            <b>Max Mustermann</b>\n          </Text>\n        </Align>\n      </Header>\n      <Content>\n        <Text>\n          Labore, similique. Earum, quas in. At dolorem\n          corrupti blanditiis nulla deserunt laborum!\n          Corrupti delectus aspernatur nihil nulla obcaecati\n          ipsam porro sequi rem? Quam.\n        </Text>\n      </Content>\n    </Message>\n  </MessageThread>\n  <TextArea\n    aria-label=\"Nachricht\"\n    rows={3}\n    autoResizeMaxRows={10}\n  />\n  <Button color=\"accent\">Senden</Button>\n</Chat>;\n","markdown-editor":"$29","upload":"$2a"},"slugs":["03-components","chat","chat"],"filename":"03-components/chat/chat/index.mdx","anchors":[]},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    zoom: 0.7,\n    example: \"intro\",\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"MessageThread","description":"Der MessageThread gruppiert mehrere Messages in einem zusammenhängenden Gesprächsverlauf."},"scope":{}},"examples":{"default":"$2b","intro":"import {\n  Align,\n  Avatar,\n  Content,\n  Header,\n  Initials,\n  Message,\n  MessageThread,\n  Text,\n} from \"@mittwald/flow-react-components\";\n\n<MessageThread>\n  <Message type=\"sender\">\n    <Header>\n      <Align>\n        <Avatar>\n          <Initials>Max Mustermann</Initials>\n        </Avatar>\n        <Text>\n          <b>Max Mustermann</b>\n        </Text>\n      </Align>\n    </Header>\n    <Content>\n      <Text>\n        Lorem ipsum dolor sit amet consectetur adipisicing.\n      </Text>\n    </Content>\n  </Message>\n\n  <Message type=\"responder\">\n    <Header>\n      <Align>\n        <Avatar>\n          <Initials>John Doe</Initials>\n        </Avatar>\n        <Text>\n          <b>John Doe</b>\n        </Text>\n      </Align>\n    </Header>\n    <Content>\n      <Text>\n        Lorem ipsum dolor sit amet consectetur adipisicing\n        elit. Cumque eius quam.\n      </Text>\n    </Content>\n  </Message>\n</MessageThread>;\n"},"slugs":["03-components","chat","message-thread"],"filename":"03-components/chat/message-thread/index.mdx","anchors":[]},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"Message","description":"Eine Message stellt Nachrichten mit Autor-Informationen, Datum und Aktionen übersichtlich dar."},"scope":{}},"examples":{"default":"import {\n  Align,\n  Avatar,\n  Button,\n  Content,\n  ContextMenu,\n  ContextMenuTrigger,\n  Header,\n  Initials,\n  MenuItem,\n  Message,\n  Text,\n} from \"@mittwald/flow-react-components\";\n\n<Message>\n  <Header>\n    <ContextMenuTrigger>\n      <Button />\n      <ContextMenu>\n        <MenuItem>Bearbeiten</MenuItem>\n        <MenuItem>Löschen</MenuItem>\n      </ContextMenu>\n    </ContextMenuTrigger>\n    <Align>\n      <Avatar>\n        <Initials>Max Mustermann</Initials>\n      </Avatar>\n      <Text>\n        <b>Max Mustermann</b>\n        Organisationsinhaber\n      </Text>\n    </Align>\n    <Text>01.09.2024, 12:45</Text>\n  </Header>\n\n  <Content>\n    <Text>\n      Lorem ipsum dolor sit amet, consetetur sadipscing\n      elitr, sed diam nonumy eirmod tempor invidunt ut\n      labore et dolore magna aliquyam erat, sed diam\n      voluptua. At vero eos et accusam et justo duo dolores\n      et ea rebum. Stet clita kasd gubergren, no sea\n      takimata sanctus est Lorem ipsum dolor sit amet.\n    </Text>\n  </Content>\n</Message>;\n","markdown":"$2c","sender":"$2d"},"slugs":["03-components","chat","message"],"filename":"03-components/chat/message/index.mdx","anchors":[]},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"AvatarStack","description":"Ein AvatarStack zeigt mehrere Avatare in einer horizontalen Gruppierung."},"scope":{}},"examples":{"clickable":"import {\n  Avatar,\n  AvatarStack,\n  Button,\n  Initials,\n} from \"@mittwald/flow-react-components\";\n\n<AvatarStack\n  onCountPress={() => console.log(\"count clicked\")}\n>\n  <Button onPress={() => console.log(\"avatar clicked\")}>\n    <Avatar>\n      <Initials>Max Mustermann</Initials>\n    </Avatar>\n  </Button>\n  <Button onPress={() => console.log(\"avatar clicked\")}>\n    <Avatar>\n      <Initials>John Doe</Initials>\n    </Avatar>\n  </Button>\n  <Button onPress={() => console.log(\"avatar clicked\")}>\n    <Avatar>\n      <Initials>Gillian Gopher</Initials>\n    </Avatar>\n  </Button>\n</AvatarStack>;\n","default":"import {\n  Avatar,\n  AvatarStack,\n  Initials,\n} from \"@mittwald/flow-react-components\";\n\n<AvatarStack>\n  <Avatar>\n    <Initials>Max Mustermann</Initials>\n  </Avatar>\n  <Avatar>\n    <Initials>John Doe</Initials>\n  </Avatar>\n  <Avatar>\n    <Initials>Gillian Gopher</Initials>\n  </Avatar>\n</AvatarStack>;\n","sizes":"import {\n  Avatar,\n  AvatarStack,\n  Initials,\n} from \"@mittwald/flow-react-components\";\n\n<Row>\n  <AvatarStack size=\"xs\">\n    <Avatar>\n      <Initials>Max Mustermann</Initials>\n    </Avatar>\n    <Avatar>\n      <Initials>John Doe</Initials>\n    </Avatar>\n  </AvatarStack>\n  <AvatarStack size=\"s\">\n    <Avatar>\n      <Initials>Max Mustermann</Initials>\n    </Avatar>\n    <Avatar>\n      <Initials>John Doe</Initials>\n    </Avatar>\n  </AvatarStack>\n  <AvatarStack size=\"m\">\n    <Avatar>\n      <Initials>Max Mustermann</Initials>\n    </Avatar>\n    <Avatar>\n      <Initials>John Doe</Initials>\n    </Avatar>\n  </AvatarStack>\n  <AvatarStack size=\"l\">\n    <Avatar>\n      <Initials>Max Mustermann</Initials>\n    </Avatar>\n    <Avatar>\n      <Initials>John Doe</Initials>\n    </Avatar>\n  </AvatarStack>\n</Row>;\n","total-count":"import {\n  Avatar,\n  AvatarStack,\n  Initials,\n} from \"@mittwald/flow-react-components\";\n\n<AvatarStack totalCount={20}>\n  <Avatar>\n    <Initials>Max Mustermann</Initials>\n  </Avatar>\n  <Avatar>\n    <Initials>John Doe</Initials>\n  </Avatar>\n  <Avatar>\n    <Initials>Gillian Gopher</Initials>\n  </Avatar>\n</AvatarStack>;\n"},"slugs":["03-components","content","avatar-stack"],"filename":"03-components/content/avatar-stack/index.mdx","anchors":[]},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"Avatar","description":"Ein Avatar dient der visuellen Repräsentation von Usern oder anderen Inhalten, etwa durch ein Image, Initials oder ein Icon."},"scope":{}},"examples":{"align":"import {\n  Align,\n  Avatar,\n  Initials,\n  Text,\n} from \"@mittwald/flow-react-components\";\n\n<Align>\n  <Avatar>\n    <Initials>Max Mustermann</Initials>\n  </Avatar>\n  <Text>\n    <b>Max Mustermann</b>\n    Organisationsinhaber\n  </Text>\n</Align>;\n","colors":"import {\n  Avatar,\n  IconCustomer,\n  IconHome,\n  Initials,\n} from \"@mittwald/flow-react-components\";\n\n<Row>\n  <Avatar>\n    <Initials>Gillian Gopher</Initials>\n  </Avatar>\n  <Avatar>\n    <Initials>Gina-Lisa Gopher</Initials>\n  </Avatar>\n  <Avatar color=\"lilac\">\n    <Initials>Gilian Gopher</Initials>\n  </Avatar>\n  <Avatar>\n    <IconHome />\n  </Avatar>\n  <Avatar>\n    <IconCustomer />\n  </Avatar>\n</Row>;\n","default":"import {\n  Avatar,\n  Image,\n} from \"@mittwald/flow-react-components\";\n\n<Avatar>\n  <Image\n    alt=\"Gopher\"\n    src=\"https://cdn.shopify.com/s/files/1/2022/6883/products/IMG_2002_250x250@2x.JPG?v=1538235544\"\n  />\n</Avatar>;\n","icon":"import {\n  Avatar,\n  IconHome,\n} from \"@mittwald/flow-react-components\";\n\n<Avatar color=\"blue\">\n  <IconHome />\n</Avatar>;\n","image":"import {\n  Avatar,\n  Image,\n} from \"@mittwald/flow-react-components\";\n\n<Avatar>\n  <Image\n    alt=\"Gopher\"\n    src=\"https://cdn.shopify.com/s/files/1/2022/6883/products/IMG_2002_250x250@2x.JPG?v=1538235544\"\n  />\n</Avatar>;\n","initials":"import {\n  Avatar,\n  Initials,\n} from \"@mittwald/flow-react-components\";\n\n<Avatar>\n  <Initials>Gillian Gopher</Initials>\n</Avatar>;\n","sizes":"import {\n  Avatar,\n  Initials,\n} from \"@mittwald/flow-react-components\";\n\n<Row>\n  <Avatar size=\"xs\">\n    <Initials>Gillian Gopher</Initials>\n  </Avatar>\n  <Avatar size=\"s\">\n    <Initials>Gillian Gopher</Initials>\n  </Avatar>\n  <Avatar size=\"m\">\n    <Initials>Gillian Gopher</Initials>\n  </Avatar>\n  <Avatar size=\"l\">\n    <Initials>Gillian Gopher</Initials>\n  </Avatar>\n</Row>;\n","status-example":"$2e","status":"import { Avatar } from \"@mittwald/flow-react-components\";\n\n<Row>\n  <Avatar status=\"info\" />\n  <Avatar status=\"success\" />\n  <Avatar status=\"warning\" />\n  <Avatar status=\"danger\" />\n</Row>;\n"},"slugs":["03-components","content","avatar"],"filename":"03-components/content/avatar/index.mdx","anchors":[]},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"CodeBlock","description":"Der CodeBlock dient der übersichtlichen Darstellung von Code als Block mit Syntax-Highlighting."},"scope":{}},"examples":{"copyable":"import { CodeBlock } from \"@mittwald/flow-react-components\";\n\n<CodeBlock\n  copyable\n  showLineNumbers\n  language=\"json\"\n  code={`{\n    \"projectId\": \"b3a96db5-ba8f-40dd-9100-bab43ac1f698\",\n    \"name\": \"My Project\"\n}`}\n/>;\n","dark":"import { CodeBlock } from \"@mittwald/flow-react-components\";\n\n<CodeBlock\n  color=\"dark\"\n  language=\"json\"\n  code={`{\n    \"projectId\": \"b3a96db5-ba8f-40dd-9100-bab43ac1f698\",\n    \"name\": \"My Project\"\n}`}\n/>;\n","default":"import { CodeBlock } from \"@mittwald/flow-react-components\";\n\n<CodeBlock\n  language=\"json\"\n  code={`{\n    \"projectId\": \"b3a96db5-ba8f-40dd-9100-bab43ac1f698\",\n    \"name\": \"My Project\"\n}`}\n/>;\n","light":"import { CodeBlock } from \"@mittwald/flow-react-components\";\n\n<CodeBlock\n  color=\"light\"\n  language=\"json\"\n  code={`{\n    \"projectId\": \"b3a96db5-ba8f-40dd-9100-bab43ac1f698\",\n    \"name\": \"My Project\"\n}`}\n/>;\n","lineNumbers":"import { CodeBlock } from \"@mittwald/flow-react-components\";\n\n<CodeBlock\n  showLineNumbers\n  language=\"json\"\n  code={`{\n    \"projectId\": \"b3a96db5-ba8f-40dd-9100-bab43ac1f698\",\n    \"name\": \"My Project\"\n}`}\n/>;\n"},"slugs":["03-components","content","code-block"],"filename":"03-components/content/code-block/index.mdx","anchors":[]},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"Color","description":"Mit der Color-Component lassen sich gezielt Textstellen farbig hervorheben – etwa für Werbemaßnahmen."},"scope":{}},"examples":{"accent-box":"import {\n  AccentBox,\n  Color,\n  Flex,\n  Heading,\n  Link,\n  Text,\n} from \"@mittwald/flow-react-components\";\n\n<AccentBox color=\"gradient\">\n  <Flex align=\"center\" wrap=\"wrap\" gap=\"m\">\n    <Flex direction=\"column\" grow>\n      <Heading size=\"l\">\n        <Color color=\"violet\">mStudio Extension</Color>{\" \"}\n        selber entwickeln\n      </Heading>\n      <Text>\n        <b>\n          <Color>\n            Veröffentliche{\" \"}\n            <Color color=\"violet\">eigene Features</Color> im\n            mStudio\n          </Color>\n        </b>\n      </Text>\n    </Flex>\n    <Link target=\"_blank\" href=\"#\" color=\"dark\">\n      Contributor Landingpage\n    </Link>\n  </Flex>\n</AccentBox>;\n","color":"import { Color } from \"@mittwald/flow-react-components\";\n\n<Row>\n  <Color color=\"blue\">blue</Color>\n  <Color color=\"violet\">violet</Color>\n  <Color color=\"lilac\">lilac</Color>\n  <Color color=\"teal\">teal</Color>\n</Row>;\n","default":"import {\n  Color,\n  Text,\n} from \"@mittwald/flow-react-components\";\n\n<Text>\n  <b>\n    Veröffentliche{\" \"}\n    <Color color=\"violet\">eigene Features</Color> im mStudio\n  </b>\n</Text>;\n","heading":"import {\n  Color,\n  Heading,\n} from \"@mittwald/flow-react-components\";\n\n<Heading>\n  <Color color=\"violet\">mStudio Extension</Color> selber\n  entwickeln\n</Heading>;\n"},"slugs":["03-components","content","color"],"filename":"03-components/content/color/index.mdx","anchors":[]},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"Heading","description":"Headings strukturieren den Inhalt der Seite. Jede Heading hat dabei eine unterschiedliche Wichtigkeitsstufe."},"scope":{}},"examples":{"badge":"import {\n  AlertBadge,\n  Heading,\n} from \"@mittwald/flow-react-components\";\n\n<Heading>\n  E-Mail-Adresse\n  <AlertBadge status=\"danger\">\n    Speicherplatz voll\n  </AlertBadge>\n</Heading>;\n","contextualHelp":"import { Heading } from \"@mittwald/flow-react-components\";\nimport { Button } from \"@mittwald/flow-react-components\";\nimport {\n  ContextualHelp,\n  ContextualHelpTrigger,\n} from \"@mittwald/flow-react-components\";\nimport { Text } from \"@mittwald/flow-react-components\";\n\n<Heading>\n  Rechte & Rollen\n  <ContextualHelpTrigger>\n    <Button />\n    <ContextualHelp>\n      <Text>\n        Weitere Informationen zum Thema Rechte & Rollen\n      </Text>\n    </ContextualHelp>\n  </ContextualHelpTrigger>\n</Heading>;\n","dark":"import { Heading } from \"@mittwald/flow-react-components\";\n\n<Heading color=\"dark\">Das ist eine Überschrift</Heading>;\n","default":"import { Heading } from \"@mittwald/flow-react-components\";\n\n<Heading>Das ist eine Überschrift</Heading>;\n","icon":"import { Heading } from \"@mittwald/flow-react-components\";\nimport { IconMember } from \"@mittwald/flow-react-components\";\n\n<Heading>\n  <IconMember />\n  Persönliche Informationen\n</Heading>;\n","levels":"import { Heading } from \"@mittwald/flow-react-components\";\n\n<>\n  <Heading level={1}>\n    Das ist eine Level 1 Überschrift\n  </Heading>\n  <Heading level={2}>\n    Das ist eine Level 2 Überschrift\n  </Heading>\n  <Heading level={3}>\n    Das ist eine Level 3 Überschrift\n  </Heading>\n  <Heading level={4}>\n    Das ist eine Level 4 Überschrift\n  </Heading>\n  <Heading level={5}>\n    Das ist eine Level 5 Überschrift\n  </Heading>\n</>;\n","light":"import { Heading } from \"@mittwald/flow-react-components\";\n\n<Heading color=\"light\">Das ist eine Überschrift</Heading>;\n","size":"import { Heading } from \"@mittwald/flow-react-components\";\n\n<Heading level={2} size=\"xs\">\n  Das ist eine Überschrift für die eine benutzerdefinierte\n  Größe gesetzt wurde\n</Heading>;\n"},"slugs":["03-components","content","heading"],"filename":"03-components/content/heading/index.mdx","anchors":[]},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"Icon","description":"Icons sind semantische Symbole, die Inhalte und Funktionen visualisieren und zur Verständlichkeit der Benutzeroberfläche beitragen."},"scope":{}},"examples":{"align":"import {\n  Align,\n  IconDomain,\n  Text,\n} from \"@mittwald/flow-react-components\";\n\n<Align>\n  <IconDomain />\n  <Text>mail.agenturserver.de</Text>\n</Align>;\n","decorative":"$2f","default":"import { IconHome } from \"@mittwald/flow-react-components\";\n\n<IconHome />;\n","functional":"$30","sizes":"import { IconHome } from \"@mittwald/flow-react-components\";\n\n<Row>\n  <IconHome size=\"s\" />\n  <IconHome size=\"m\" />\n  <IconHome size=\"l\" />\n</Row>;\n","states":"import {\n  ColumnLayout,\n  IconDanger,\n  IconFailed,\n  IconInfo,\n  IconPending,\n  IconSucceeded,\n  IconSuccess,\n  IconWarning,\n  Label,\n  LabeledValue,\n} from \"@mittwald/flow-react-components\";\n\n<ColumnLayout l={[1, 1, 1, 1, 1]} m={[1, 1, 1]} s={[1, 1]}>\n  <LabeledValue>\n    <Label>Success</Label>\n    <IconSuccess />\n  </LabeledValue>\n  <LabeledValue>\n    <Label>Warning</Label>\n    <IconWarning />\n  </LabeledValue>\n  <LabeledValue>\n    <Label>Danger</Label>\n    <IconDanger />\n  </LabeledValue>\n  <LabeledValue>\n    <Label>Info</Label>\n    <IconInfo />\n  </LabeledValue>\n  <LabeledValue>\n    <Label>Pending</Label>\n    <IconPending />\n  </LabeledValue>\n  <LabeledValue>\n    <Label>Succeeded</Label>\n    <IconSucceeded />\n  </LabeledValue>\n  <LabeledValue>\n    <Label>Failed</Label>\n    <IconFailed />\n  </LabeledValue>\n</ColumnLayout>;\n","svg":"import { Icon } from \"@mittwald/flow-react-components\";\n\n<Icon>\n  <svg\n    viewBox=\"0 0 100 100\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <circle cx=\"50\" cy=\"50\" r=\"50\" />\n  </svg>\n</Icon>;\n","tabler":"import { Icon } from \"@mittwald/flow-react-components\";\nimport { IconStar } from \"@tabler/icons-react\";\n\n<Icon>\n  <IconStar />\n</Icon>;\n"},"slugs":["03-components","content","icon"],"filename":"03-components/content/icon/index.mdx","anchors":[]},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true,\n    zoom: 0.7\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"IllustratedMessage","description":"Die IllustratedMessage dient als Platzhalter, wenn der eigentliche Inhalt nicht angezeigt werden kann."},"scope":{}},"examples":{"actionGroup":"import {\n  ActionGroup,\n  Button,\n  Heading,\n  IconApp,\n  IllustratedMessage,\n  Text,\n} from \"@mittwald/flow-react-components\";\n\n<IllustratedMessage>\n  <IconApp />\n  <Heading>Keine Apps installiert</Heading>\n  <Text>\n    Lege deine erste App an, um mit der Arbeit an deiner\n    Webseite loszulegen.\n  </Text>\n  <ActionGroup>\n    <Button variant=\"soft\" color=\"secondary\">\n      Zurück\n    </Button>\n    <Button>App anlegen</Button>\n  </ActionGroup>\n</IllustratedMessage>;\n","dark":"import {\n  Button,\n  Heading,\n  IconApp,\n  IllustratedMessage,\n  Text,\n} from \"@mittwald/flow-react-components\";\n\n<IllustratedMessage color=\"dark\">\n  <IconApp />\n  <Heading>Keine Apps installiert</Heading>\n  <Text>\n    Lege deine erste App an, um mit der Arbeit an deiner\n    Webseite loszulegen.\n  </Text>\n  <Button>App anlegen</Button>\n</IllustratedMessage>;\n","default":"import {\n  Button,\n  Heading,\n  IconApp,\n  IllustratedMessage,\n  Text,\n} from \"@mittwald/flow-react-components\";\n\n<IllustratedMessage>\n  <IconApp />\n  <Heading>Keine Apps installiert</Heading>\n  <Text>\n    Lege deine erste App an, um mit der Arbeit an deiner\n    Webseite loszulegen.\n  </Text>\n  <Button>App anlegen</Button>\n</IllustratedMessage>;\n","light":"import {\n  Button,\n  Heading,\n  IconApp,\n  IllustratedMessage,\n  Text,\n} from \"@mittwald/flow-react-components\";\n\n<IllustratedMessage color=\"light\">\n  <IconApp />\n  <Heading>Keine Apps installiert</Heading>\n  <Text>\n    Lege deine erste App an, um mit der Arbeit an deiner\n    Webseite loszulegen.\n  </Text>\n  <Button>App anlegen</Button>\n</IllustratedMessage>;\n","negative":"import {\n  Link,\n  Heading,\n  IconDanger,\n  IllustratedMessage,\n  Text,\n} from \"@mittwald/flow-react-components\";\n\n<IllustratedMessage color=\"danger\">\n  <IconDanger />\n  <Heading>Kein Zugriff</Heading>\n  <Text>\n    Du hast keine Berechtigung, um auf diese Seite\n    zuzugreifen.\n  </Text>\n  <Link>Zum Dashboard</Link>\n</IllustratedMessage>;\n"},"slugs":["03-components","content","illustrated-message"],"filename":"03-components/content/illustrated-message/index.mdx","anchors":[]},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"Image","description":"Mit der Image-Component lassen sich Bilder in der Benutzeroberfläche einbinden."},"scope":{}},"examples":{"aspectRatio":"import { Image } from \"@mittwald/flow-react-components\";\n\n<Image\n  src=\"https://mittwald.github.io/flow/assets/mittwald_logo_rgb.jpg\"\n  alt=\"mittwald\"\n  width={200}\n  aspectRatio={16 / 9}\n  withBorder\n/>;\n","border":"import { Image } from \"@mittwald/flow-react-components\";\n\n<Image\n  src=\"https://mittwald.github.io/flow/assets/mittwald_logo_rgb.jpg\"\n  alt=\"mittwald\"\n  width={200}\n  withBorder\n/>;\n","default":"import { Image } from \"@mittwald/flow-react-components\";\n\n<Image\n  src=\"https://mittwald.github.io/flow/assets/mittwald_logo_rgb.jpg\"\n  alt=\"mittwald\"\n  width={200}\n/>;\n"},"slugs":["03-components","content","image"],"filename":"03-components/content/image/index.mdx","anchors":[]},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"InlineCode","description":"InlineCode hebt Code-Beispiele innerhalb eines Fließtextes hervor."},"scope":{}},"examples":{"dark":"import {\n  InlineCode,\n  Text,\n} from \"@mittwald/flow-react-components\";\n\n<Text>\n  Gib <InlineCode color=\"dark\">yarn start</InlineCode> ein\n  um deine App zu starten.\n</Text>;\n","default":"import {\n  InlineCode,\n  Text,\n} from \"@mittwald/flow-react-components\";\n\n<Text>\n  Gib <InlineCode>yarn start</InlineCode> ein um deine App\n  zu starten.\n</Text>;\n","light":"import {\n  InlineCode,\n  Text,\n} from \"@mittwald/flow-react-components\";\n\n<Text color=\"light\">\n  Gib <InlineCode color=\"light\">yarn start</InlineCode> ein\n  um deine App zu starten.\n</Text>;\n"},"slugs":["03-components","content","inline-code"],"filename":"03-components/content/inline-code/index.mdx","anchors":[]},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"Label","description":"Labels werden in Formularen (z. B. TextField, NumberField) oder beim LabeledValue verwendet. Dort erläutern sie die Eingabeanforderungen oder setzen Informationen in einen Kontext."},"scope":{}},"examples":{"default":"import { Label } from \"@mittwald/flow-react-components\";\n\n<Label>Label</Label>;\n","do":"import { Label } from \"@mittwald/flow-react-components\";\n\n<Column>\n  <Label>Vorname</Label>\n  <Label>E-Mail</Label>\n  <Label>Verknüpfte App</Label>\n  <Label>Datenbankbenutzer</Label>\n</Column>;\n","dont":"import { Label } from \"@mittwald/flow-react-components\";\n\n<Column>\n  <Label>Bitte gib deinen Vornamen ein</Label>\n  <Label>E-Mail (name@mail.de)</Label>\n  <Label>\n    Mit welcher App ist die Datenbank verknüpft?\n  </Label>\n  <Label>Datenbankbenutzer:</Label>\n</Column>;\n","states":"import { Label } from \"@mittwald/flow-react-components\";\n\n<Row>\n  <Label>Default</Label>\n  <Label isDisabled>Disabled</Label>\n</Row>;\n","usage":"import {\n  ColumnLayout,\n  Header,\n  Heading,\n  Label,\n  LabeledValue,\n  Section,\n  Switch,\n  Text,\n  TextField,\n} from \"@mittwald/flow-react-components\";\n\n<Section>\n  <Header>\n    <Heading>Cronjob</Heading>\n    <Switch>Aktiviert</Switch>\n  </Header>\n  <ColumnLayout l={[1, 1]}>\n    <TextField>\n      <Label>Beschreibung</Label>\n    </TextField>\n    <LabeledValue>\n      <Label>Nächste Ausführung</Label>\n      <Text>10.06.2024 um 09:25 Uhr</Text>\n    </LabeledValue>\n  </ColumnLayout>\n</Section>;\n"},"slugs":["03-components","content","label"],"filename":"03-components/content/label/index.mdx","anchors":[]},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"LabeledValue","description":"Das LabeledValue zeigt eine statische Information und setzt sie durch ein beschreibendes Label in den passenden Kontext."},"scope":{}},"examples":{"copy-button":"import {\n  Content,\n  CopyButton,\n  IconExternalLink,\n  Label,\n  LabeledValue,\n  Link,\n  Text,\n} from \"@mittwald/flow-react-components\";\n\n<Row>\n  <LabeledValue>\n    <Label>Short-ID</Label>\n    <Content>p-wut3uw</Content>\n    <CopyButton text=\"p-wut3uw\" />\n  </LabeledValue>\n\n  <LabeledValue>\n    <Label>Datenbankserver</Label>\n    <Content>\n      mysql-kq3v4g.ge-s-hopovh.db.project.host\n    </Content>\n    <CopyButton text=\"mysql-kq3v4g.ge-s-hopovh.db.project.host\" />\n  </LabeledValue>\n\n  <LabeledValue>\n    <Label>Projektdomain</Label>\n    <Link>\n      <Text>p-lol3qe.project.space</Text>\n      <IconExternalLink />\n    </Link>\n    <CopyButton text=\"p-lol3qe.project.space\" />\n  </LabeledValue>\n</Row>;\n","default":"import {\n  Content,\n  Label,\n  LabeledValue,\n} from \"@mittwald/flow-react-components\";\n\n<LabeledValue>\n  <Label>Speicherplatz</Label>\n  <Content>20 GB</Content>\n</LabeledValue>;\n","do":"import {\n  ColumnLayout,\n  Content,\n  CopyButton,\n  IconExternalLink,\n  InlineCode,\n  Label,\n  LabeledValue,\n  Link,\n  Text,\n} from \"@mittwald/flow-react-components\";\n\n<ColumnLayout>\n  <LabeledValue>\n    <Label>Projektname</Label>\n    <Content>Dolce Vita</Content>\n  </LabeledValue>\n\n  <LabeledValue>\n    <Label>Short-ID</Label>\n    <Content>p-wut3uw</Content>\n    <CopyButton text=\"p-wut3uw\" />\n  </LabeledValue>\n\n  <LabeledValue>\n    <Label>Projektdomain</Label>\n    <Link>\n      <Text>p-lol3qe.project.space</Text>\n      <IconExternalLink />\n    </Link>\n    <CopyButton text=\"p-lol3qe.project.space\" />\n  </LabeledValue>\n\n  <LabeledValue>\n    <Label>Server</Label>\n    <Link>Dolce-Server-01</Link>\n  </LabeledValue>\n\n  <LabeledValue>\n    <Label>A-Record</Label>\n    <InlineCode>45.144.187.21</InlineCode>\n    <CopyButton text=\"45.144.187.21\" />\n  </LabeledValue>\n\n  <LabeledValue>\n    <Label>Erstellungsdatum</Label>\n    <Content>06.12.2023 um 11:40 Uhr</Content>\n  </LabeledValue>\n</ColumnLayout>;\n","dont":"import {\n  ColumnLayout,\n  Content,\n  CopyButton,\n  IconExternalLink,\n  InlineCode,\n  Label,\n  LabeledValue,\n  Link,\n  Text,\n} from \"@mittwald/flow-react-components\";\n\n<ColumnLayout l={[1, 1, 1, 1]}>\n  <LabeledValue>\n    <Label>Erstellungsdatum</Label>\n    <Content>06.12.2023 um 11:40 Uhr</Content>\n  </LabeledValue>\n\n  <LabeledValue>\n    <Label>Short-ID</Label>\n    <Content>p-wut3uw</Content>\n    <CopyButton text=\"p-wut3uw\" />\n  </LabeledValue>\n\n  <LabeledValue>\n    <Label>A-Record</Label>\n    <InlineCode>45.144.187.21</InlineCode>\n    <CopyButton text=\"45.144.187.21\" />\n  </LabeledValue>\n\n  <LabeledValue>\n    <Label>Server</Label>\n    <Link>Dolce-Server-01</Link>\n  </LabeledValue>\n\n  <LabeledValue>\n    <Label>Projektname</Label>\n    <Content>Dolce Vita</Content>\n  </LabeledValue>\n\n  <LabeledValue>\n    <Label>Projektdomain</Label>\n    <Link>\n      <Text>p-lol3qe.project.space</Text>\n      <IconExternalLink />\n    </Link>\n    <CopyButton text=\"p-lol3qe.project.space\" />\n  </LabeledValue>\n</ColumnLayout>;\n","inline-code":"import {\n  InlineCode,\n  Label,\n  LabeledValue,\n} from \"@mittwald/flow-react-components\";\n\n<LabeledValue>\n  <Label>Datenbankserver</Label>\n  <InlineCode>\n    mysql-kq3v4g.ge-s-hopovh.db.project.host\n  </InlineCode>\n</LabeledValue>;\n","link":"import {\n  IconExternalLink,\n  Label,\n  LabeledValue,\n  Link,\n  Text,\n} from \"@mittwald/flow-react-components\";\n\n<Row>\n  <LabeledValue>\n    <Label>Server</Label>\n    <Link>MyServ-01</Link>\n  </LabeledValue>\n\n  <LabeledValue>\n    <Label>Projektdomain</Label>\n    <Link>\n      <Text>p-lol3qe.project.space</Text>\n      <IconExternalLink />\n    </Link>\n  </LabeledValue>\n</Row>;\n"},"slugs":["03-components","content","labeled-value"],"filename":"03-components/content/labeled-value/index.mdx","anchors":[]},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"Markdown","description":"Die Markdown Component rendert Texteingaben im Markdown-Format."},"scope":{}},"examples":{"codeBlock":"import { Markdown } from \"@mittwald/flow-react-components\";\n\n<Markdown>\n  {\"```json\\n\" +\n    \"{\\n\" +\n    '    \"projectId\": \"b3a96db5-ba8f-40dd-9100-bab43ac1f698\",\\n' +\n    '    \"name\": \"My Project\"\\n' +\n    \"}\\n\" +\n    \"```\\n\"}\n</Markdown>;\n","dark":"import { Markdown } from \"@mittwald/flow-react-components\";\n\n<Markdown color=\"dark\">\n  Lorem ipsum dolor sit amet **consectetur adipisicing**\n  elit. Cumque eius *quam quas vel voluptas* ullam aliquid\n  ***fugit***.\n</Markdown>;\n","default":"import { Markdown } from \"@mittwald/flow-react-components\";\n\n<Markdown>\n  Lorem ipsum dolor sit amet **consectetur adipisicing**\n  elit. Cumque eius *quam quas vel voluptas* ullam aliquid\n  ***fugit***.\n</Markdown>;\n","heading":"import { Markdown } from \"@mittwald/flow-react-components\";\n\n<Markdown>\n  {\n    \"# Heading Level 1 \\n## Heading Level 2 \\n### Heading Level 3 \\n#### Heading Level 4 \\n##### Heading Level 5 \\n###### Heading Level 6\"\n  }\n</Markdown>;\n","headingOffset":"import { Markdown } from \"@mittwald/flow-react-components\";\n\n<Markdown headingOffset={1}>\n  {\n    \"# Heading Level 1 -> 2 \\n## Heading Level 2 -> 3 \\n### Heading Level 3 -> 4 \\n#### Heading Level 4 -> 5 \\n##### Heading Level 5 -> 6 \\n###### Heading Level 6 -> 6\"\n  }\n</Markdown>;\n","inlineCode":"import { Markdown } from \"@mittwald/flow-react-components\";\n\n<Markdown>{\"`127.0.0.1`\"}</Markdown>;\n","light":"import { Markdown } from \"@mittwald/flow-react-components\";\n\n<Markdown color=\"light\">\n  Lorem ipsum dolor sit amet **consectetur adipisicing**\n  elit. Cumque eius *quam quas vel voluptas* ullam aliquid\n  ***fugit***.\n</Markdown>;\n","link":"import { Markdown } from \"@mittwald/flow-react-components\";\n\n<Markdown>[mittwald.de](https://mittwald.de).</Markdown>;\n","orderedList":"import { Markdown } from \"@mittwald/flow-react-components\";\n\n<Markdown>\n  {\n    \"1. Ordered list item 1 \\n 2. Ordered list item 2  \\n 3. Ordered list item 3\"\n  }\n</Markdown>;\n","quote":"import { Markdown } from \"@mittwald/flow-react-components\";\n\n<Markdown>{\"> This is a quote\"}</Markdown>;\n","unorderedList":"import { Markdown } from \"@mittwald/flow-react-components\";\n\n<Markdown>\n  {\n    \"- Unordered list item 1 \\n - Unordered list item 2  \\n - Unordered list item 3\"\n  }\n</Markdown>;\n"},"slugs":["03-components","content","markdown"],"filename":"03-components/content/markdown/index.mdx","anchors":[]},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"Rating","description":"Die Rating Component dient zur visuellen Darstellung einer Bewertungsskala von 0 bis 5 Sternen. Sie wird häufig eingesetzt, um Bewertungen auf einen Blick verständlich zu machen."},"scope":{}},"examples":{"accent-box":"import {\n  AccentBox,\n  BigNumber,\n  ColumnLayout,\n  Flex,\n  Rating,\n  Text,\n} from \"@mittwald/flow-react-components\";\n\n<ColumnLayout>\n  <AccentBox>\n    <Flex direction=\"column\" gap=\"s\" align=\"center\">\n      <BigNumber>\n        <Text>250 ms</Text>\n        <Text>Dateioperationen</Text>\n      </BigNumber>\n      <Rating value={4} />\n      <Text>\n        <small>Geringer Optimierungsbedarf</small>\n      </Text>\n    </Flex>\n  </AccentBox>\n  <AccentBox>\n    <Flex direction=\"column\" gap=\"xs\" align=\"center\">\n      <BigNumber>\n        <Text>100 ms</Text>\n        <Text>Serveroperationen</Text>\n      </BigNumber>\n      <Rating value={2} />\n      <Text>\n        <small>Optimierungsbedarf</small>\n      </Text>\n    </Flex>\n  </AccentBox>\n</ColumnLayout>;\n","big-number":"import {\n  BigNumber,\n  Flex,\n  Rating,\n  Text,\n} from \"@mittwald/flow-react-components\";\n\n<Flex direction=\"column\" gap=\"s\" align=\"center\">\n  <BigNumber>\n    <Text>80%</Text>\n    <Text>Performance</Text>\n  </BigNumber>\n  <Rating value={4} />\n</Flex>;\n","default":"import { Rating } from \"@mittwald/flow-react-components\";\n\n<Rating value={2} />;\n","size":"import { Rating } from \"@mittwald/flow-react-components\";\n\n<Column>\n  <Rating value={2} />\n  <Rating size=\"s\" value={2} />\n</Column>;\n"},"slugs":["03-components","content","rating"],"filename":"03-components/content/rating/index.mdx","anchors":[]},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"Skeleton","description":"Das Skeleton zeigt als Platzhalter eine vereinfachte Vorschau der Benutzeroberfläche, bis der Content vollständig geladen ist."},"scope":{}},"examples":{"custom-size":"import { Skeleton } from \"@mittwald/flow-react-components\";\n\n<Column>\n  <Skeleton height=\"100px\" />\n  <Skeleton height=\"100px\" width=\"100px\" />\n</Column>;\n","default":"import { Skeleton } from \"@mittwald/flow-react-components\";\n\n<Skeleton />;\n"},"slugs":["03-components","content","skeleton"],"filename":"03-components/content/skeleton/index.mdx","anchors":[]},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"Text","description":"Die Text-Component sorgt für eine konsistente Formatierung und Strukturierung von Text."},"scope":{}},"examples":{"align":"import {\n  Align,\n  Button,\n  ContextualHelp,\n  ContextualHelpTrigger,\n  CopyButton,\n  IconDomain,\n  Text,\n} from \"@mittwald/flow-react-components\";\n\n<Column>\n  <Align>\n    <IconDomain />\n    <Text>mail.agenturserver.de</Text>\n  </Align>\n\n  <Align>\n    <Text>mail.agenturserver.de</Text>\n    <CopyButton text=\"mail.agenturserver.de\" />\n  </Align>\n\n  <Align>\n    <Text>mail.agenturserver.de</Text>\n    <ContextualHelpTrigger>\n      <Button />\n      <ContextualHelp>\n        <Text>\n          Hier wird die URL des Servers angezeigt, der für\n          den E-Mail-Versand genutzt wird.\n        </Text>\n      </ContextualHelp>\n    </ContextualHelpTrigger>\n  </Align>\n</Column>;\n","dark":"import { Text } from \"@mittwald/flow-react-components\";\n\n<Text color=\"dark\">Das ist ein Text</Text>;\n","default":"import { Text } from \"@mittwald/flow-react-components\";\n\n<Text>Das ist ein Text</Text>;\n","elementType":"import { Text } from \"@mittwald/flow-react-components\";\n\n<Text elementType=\"p\">Das ist ein Absatz</Text>;\n","emulateBoldWidth":"import { Text } from \"@mittwald/flow-react-components\";\n\n<Column>\n  <Text\n    style={{ borderInline: \"2px solid red\" }}\n    emulateBoldWidth\n  >\n    Das ist ein Text\n  </Text>\n  <Text style={{ borderInline: \"2px solid red\" }}>\n    <strong>Das ist ein Text</strong>\n  </Text>\n</Column>;\n","html":"import { Text } from \"@mittwald/flow-react-components\";\n\n<Column>\n  <Text>\n    <ul>\n      <li>Item 1</li>\n      <li>Item 2</li>\n    </ul>\n  </Text>\n  <Text>\n    Dies ist ein <strong>Beispiel</strong> für{\" \"}\n    <i>verschiedene</i> HTML-Formatierungen.\n  </Text>\n</Column>;\n","light":"import { Text } from \"@mittwald/flow-react-components\";\n\n<Text color=\"light\">Das ist ein Text</Text>;\n","size":"import { Text } from \"@mittwald/flow-react-components\";\n\n<Text>\n  <small>Das ist ein Text in small</small>\n</Text>;\n"},"slugs":["03-components","content","text"],"filename":"03-components/content/text/index.mdx","anchors":[]},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"BigNumber","description":"Die BigNumber dient der prominenten Darstellung numerischer Werte innerhalb einer Oberfläche. Sie wird vorrangig eingesetzt, um Kennzahlen oder Metriken übersichtlich und visuell hervorzuheben."},"scope":{}},"examples":{"accent-box":"import {\n  AccentBox,\n  BigNumber,\n  Button,\n  ColumnLayout,\n  Flex,\n  Text,\n} from \"@mittwald/flow-react-components\";\n\n<ColumnLayout>\n  <AccentBox>\n    <Flex direction=\"column\" gap=\"s\" align=\"center\">\n      <BigNumber>\n        <Text>250 ms</Text>\n        <Text>Dateioperationen</Text>\n      </BigNumber>\n      <Text>\n        <small>Geringer Optimierungsbedarf</small>\n      </Text>\n      <Button size=\"s\" variant=\"outline\" color=\"secondary\">\n        Details anzeigen\n      </Button>\n    </Flex>\n  </AccentBox>\n  <AccentBox>\n    <Flex direction=\"column\" gap=\"xs\" align=\"center\">\n      <BigNumber>\n        <Text>100 ms</Text>\n        <Text>Serveroperationen</Text>\n      </BigNumber>\n      <Text>\n        <small>Optimierungsbedarf</small>\n      </Text>\n      <Button size=\"s\" variant=\"outline\" color=\"secondary\">\n        Details anzeigen\n      </Button>\n    </Flex>\n  </AccentBox>\n</ColumnLayout>;\n","default":"import {\n  BigNumber,\n  Text,\n} from \"@mittwald/flow-react-components\";\n\n<BigNumber>\n  <Text>69%</Text>\n  <Text>Performance</Text>\n</BigNumber>;\n","rating":"import {\n  BigNumber,\n  Flex,\n  Rating,\n  Text,\n} from \"@mittwald/flow-react-components\";\n\n<Flex direction=\"column\" gap=\"s\" align=\"center\">\n  <BigNumber>\n    <Text>80%</Text>\n    <Text>Performance</Text>\n  </BigNumber>\n  <Rating value={4} />\n</Flex>;\n"},"slugs":["03-components","data-visualisation","big-number"],"filename":"03-components/data-visualisation/big-number/index.mdx","anchors":[]},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true,\n    example: \"default\",\n    zoom: 0.8\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"CartesianChart","description":"CartesianChart ist eine vielseitige Diagrammkomponente zur Darstellung von Metriken über Zeit. Sie kann entweder als Liniendiagramm (Line) oder Flächendiagramm (Area) konfiguriert werden."},"scope":{}},"examples":{"default":"import {\n  Area,\n  CartesianChart,\n  CartesianGrid,\n  ChartTooltip,\n  ChartLegend,\n  XAxis,\n  YAxis,\n} from \"@mittwald/flow-react-components\";\n\n<CartesianChart\n  data={[\n    {\n      Zeit: \"0 Uhr\",\n      Datenbanken: 40,\n      Projekte: 24,\n    },\n    {\n      Zeit: \"1 Uhr\",\n      Datenbanken: 30,\n      Projekte: 13,\n    },\n    {\n      Zeit: \"2 Uhr\",\n      Datenbanken: 20,\n      Projekte: 78,\n    },\n    {\n      Zeit: \"3 Uhr\",\n      Datenbanken: 27,\n      Projekte: 39,\n    },\n  ]}\n  height=\"300px\"\n>\n  <CartesianGrid />\n  <Area dataKey=\"Datenbanken\" />\n  <Area dataKey=\"Projekte\" color=\"palatinate-blue\" />\n  <XAxis dataKey=\"Zeit\" />\n  <YAxis domain={[0, 100]} unit=\" %\" />\n  <ChartTooltip formatter={(v, k) => `${k}: ${v} %`} />\n  <ChartLegend />\n</CartesianChart>;\n","emptyView":"$31","synced":"$32","types":"$33"},"slugs":["03-components","data-visualisation","cartesian-chart"],"filename":"03-components/data-visualisation/cartesian-chart/index.mdx","anchors":[]},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"DonutChart","description":"Das DonutChart dient zur übersichtlichen Darstellung proportionaler Daten in einem ringförmigen Diagramm. Es eignet sich besonders zur Visualisierung von Verteilungen, Anteilen oder Fortschritten."},"scope":{}},"examples":{"children":"import { DonutChart } from \"@mittwald/flow-react-components\";\n\n<DonutChart\n  value={300}\n  maxValue={600}\n  aria-label=\"Speicherplatz\"\n>\n  <b>300</b>\n  <small>GB</small>\n</DonutChart>;\n","decimal":"import { DonutChart } from \"@mittwald/flow-react-components\";\n\n<DonutChart\n  aria-label=\"Performance\"\n  formatOptions={{ style: \"decimal\" }}\n  maxValue={200}\n  value={135}\n/>;\n","default":"import { DonutChart } from \"@mittwald/flow-react-components\";\n\n<DonutChart value={30} aria-label=\"Auslastung\" />;\n","segments":"import { DonutChart } from \"@mittwald/flow-react-components\";\n\n<DonutChart\n  aria-label=\"Items\"\n  segments={[\n    { title: \"Item 1\", value: 28 },\n    { title: \"Item 2\", value: 24 },\n    { title: \"Item 3\", value: 20 },\n    { title: \"Item 4\", value: 10 },\n    { title: \"Item 5\", value: 12 },\n    { title: \"Item 6\", value: 6 },\n  ]}\n/>;\n","size":"import { DonutChart } from \"@mittwald/flow-react-components\";\n\n<Row>\n  <DonutChart value={30} aria-label=\"Auslastung\" />\n  <DonutChart value={30} aria-label=\"Auslastung\" size=\"l\" />\n</Row>;\n","status":"import { DonutChart } from \"@mittwald/flow-react-components\";\n\n<Row>\n  <DonutChart\n    value={30}\n    status=\"success\"\n    aria-label=\"Auslastung\"\n  />\n  <DonutChart value={30} aria-label=\"Auslastung\" />\n  <DonutChart\n    value={80}\n    status=\"warning\"\n    aria-label=\"Auslastung\"\n  />\n  <DonutChart\n    value={95}\n    status=\"danger\"\n    aria-label=\"Auslastung\"\n  />\n</Row>;\n","unit":"import { DonutChart } from \"@mittwald/flow-react-components\";\n\n<DonutChart\n  aria-label=\"Speicherplatz\"\n  formatOptions={{ style: \"unit\", unit: \"gigabyte\" }}\n  maxValue={50}\n  value={12}\n/>;\n"},"slugs":["03-components","data-visualisation","donut-chart"],"filename":"03-components/data-visualisation/donut-chart/index.mdx","anchors":[]},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"Autocomplete","description":"Autocomplete unterstützt bei der Texteingabe durch kontextbezogene Vorschläge. Die Auswahl ist optional, eigene Eingaben bleiben möglich. Typischerweise wird die Komponente mit TextField oder SearchField kombiniert."},"scope":{}},"examples":{"default":"import {\n  Option,\n  Label,\n  TextField,\n  Autocomplete,\n} from \"@mittwald/flow-react-components\";\nimport { useState } from \"react\";\n\nexport default () => {\n  const [input, setInput] = useState(\"\");\n\n  const generateSuggestItems = () => {\n    return [\n      \"example.com\",\n      \"test.org\",\n      \"email.net\",\n      \"mail.com\",\n    ]\n      .map((d) => {\n        const email = `${input.split(\"@\")[0]}@${d}`;\n        return (\n          <Option\n            key={email}\n            value={email}\n            textValue={email}\n          >\n            {email}\n          </Option>\n        );\n      })\n      .filter(() => input);\n  };\n\n  return (\n    <Autocomplete>\n      <TextField value={input} onChange={setInput}>\n        <Label>Email</Label>\n      </TextField>\n      {generateSuggestItems()}\n    </Autocomplete>\n  );\n};\n","filter":"import {\n  Option,\n  Label,\n  TextField,\n  Autocomplete,\n} from \"@mittwald/flow-react-components\";\nimport { useState } from \"react\";\n\nexport default () => {\n  const [input, setInput] = useState(\"\");\n\n  const generateSuggestItems = () => {\n    return [\n      \"example.com\",\n      \"test.org\",\n      \"email.net\",\n      \"mail.com\",\n    ]\n      .map((d) => {\n        const email = `${input.split(\"@\")[0]}@${d}`;\n        return (\n          <Option\n            key={email}\n            value={email}\n            textValue={email}\n          >\n            {email}\n          </Option>\n        );\n      })\n      .filter(() => input);\n  };\n\n  const domainDotComFilter = (\n    textValue: string,\n    ignored_inputValue: string,\n  ) => {\n    return textValue.includes(\".com\");\n  };\n\n  return (\n    <Autocomplete filter={domainDotComFilter}>\n      <TextField value={input} onChange={setInput}>\n        <Label>Email</Label>\n      </TextField>\n      {generateSuggestItems()}\n    </Autocomplete>\n  );\n};\n","form":"$34","search":"import {\n  Label,\n  Autocomplete,\n  SearchField,\n  Option,\n} from \"@mittwald/flow-react-components\";\nimport { useState } from \"react\";\n\nexport default () => {\n  const [input, setInput] = useState(\"\");\n\n  const generateSuggestItems = () => {\n    return [\n      \"example.com\",\n      \"test.org\",\n      \"email.net\",\n      \"mail.com\",\n    ]\n      .map((d) => {\n        const email = `${input.split(\"@\")[0]}@${d}`;\n        return (\n          <Option\n            key={email}\n            value={email}\n            textValue={email}\n          >\n            {email}\n          </Option>\n        );\n      })\n      .filter(() => input);\n  };\n\n  return (\n    <Autocomplete>\n      <SearchField value={input} onChange={setInput}>\n        <Label>Email</Label>\n      </SearchField>\n      {generateSuggestItems()}\n    </Autocomplete>\n  );\n};\n"},"slugs":["03-components","form-controls","autocomplete"],"filename":"03-components/form-controls/autocomplete/index.mdx","anchors":[]},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"CheckboxButton","description":"Ein CheckboxButton ist eine optisch auffälligere Variante der Checkbox. Sie dient ebenfalls dazu, Optionen auszuwählen oder abzuwählen und wird häufig innerhalb der CheckboxGroup verwendet."},"scope":{}},"examples":{"default":"import { CheckboxButton } from \"@mittwald/flow-react-components\";\n\n<CheckboxButton>\n  Ich stimme den AGBs zu und bestätige, dass ich die\n  Datenschutzhinweise zur Kenntnis genommen habe.\n</CheckboxButton>;\n","form":"import {\n  Button,\n  CheckboxButton,\n  Section,\n} from \"@mittwald/flow-react-components\";\nimport { useForm } from \"react-hook-form\";\nimport {\n  Form,\n  typedField,\n} from \"@mittwald/flow-react-components/react-hook-form\";\nimport { sleep } from \"@/content/03-components/actions/action/examples/lib\";\n\nexport default () => {\n  const form = useForm<{ acceptTerms: boolean }>();\n  const Field = typedField(form);\n\n  return (\n    <Section>\n      <Form form={form} onSubmit={sleep}>\n        <Field\n          name=\"acceptTerms\"\n          rules={{ required: true }}\n        >\n          <CheckboxButton>\n            Ich stimme den AGBs zu und bestätige, dass ich\n            die Datenschutzhinweise zur Kenntnis genommen\n            habe.\n          </CheckboxButton>\n        </Field>\n        <Button type=\"submit\">Speichern</Button>\n      </Form>\n    </Section>\n  );\n};\n"},"slugs":["03-components","form-controls","checkbox-button"],"filename":"03-components/form-controls/checkbox-button/index.mdx","anchors":[]},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"CheckboxGroup","description":"Die CheckboxGroup fasst mehrere Checkboxen oder CheckboxButtons logisch in einer Gruppierung zusammen."},"scope":{}},"examples":{"buttons":"import {\n  CheckboxButton,\n  CheckboxGroup,\n  Label,\n} from \"@mittwald/flow-react-components\";\n\n<CheckboxGroup>\n  <Label>Berechtigungen</Label>\n  <CheckboxButton value=\"read\">Lesen</CheckboxButton>\n  <CheckboxButton value=\"write\">Schreiben</CheckboxButton>\n</CheckboxGroup>;\n","contextualHelp":"import {\n  Button,\n  Checkbox,\n  CheckboxGroup,\n  ContextualHelp,\n  ContextualHelpTrigger,\n  Heading,\n  Label,\n  Text,\n} from \"@mittwald/flow-react-components\";\n\n<CheckboxGroup>\n  <Label>\n    Berechtigungen\n    <ContextualHelpTrigger>\n      <Button />\n      <ContextualHelp>\n        <Heading>Weitere Informationen</Heading>\n        <Text>\n          Hier gibt es weitere Informationen, die zu lang\n          für die FieldDescription sind.\n        </Text>\n      </ContextualHelp>\n    </ContextualHelpTrigger>\n  </Label>\n  <Checkbox value=\"read\">Lesen</Checkbox>\n  <Checkbox value=\"write\">Schreiben</Checkbox>\n</CheckboxGroup>;\n","customColumns":"import {\n  CheckboxButton,\n  CheckboxGroup,\n  Label,\n} from \"@mittwald/flow-react-components\";\n\n<CheckboxGroup l={[1, 1]} m={[1]}>\n  <Label>Berechtigungen</Label>\n  <CheckboxButton value=\"read\">Lesen</CheckboxButton>\n  <CheckboxButton value=\"write\">Schreiben</CheckboxButton>\n</CheckboxGroup>;\n","default":"import {\n  Checkbox,\n  CheckboxGroup,\n  Label,\n} from \"@mittwald/flow-react-components\";\n\n<CheckboxGroup>\n  <Label>Berechtigungen</Label>\n  <Checkbox value=\"read\">Lesen</Checkbox>\n  <Checkbox value=\"write\">Schreiben</Checkbox>\n</CheckboxGroup>;\n","fieldDescription":"import {\n  Checkbox,\n  CheckboxGroup,\n  FieldDescription,\n  Label,\n} from \"@mittwald/flow-react-components\";\n\n<CheckboxGroup>\n  <Label>Berechtigungen</Label>\n  <Checkbox value=\"read\">Lesen</Checkbox>\n  <Checkbox value=\"write\">Schreiben</Checkbox>\n  <FieldDescription>Weitere Informationen</FieldDescription>\n</CheckboxGroup>;\n","form":"import {\n  Button,\n  Checkbox,\n  CheckboxGroup,\n  Label,\n  Section,\n} from \"@mittwald/flow-react-components\";\nimport { useForm } from \"react-hook-form\";\nimport {\n  Form,\n  typedField,\n} from \"@mittwald/flow-react-components/react-hook-form\";\nimport { sleep } from \"@/content/03-components/actions/action/examples/lib\";\n\nexport default () => {\n  const form = useForm<{ permissions: string[] }>();\n  const Field = typedField(form);\n\n  return (\n    <Section>\n      <Form form={form} onSubmit={sleep}>\n        <Field\n          name=\"permissions\"\n          rules={{\n            required:\n              \"Bitte wähle mindestens eine Berechtigung aus\",\n          }}\n        >\n          <CheckboxGroup>\n            <Label>Berechtigungen</Label>\n            <Checkbox value=\"read\">Lesen</Checkbox>\n            <Checkbox value=\"write\">Schreiben</Checkbox>\n          </CheckboxGroup>\n        </Field>\n        <Button type=\"submit\">Speichern</Button>\n      </Form>\n    </Section>\n  );\n};\n"},"slugs":["03-components","form-controls","checkbox-group"],"filename":"03-components/form-controls/checkbox-group/index.mdx","anchors":[]},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"Checkbox","description":"Mithilfe einer Checkbox kann ein User eine Option auswählen oder abwählen. Bei der Verwendung mehrerer Checkboxen wird im Normalfall die CheckboxGroup verwendet."},"scope":{}},"examples":{"default":"import { Checkbox } from \"@mittwald/flow-react-components\";\n\n<Checkbox>\n  Ich stimme den AGBs zu und bestätige, dass ich die\n  Datenschutzhinweise zur Kenntnis genommen habe.\n</Checkbox>;\n","disabled":"import { Checkbox } from \"@mittwald/flow-react-components\";\n\n<Checkbox isDisabled>\n  Ich stimme den AGBs zu und bestätige, dass ich die\n  Datenschutzhinweise zur Kenntnis genommen habe.\n</Checkbox>;\n","form":"import {\n  Button,\n  Checkbox,\n  Section,\n} from \"@mittwald/flow-react-components\";\nimport { useForm } from \"react-hook-form\";\nimport {\n  Form,\n  typedField,\n} from \"@mittwald/flow-react-components/react-hook-form\";\nimport { sleep } from \"@/content/03-components/actions/action/examples/lib\";\n\nexport default () => {\n  const form = useForm<{ acceptTerms: boolean }>();\n  const Field = typedField(form);\n\n  return (\n    <Section>\n      <Form form={form} onSubmit={sleep}>\n        <Field\n          name=\"acceptTerms\"\n          rules={{ required: true }}\n        >\n          <Checkbox>\n            Ich stimme den AGBs zu und bestätige, dass ich\n            die Datenschutzhinweise zur Kenntnis genommen\n            habe.\n          </Checkbox>\n        </Field>\n        <Button type=\"submit\">Speichern</Button>\n      </Form>\n    </Section>\n  );\n};\n","indeterminated":"import { Checkbox } from \"@mittwald/flow-react-components\";\n\n<Checkbox isIndeterminate>\n  Ich stimme den AGBs zu und bestätige, dass ich die\n  Datenschutzhinweise zur Kenntnis genommen habe.\n</Checkbox>;\n"},"slugs":["03-components","form-controls","checkbox"],"filename":"03-components/form-controls/checkbox/index.mdx","anchors":[]},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"ComboBox","description":"Die ComboBox kombiniert ein Texteingabefeld mit einem Auswahlmenü. Bei der Eingabe wird eine vordefinierte Liste dynamisch gefiltert, aus der eine Auswahl getroffen werden kann."},"scope":{}},"examples":{"align":"import {\n  Align,\n  Button,\n  ComboBox,\n  Label,\n  Option,\n} from \"@mittwald/flow-react-components\";\n\n<Align>\n  <ComboBox>\n    <Label>Domain</Label>\n    <Option>mydomain.de</Option>\n    <Option>shop.mydomain.de</Option>\n    <Option>anotherdomain.com</Option>\n    <Option>www.anotherdomain.com</Option>\n    <Option>anotherdomain.com/shop</Option>\n    <Option>anotherdomain.com/blog</Option>\n    <Option>onemoredomain.de</Option>\n    <Option>www.onemoredomain.de</Option>\n  </ComboBox>\n  <Button>Hinzufügen</Button>\n</Align>;\n","contextualHelp":"import {\n  Button,\n  ComboBox,\n  ContextualHelp,\n  ContextualHelpTrigger,\n  Heading,\n  Label,\n  Option,\n  Text,\n} from \"@mittwald/flow-react-components\";\n\n<ComboBox>\n  <Label>\n    Domain\n    <ContextualHelpTrigger>\n      <Button />\n      <ContextualHelp>\n        <Heading>Weitere Informationen</Heading>\n        <Text>\n          Hier gibt es weitere Informationen, die zu lang\n          für die FieldDescription sind.\n        </Text>\n      </ContextualHelp>\n    </ContextualHelpTrigger>\n  </Label>\n  <Option>mydomain.de</Option>\n  <Option>shop.mydomain.de</Option>\n  <Option>anotherdomain.com</Option>\n  <Option>www.anotherdomain.com</Option>\n  <Option>anotherdomain.com/shop</Option>\n  <Option>anotherdomain.com/blog</Option>\n  <Option>onemoredomain.de</Option>\n  <Option>www.onemoredomain.de</Option>\n</ComboBox>;\n","countryOptions":"import {\n  ComboBox,\n  CountryOptions,\n  Label,\n} from \"@mittwald/flow-react-components\";\n\n<ComboBox>\n  <Label>Land</Label>\n  <CountryOptions />\n</ComboBox>;\n","default":"import {\n  ComboBox,\n  Label,\n  Option,\n} from \"@mittwald/flow-react-components\";\n\n<ComboBox>\n  <Label>Domain</Label>\n  <Option>mydomain.de</Option>\n  <Option>shop.mydomain.de</Option>\n  <Option>anotherdomain.com</Option>\n  <Option>www.anotherdomain.com</Option>\n  <Option>anotherdomain.com/shop</Option>\n  <Option>anotherdomain.com/blog</Option>\n  <Option>onemoredomain.de</Option>\n  <Option>www.onemoredomain.de</Option>\n</ComboBox>;\n","fieldDescription":"import {\n  ComboBox,\n  FieldDescription,\n  Label,\n  Option,\n} from \"@mittwald/flow-react-components\";\n\n<ComboBox>\n  <Label>Domain</Label>\n  <Option>mydomain.de</Option>\n  <Option>shop.mydomain.de</Option>\n  <Option>anotherdomain.com</Option>\n  <Option>www.anotherdomain.com</Option>\n  <Option>anotherdomain.com/shop</Option>\n  <Option>anotherdomain.com/blog</Option>\n  <Option>onemoredomain.de</Option>\n  <Option>www.onemoredomain.de</Option>\n  <FieldDescription>Weitere Informationen</FieldDescription>\n</ComboBox>;\n","form":"import {\n  Button,\n  ComboBox,\n  Label,\n  Option,\n  Section,\n} from \"@mittwald/flow-react-components\";\nimport { useForm } from \"react-hook-form\";\nimport {\n  Form,\n  typedField,\n} from \"@mittwald/flow-react-components/react-hook-form\";\nimport { sleep } from \"@/content/03-components/actions/action/examples/lib\";\n\nexport default () => {\n  const form = useForm<{ domain: string }>();\n  const Field = typedField(form);\n\n  return (\n    <Section>\n      <Form form={form} onSubmit={sleep}>\n        <Field\n          name=\"domain\"\n          rules={{\n            required: \"Bitte wähle eine Domain aus\",\n          }}\n        >\n          <ComboBox>\n            <Label>Domain</Label>\n            <Option>mydomain.de</Option>\n            <Option>anotherdomain.com</Option>\n          </ComboBox>\n        </Field>\n        <Button type=\"submit\">Speichern</Button>\n      </Form>\n    </Section>\n  );\n};\n"},"slugs":["03-components","form-controls","combo-box"],"filename":"03-components/form-controls/combo-box/index.mdx","anchors":[]},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"DatePicker","description":"Der DatePicker ermöglicht die Eingabe eines Datums per Tastatur oder die Auswahl über einen visuellen Kalender."},"scope":{}},"examples":{"contextualHelp":"import {\n  Button,\n  ContextualHelp,\n  ContextualHelpTrigger,\n  DatePicker,\n  Heading,\n  Text,\n  Label,\n} from \"@mittwald/flow-react-components\";\n\n<DatePicker>\n  <Label>\n    Datum\n    <ContextualHelpTrigger>\n      <Button />\n      <ContextualHelp>\n        <Heading>Weitere Informationen</Heading>\n        <Text>\n          Hier gibt es weitere Informationen, die zu lang\n          für die FieldDescription sind.\n        </Text>\n      </ContextualHelp>\n    </ContextualHelpTrigger>\n  </Label>\n</DatePicker>;\n","default":"import {\n  DatePicker,\n  Label,\n} from \"@mittwald/flow-react-components\";\n\n<DatePicker>\n  <Label>Datum</Label>\n</DatePicker>;\n","disabled":"import {\n  DatePicker,\n  Label,\n} from \"@mittwald/flow-react-components\";\n\n<DatePicker isDisabled>\n  <Label>Datum</Label>\n</DatePicker>;\n","fieldDescription":"import {\n  DatePicker,\n  FieldDescription,\n  Label,\n} from \"@mittwald/flow-react-components\";\n\n<DatePicker>\n  <Label>Datum</Label>\n  <FieldDescription>Weitere Informationen</FieldDescription>\n</DatePicker>;\n","form":"import {\n  Button,\n  DatePicker,\n  Label,\n  Section,\n} from \"@mittwald/flow-react-components\";\nimport { useForm } from \"react-hook-form\";\nimport {\n  Form,\n  typedField,\n} from \"@mittwald/flow-react-components/react-hook-form\";\nimport { sleep } from \"@/content/03-components/actions/action/examples/lib\";\nimport type { CalendarDate } from \"@internationalized/date\";\n\nexport default () => {\n  const form = useForm<{ date: CalendarDate }>();\n  const Field = typedField(form);\n\n  return (\n    <Section>\n      <Form form={form} onSubmit={sleep}>\n        <Field\n          name=\"date\"\n          rules={{\n            required: \"Bitte wähle ein Datum aus\",\n          }}\n        >\n          <DatePicker>\n            <Label>Datum</Label>\n          </DatePicker>\n        </Field>\n        <Button type=\"submit\">Speichern</Button>\n      </Form>\n    </Section>\n  );\n};\n","future":"import {\n  DatePicker,\n  Label,\n} from \"@mittwald/flow-react-components\";\nimport {\n  getLocalTimeZone,\n  today,\n} from \"@internationalized/date\";\n\n<DatePicker minValue={today(getLocalTimeZone())}>\n  <Label>Datum</Label>\n</DatePicker>;\n","unavailable":"import {\n  DatePicker,\n  FieldDescription,\n  Label,\n} from \"@mittwald/flow-react-components\";\nimport { type DateValue } from \"@internationalized/date\";\n\n<DatePicker\n  isRequired\n  isDateUnavailable={(date: DateValue) => date.day !== 1}\n>\n  <Label>Datum</Label>\n  <FieldDescription>\n    Es kann nur der 1. jeden Monats ausgewählt werden\n  </FieldDescription>\n</DatePicker>;\n"},"slugs":["03-components","form-controls","date-picker"],"filename":"03-components/form-controls/date-picker/index.mdx","anchors":[]},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"DateRangePicker","description":"Der DateRangePicker erlaubt die Eingabe einer Zeitspanne per Tastatur oder die Auswahl über einen visuellen Kalender."},"scope":{}},"examples":{"contextualHelp":"import {\n  Button,\n  ContextualHelp,\n  ContextualHelpTrigger,\n  DateRangePicker,\n  Heading,\n  Label,\n  Text,\n} from \"@mittwald/flow-react-components\";\n\n<DateRangePicker>\n  <Label>\n    Zeitraum\n    <ContextualHelpTrigger>\n      <Button />\n      <ContextualHelp>\n        <Heading>Weitere Informationen</Heading>\n        <Text>\n          Hier gibt es weitere Informationen, die zu lang\n          für die FieldDescription sind.\n        </Text>\n      </ContextualHelp>\n    </ContextualHelpTrigger>\n  </Label>\n</DateRangePicker>;\n","default":"import {\n  DateRangePicker,\n  Label,\n} from \"@mittwald/flow-react-components\";\n\n<DateRangePicker>\n  <Label>Zeitraum</Label>\n</DateRangePicker>;\n","disabled":"import {\n  DateRangePicker,\n  Label,\n} from \"@mittwald/flow-react-components\";\n\n<DateRangePicker isDisabled>\n  <Label>Zeitraum</Label>\n</DateRangePicker>;\n","fieldDescription":"import {\n  DateRangePicker,\n  FieldDescription,\n  Label,\n} from \"@mittwald/flow-react-components\";\n\n<DateRangePicker>\n  <Label>Zeitraum</Label>\n  <FieldDescription>Weitere Informationen</FieldDescription>\n</DateRangePicker>;\n","form":"import {\n  Button,\n  DateRangePicker,\n  Label,\n  Section,\n} from \"@mittwald/flow-react-components\";\nimport { useForm } from \"react-hook-form\";\nimport {\n  Form,\n  typedField,\n} from \"@mittwald/flow-react-components/react-hook-form\";\nimport type { CalendarDate } from \"@internationalized/date\";\nimport { sleep } from \"@/content/03-components/actions/action/examples/lib\";\n\nexport default () => {\n  const form = useForm<{\n    range: { start: CalendarDate; end: CalendarDate };\n  }>();\n  const Field = typedField(form);\n\n  return (\n    <Section>\n      <Form form={form} onSubmit={sleep}>\n        <Field\n          name=\"range\"\n          rules={{\n            required: \"Bitte wähle einen Zeitraum aus\",\n          }}\n        >\n          <DateRangePicker>\n            <Label>Zeitraum</Label>\n          </DateRangePicker>\n        </Field>\n        <Button type=\"submit\">Speichern</Button>\n      </Form>\n    </Section>\n  );\n};\n","future":"import {\n  DateRangePicker,\n  Label,\n} from \"@mittwald/flow-react-components\";\nimport {\n  getLocalTimeZone,\n  today,\n} from \"@internationalized/date\";\n\n<DateRangePicker minValue={today(getLocalTimeZone())}>\n  <Label>Zeitraum</Label>\n</DateRangePicker>;\n"},"slugs":["03-components","form-controls","date-range-picker"],"filename":"03-components/form-controls/date-range-picker/index.mdx","anchors":[]},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"Field","title":"Field (React Hook Form)","gitHubComponentPath":"integrations/react-hook-form/components/Field/Field.tsx","description":"Die Field-Component integriert die Form Controls von Flow nahtlos in das Formular-Management von React Hook Form."},"scope":{}},"examples":{"default":"import { useForm } from \"react-hook-form\";\nimport {\n  Field,\n  Form,\n} from \"@mittwald/flow-react-components/react-hook-form\";\nimport {\n  FieldDescription,\n  Label,\n  TextField,\n} from \"@mittwald/flow-react-components\";\n\nexport default () => {\n  interface Values {\n    name: string;\n  }\n  const form = useForm<Values>();\n\n  return (\n    <Form form={form} onSubmit={console.log}>\n      <Field\n        name=\"name\"\n        rules={{\n          required: \"The project name is required\",\n        }}\n      >\n        <TextField>\n          <Label>Name</Label>\n          <FieldDescription>\n            The name of the project\n          </FieldDescription>\n        </TextField>\n      </Field>\n    </Form>\n  );\n};\n","typed-field":"import { useForm } from \"react-hook-form\";\nimport {\n  Form,\n  typedField,\n} from \"@mittwald/flow-react-components/react-hook-form\";\nimport {\n  Label,\n  TextField,\n} from \"@mittwald/flow-react-components\";\n\nexport default () => {\n  interface Values {\n    myField: string;\n  }\n  const form = useForm<Values>();\n\n  // Only `myField` is allowed for name prop\n  const Field = typedField(form);\n\n  return (\n    <Form form={form} onSubmit={console.log}>\n      <Field name=\"myField\">\n        <TextField>\n          <Label>Name</Label>\n        </TextField>\n      </Field>\n    </Form>\n  );\n};\n"},"slugs":["03-components","form-controls","field-react-hook-form"],"filename":"03-components/form-controls/field-react-hook-form/index.mdx","anchors":[]},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"FileField","description":"Das FileField stellt eine kompakte Lösung dar, um Uploads von Dateien zu ermöglichen."},"scope":{}},"examples":{"contextualHelp":"import {\n  Button,\n  ContextualHelp,\n  ContextualHelpTrigger,\n  FileField,\n  Heading,\n  Label,\n  Text,\n} from \"@mittwald/flow-react-components\";\n\n<FileField>\n  <Label>\n    Zertifikat\n    <ContextualHelpTrigger>\n      <Button />\n      <ContextualHelp>\n        <Heading>Weitere Informationen</Heading>\n        <Text>\n          Hier gibt es weitere Informationen, die zu lang\n          für die FieldDescription sind.\n        </Text>\n      </ContextualHelp>\n    </ContextualHelpTrigger>\n  </Label>\n  <Button variant=\"outline\" color=\"secondary\">\n    Auswählen\n  </Button>\n</FileField>;\n","default":"import {\n  Button,\n  FileField,\n  Label,\n} from \"@mittwald/flow-react-components\";\n\n<FileField>\n  <Label>Zertifikat</Label>\n  <Button variant=\"outline\" color=\"secondary\">\n    Auswählen\n  </Button>\n</FileField>;\n","disabled":"import {\n  Button,\n  FileField,\n  Label,\n} from \"@mittwald/flow-react-components\";\n\n<FileField isDisabled>\n  <Label>Zertifikat</Label>\n  <Button variant=\"outline\" color=\"secondary\">\n    Auswählen\n  </Button>\n</FileField>;\n","fieldDescription":"import {\n  Button,\n  FieldDescription,\n  FileField,\n  Label,\n} from \"@mittwald/flow-react-components\";\n\n<FileField accept={\"image/png, image/jpeg\"}>\n  <Label>Zertifikat</Label>\n  <Button variant=\"outline\" color=\"secondary\">\n    Auswählen\n  </Button>\n  <FieldDescription>\n    Erlaubte Dateitypen sind .jpeg und .png\n  </FieldDescription>\n</FileField>;\n","form":"$35","invalid":"import {\n  Button,\n  FieldError,\n  FileField,\n  Label,\n} from \"@mittwald/flow-react-components\";\n\n<FileField isInvalid>\n  <Label>Zertifikat</Label>\n  <Button variant=\"outline\" color=\"secondary\">\n    Auswählen\n  </Button>\n  <FieldError>\n    Wir konnten das Zertifikat nicht hochladen. Bitte\n    verwende eine .txt-Datei.\n  </FieldError>\n</FileField>;\n"},"slugs":["03-components","form-controls","file-field"],"filename":"03-components/form-controls/file-field/index.mdx","anchors":[]},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"Form","title":"Form (React Hook Form)","gitHubComponentPath":"integrations/react-hook-form/components/Form/Form.tsx","description":"Die Form-Component gruppiert Formularfelder und stellt einen Callback für das Absenden bereit. Sie ist ausschließlich in Kombination mit React Hook Form nutzbar."},"scope":{}},"examples":{"default":"import { useForm } from \"react-hook-form\";\nimport {\n  Field,\n  Form,\n} from \"@mittwald/flow-react-components/react-hook-form\";\nimport {\n  ActionGroup,\n  Button,\n  FieldDescription,\n  Label,\n  Section,\n  TextField,\n} from \"@mittwald/flow-react-components\";\n\nexport default () => {\n  interface Values {\n    name: string;\n  }\n  const form = useForm<Values>();\n\n  const handleOnSubmit = (values: Values) =>\n    alert(JSON.stringify(values));\n\n  return (\n    <Form form={form} onSubmit={handleOnSubmit}>\n      <Section>\n        <Field\n          name=\"name\"\n          rules={{\n            required: \"The project name is required\",\n          }}\n        >\n          <TextField>\n            <Label>Name</Label>\n            <FieldDescription>\n              The name of the project\n            </FieldDescription>\n          </TextField>\n        </Field>\n        <ActionGroup>\n          <Button type=\"submit\">Save</Button>\n        </ActionGroup>\n      </Section>\n    </Form>\n  );\n};\n","resetOnSubmit":"$36"},"slugs":["03-components","form-controls","form-react-hook-form"],"filename":"03-components/form-controls/form-react-hook-form/index.mdx","anchors":[]},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"MarkdownEditor","description":"Der MarkdownEditor ist eine Komponente zur Erstellung und Formatierung von Textinhalten mithilfe von Markdown-Syntax. Er unterstützt User bei der schnellen und konsistenten Textformatierung und stellt eine Vorschauansicht zur Verfügung."},"scope":{}},"examples":{"characterCount":"import { MarkdownEditor } from \"@mittwald/flow-react-components\";\n\n<MarkdownEditor\n  showCharacterCount\n  maxLength={100}\n  aria-label=\"Nachricht\"\n  placeholder=\"Schreibe eine Nachricht ...\"\n/>;\n","chat":"$37","default":"import { MarkdownEditor } from \"@mittwald/flow-react-components\";\n\n<MarkdownEditor\n  aria-label=\"Nachricht\"\n  placeholder=\"Schreibe eine Nachricht ...\"\n/>;\n","disabled":"import { MarkdownEditor } from \"@mittwald/flow-react-components\";\n\n<MarkdownEditor\n  isDisabled\n  aria-label=\"Nachricht\"\n  placeholder=\"Schreibe eine Nachricht ...\"\n/>;\n","form":"import {\n  Label,\n  MarkdownEditor,\n  Button,\n  Section,\n  ActionGroup,\n} from \"@mittwald/flow-react-components\";\nimport { useForm } from \"react-hook-form\";\nimport {\n  Field,\n  Form,\n} from \"@mittwald/flow-react-components/react-hook-form\";\n\nexport default () => {\n  const form = useForm({\n    defaultValues: { message: \"\" },\n  });\n  return (\n    <Section>\n      <Form\n        form={form}\n        onSubmit={(v) => console.log(v.message)}\n      >\n        <Field\n          name=\"message\"\n          rules={{\n            required: \"Bitte gib eine Nachricht ein\",\n          }}\n        >\n          <MarkdownEditor placeholder=\"Schreibe eine Nachricht ...\">\n            <Label>Nachricht</Label>\n          </MarkdownEditor>\n        </Field>\n        <ActionGroup>\n          <Button type=\"submit\" color=\"accent\">\n            Senden\n          </Button>\n        </ActionGroup>\n      </Form>\n    </Section>\n  );\n};\n","resizeable":"import { MarkdownEditor } from \"@mittwald/flow-react-components\";\n\n<MarkdownEditor\n  rows={1}\n  autoResizeMaxRows={5}\n  aria-label=\"Nachricht\"\n  placeholder=\"Schreibe eine Nachricht ...\"\n/>;\n"},"slugs":["03-components","form-controls","markdown-editor"],"filename":"03-components/form-controls/markdown-editor/index.mdx","anchors":[]},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"NumberField","description":"Das NumberField unterstützt die direkte Eingabe numerischer Werte sowie die schrittweise manuelle Anpassung."},"scope":{}},"examples":{"align":"import {\n  Align,\n  Button,\n  Label,\n  NumberField,\n} from \"@mittwald/flow-react-components\";\n\n<Align>\n  <NumberField>\n    <Label>Alter</Label>\n  </NumberField>\n  <Button>Hinzufügen</Button>\n</Align>;\n","contextualHelp":"import {\n  Button,\n  ContextualHelp,\n  ContextualHelpTrigger,\n  Heading,\n  Label,\n  NumberField,\n  Text,\n} from \"@mittwald/flow-react-components\";\n\n<NumberField minValue={0} maxValue={100}>\n  <Label>\n    Alter\n    <ContextualHelpTrigger>\n      <Button />\n      <ContextualHelp>\n        <Heading>Weitere Informationen</Heading>\n        <Text>\n          Hier gibt es weitere Informationen, die zu lang\n          für die FieldDescription sind.\n        </Text>\n      </ContextualHelp>\n    </ContextualHelpTrigger>\n  </Label>\n</NumberField>;\n","default":"import {\n  Label,\n  NumberField,\n} from \"@mittwald/flow-react-components\";\n\n<NumberField minValue={0} maxValue={100}>\n  <Label>Alter</Label>\n</NumberField>;\n","disabled":"import {\n  Label,\n  NumberField,\n} from \"@mittwald/flow-react-components\";\n\n<NumberField isDisabled>\n  <Label>Alter</Label>\n</NumberField>;\n","fieldDescription":"import {\n  FieldDescription,\n  Label,\n  NumberField,\n} from \"@mittwald/flow-react-components\";\n\n<NumberField minValue={18} maxValue={100}>\n  <Label>Alter</Label>\n  <FieldDescription>\n    Du musst mindestens 18 Jahre alt sein\n  </FieldDescription>\n</NumberField>;\n","form":"import {\n  Button,\n  Label,\n  NumberField,\n  Section,\n} from \"@mittwald/flow-react-components\";\nimport { useForm } from \"react-hook-form\";\nimport {\n  Form,\n  typedField,\n} from \"@mittwald/flow-react-components/react-hook-form\";\nimport { sleep } from \"@/content/03-components/actions/action/examples/lib\";\n\nexport default () => {\n  const form = useForm<{ age: number }>();\n  const Field = typedField(form);\n\n  return (\n    <Section>\n      <Form form={form} onSubmit={sleep}>\n        <Field\n          name=\"age\"\n          rules={{\n            required: \"Bitte gib dein Alter an\",\n          }}\n        >\n          <NumberField minValue={0}>\n            <Label>Alter</Label>\n          </NumberField>\n        </Field>\n        <Button type=\"submit\">Speichern</Button>\n      </Form>\n    </Section>\n  );\n};\n","invalid":"import {\n  FieldError,\n  Label,\n  NumberField,\n} from \"@mittwald/flow-react-components\";\n\n<NumberField isInvalid value={-1}>\n  <Label>Alter</Label>\n  <FieldError>Ungültige Eingabe</FieldError>\n</NumberField>;\n","required":"import {\n  Label,\n  NumberField,\n} from \"@mittwald/flow-react-components\";\n\n<NumberField isRequired>\n  <Label>Alter</Label>\n</NumberField>;\n","unit":"import {\n  Label,\n  NumberField,\n} from \"@mittwald/flow-react-components\";\n\n<NumberField\n  formatOptions={{\n    style: \"unit\",\n    unit: \"gigabyte\",\n  }}\n  defaultValue={12}\n>\n  <Label>Speicherplatz</Label>\n</NumberField>;\n"},"slugs":["03-components","form-controls","number-field"],"filename":"03-components/form-controls/number-field/index.mdx","anchors":[]},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"PasswordCreationField","description":"Das PasswordCreationField unterstützt den User dabei, sichere Passwörter zu erstellen. Über eine visuelle Komplexitätsanzeige wird es dem User erleichtert, unsichere Passwörter zu erkennen und zu meiden."},"scope":{}},"examples":{"buttons":"import {\n  Button,\n  Label,\n  PasswordCreationField,\n  IconSshKey,\n} from \"@mittwald/flow-react-components\";\nimport { useState } from \"react\";\nexport default () => {\n  const [password, setPassword] = useState(\"\");\n\n  return (\n    <PasswordCreationField\n      value={password}\n      onChange={setPassword}\n    >\n      <Label>Password</Label>\n      <Button>\n        <IconSshKey />\n      </Button>\n    </PasswordCreationField>\n  );\n};\n","copyButton":"import {\n  CopyButton,\n  Label,\n  PasswordCreationField,\n} from \"@mittwald/flow-react-components\";\n\nexport default () => {\n  return (\n    <PasswordCreationField>\n      <Label>Password</Label>\n      <CopyButton />\n    </PasswordCreationField>\n  );\n};\n","default":"import {\n  Label,\n  PasswordCreationField,\n} from \"@mittwald/flow-react-components\";\nimport { useState } from \"react\";\n\nexport default () => {\n  const [password, setPassword] = useState(\"\");\n\n  return (\n    <PasswordCreationField\n      value={password}\n      onChange={setPassword}\n    >\n      <Label>Password</Label>\n    </PasswordCreationField>\n  );\n};\n","disabled":"import {\n  Label,\n  PasswordCreationField,\n} from \"@mittwald/flow-react-components\";\n\n<PasswordCreationField isDisabled>\n  <Label>Password</Label>\n</PasswordCreationField>;\n","form":"$38","rules":"$39"},"slugs":["03-components","form-controls","password-creation-field"],"filename":"03-components/form-controls/password-creation-field/index.mdx","anchors":[]},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"RadioGroup","description":"Eine RadioGroup ist ein Auswahlelement, das es dem User ermöglicht, genau eine Option aus einer vordefinierten Gruppe auszuwählen."},"scope":{}},"examples":{"buttons":"import {\n  Label,\n  RadioButton,\n  RadioGroup,\n} from \"@mittwald/flow-react-components\";\n\n<RadioGroup defaultValue=\"mysql\">\n  <Label>Datenbank-Typ</Label>\n  <RadioButton value=\"mysql\">MySQL</RadioButton>\n  <RadioButton value=\"redis\">Redis</RadioButton>\n</RadioGroup>;\n","content":"$3a","contextualHelp":"import {\n  Button,\n  ContextualHelp,\n  ContextualHelpTrigger,\n  Heading,\n  Label,\n  Radio,\n  RadioGroup,\n  Text,\n} from \"@mittwald/flow-react-components\";\n\n<RadioGroup defaultValue=\"more\">\n  <Label>\n    Täglicher Kaffeekonsum\n    <ContextualHelpTrigger>\n      <Button />\n      <ContextualHelp>\n        <Heading>Weitere Informationen</Heading>\n        <Text>\n          Hier gibt es weitere Informationen, die zu lang\n          für die FieldDescription sind.\n        </Text>\n      </ContextualHelp>\n    </ContextualHelpTrigger>\n  </Label>\n  <Radio value=\"more\">Mehr als 6 Tassen</Radio>\n  <Radio value=\"5-6\">5-6 Tassen</Radio>\n  <Radio value=\"3-4\">3-4 Tassen</Radio>\n  <Radio value=\"1-2\">1-2 Tassen</Radio>\n  <Radio value=\"none\">Trinke keinen Kaffee</Radio>\n</RadioGroup>;\n","customColumns":"import {\n  Label,\n  RadioButton,\n  RadioGroup,\n} from \"@mittwald/flow-react-components\";\n\n<RadioGroup\n  defaultValue=\"one\"\n  s={[1, 1]}\n  m={[1, 1, 1]}\n  l={[1, 1, 1, 1]}\n>\n  <Label>Benutzerdefinierte Spalten</Label>\n  <RadioButton value=\"one\">Spalte 1</RadioButton>\n  <RadioButton value=\"two\">Spalte 2</RadioButton>\n  <RadioButton value=\"three\">Spalte 3</RadioButton>\n</RadioGroup>;\n","default":"import {\n  Label,\n  Radio,\n  RadioGroup,\n} from \"@mittwald/flow-react-components\";\n\n<RadioGroup defaultValue=\"more\">\n  <Label>Täglicher Kaffeekonsum</Label>\n  <Radio value=\"more\">Mehr als 6 Tassen</Radio>\n  <Radio value=\"5-6\">5-6 Tassen</Radio>\n  <Radio value=\"3-4\">3-4 Tassen</Radio>\n  <Radio value=\"1-2\">1-2 Tassen</Radio>\n  <Radio value=\"none\">Trinke keinen Kaffee</Radio>\n</RadioGroup>;\n","error":"import {\n  FieldError,\n  Label,\n  RadioButton,\n  RadioGroup,\n} from \"@mittwald/flow-react-components\";\n\n<RadioGroup isInvalid>\n  <Label>Datenbank-Typ</Label>\n  <RadioButton value=\"mysql\">MySQL</RadioButton>\n  <RadioButton value=\"redis\">Redis</RadioButton>\n  <FieldError>Bitte wähle eine Option aus</FieldError>\n</RadioGroup>;\n","fieldDescription":"import {\n  FieldDescription,\n  Label,\n  Radio,\n  RadioGroup,\n} from \"@mittwald/flow-react-components\";\n\n<RadioGroup defaultValue=\"more\">\n  <Label>Wie viele Pflanzen besitzt du?</Label>\n  <Radio value=\"more\">Mehr als 9 Pflanzen</Radio>\n  <Radio value=\"6-8\">6-8 Pflanzen</Radio>\n  <Radio value=\"3-5\">3-5 9 Pflanzen</Radio>\n  <Radio value=\"1-2\">1-2 Pflanzen</Radio>\n  <Radio value=\"none\">Keine</Radio>\n  <FieldDescription>\n    Mehrere identische Pflanzen in einem Topf gelten als\n    eine Pflanze.\n  </FieldDescription>\n</RadioGroup>;\n","form":"$3b","hierarchyDo":"import {\n  Label,\n  Radio,\n  RadioGroup,\n} from \"@mittwald/flow-react-components\";\n\n<div style={{ display: \"flex\", justifyContent: \"center\" }}>\n  <RadioGroup defaultValue=\"espelkamp\">\n    <Label>Wohnort</Label>\n    <Radio value=\"espelkamp\">Espelkamp</Radio>\n    <Radio value=\"minden\">Minden</Radio>\n    <Radio value=\"rahden\">Rahden</Radio>\n    <Radio value=\"others\">Andere</Radio>\n  </RadioGroup>\n</div>;\n","hierarchyDont":"import {\n  Label,\n  Radio,\n  RadioGroup,\n} from \"@mittwald/flow-react-components\";\n\n<div style={{ display: \"flex\", justifyContent: \"center\" }}>\n  <RadioGroup defaultValue=\"espelkamp\">\n    <Label>Wohnort</Label>\n    <Radio value=\"espelkamp\">Espelkamp</Radio>\n    <Radio value=\"minden\">Minden</Radio>\n    <Radio value=\"rahden\">Rahden</Radio>\n    <Radio value=\"luebbecke\">Lübbecke</Radio>\n  </RadioGroup>\n</div>;\n","introduction":"import {\n  Label,\n  Radio,\n  RadioGroup,\n} from \"@mittwald/flow-react-components\";\n\n<RadioGroup defaultValue=\"admin\">\n  <Label>Rolle</Label>\n  <Radio value=\"admin\">Administrator</Radio>\n  <Radio value=\"member\">Mitglied</Radio>\n  <Radio value=\"accountant\">Buchhalter</Radio>\n</RadioGroup>;\n","labelDo":"import { Label } from \"@mittwald/flow-react-components\";\n\n<div\n  style={{\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  }}\n>\n  <Label>Filter</Label>\n  <Label>Zahlungsmethode</Label>\n</div>;\n","labelDont":"import { Label } from \"@mittwald/flow-react-components\";\n\n<div\n  style={{\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  }}\n>\n  <Label>\n    Wähle hier die passende Filtermöglichkeit aus:\n  </Label>\n  <Label>Wie möchtest du den Vorgang bezahlen?</Label>\n</div>;\n","optionsDo":"import {\n  Label,\n  Radio,\n  RadioGroup,\n} from \"@mittwald/flow-react-components\";\n\n<div style={{ display: \"flex\", justifyContent: \"center\" }}>\n  <RadioGroup defaultValue=\"0-10\">\n    <Label>Alter</Label>\n    <Radio value=\"0-10\">0-10 Jahre</Radio>\n    <Radio value=\"11-20\">11-20 Jahre</Radio>\n    <Radio value=\"21-30\">21-30 Jahre</Radio>\n    <Radio value=\"31-40\">31-40 Jahre</Radio>\n    <Radio value=\"41+\">41+ Jahre</Radio>\n  </RadioGroup>\n</div>;\n","optionsDont":"import {\n  Label,\n  Radio,\n  RadioGroup,\n} from \"@mittwald/flow-react-components\";\n\n<div style={{ display: \"flex\", justifyContent: \"center\" }}>\n  <RadioGroup defaultValue=\"0-10\">\n    <Label>Alter</Label>\n    <Radio value=\"0-10\">0-10 Jahre</Radio>\n    <Radio value=\"10-20\">11-20 Jahre</Radio>\n    <Radio value=\"20-30\">21-30 Jahre</Radio>\n    <Radio value=\"30-40\">31-40 Jahre</Radio>\n    <Radio value=\"40+\">40+ Jahre</Radio>\n  </RadioGroup>\n</div>;\n","states":"import {\n  RadioButton,\n  RadioGroup,\n} from \"@mittwald/flow-react-components\";\n\n<RadioGroup\n  defaultValue=\"selected\"\n  l={[1, 1]}\n  aria-label=\"States\"\n>\n  <RadioButton value=\"default\">Domain buchen</RadioButton>\n  <RadioButton value=\"selected\">Domain buchen</RadioButton>\n  <RadioButton isDisabled value=\"default\">\n    Domain buchen\n  </RadioButton>\n  <RadioButton isDisabled value=\"selected\">\n    Domain buchen\n  </RadioButton>\n</RadioGroup>;\n"},"slugs":["03-components","form-controls","radio-group"],"filename":"03-components/form-controls/radio-group/index.mdx","anchors":[]},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"SearchField","description":"Ein SearchField ist ein Eingabefeld, mit dem gezielt nach Inhalten innerhalb einer Anwendung gesucht werden kann."},"scope":{}},"examples":{"align":"import {\n  Align,\n  Button,\n  SearchField,\n} from \"@mittwald/flow-react-components\";\n\n<Align>\n  <SearchField />\n  <Button>Suchen</Button>\n</Align>;\n","default":"import { SearchField } from \"@mittwald/flow-react-components\";\n\n<SearchField />;\n","form":"import {\n  Button,\n  SearchField,\n  Section,\n} from \"@mittwald/flow-react-components\";\nimport { useForm } from \"react-hook-form\";\nimport {\n  Form,\n  typedField,\n} from \"@mittwald/flow-react-components/react-hook-form\";\nimport { sleep } from \"@/content/03-components/actions/action/examples/lib\";\n\nexport default () => {\n  const form = useForm<{ search: string }>();\n  const Field = typedField(form);\n\n  return (\n    <Section>\n      <Form form={form} onSubmit={sleep}>\n        <Field\n          name=\"search\"\n          rules={{\n            required: \"Bitte gib etwas in die Suche ein\",\n          }}\n        >\n          <SearchField />\n        </Field>\n        <Button type=\"submit\">Suchen</Button>\n      </Form>\n    </Section>\n  );\n};\n"},"slugs":["03-components","form-controls","search-field"],"filename":"03-components/form-controls/search-field/index.mdx","anchors":[]},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"SegmentedControl","description":"Ein SegmentedControl bietet dem User eine Einfachauswahl von 2 bis 5 kurzen Optionen. Je nach Einsatzzweck kann die Auswahl des Users den Inhalt unter dem Segmented Control verändern."},"scope":{}},"examples":{"changeContent":"$3c","compact":"import {\n  ColumnLayout,\n  Label,\n  Segment,\n  SegmentedControl,\n} from \"@mittwald/flow-react-components\";\n\n<ColumnLayout m={[1, 1]}>\n  <SegmentedControl\n    defaultValue=\"entwickler\"\n    containerBreakpointSize=\"xl\"\n  >\n    <Label>Rolle</Label>\n    <Segment value=\"entwickler\">Entwickler</Segment>\n    <Segment value=\"geschäftsführer\">\n      Geschäftsführer\n    </Segment>\n    <Segment value=\"andere\">Andere</Segment>\n  </SegmentedControl>\n\n  <SegmentedControl\n    defaultValue=\"entwickler\"\n    containerBreakpointSize=\"xs\"\n  >\n    <Label>Rolle</Label>\n    <Segment value=\"entwickler\">Entwickler</Segment>\n    <Segment value=\"geschäftsführer\">\n      Geschäftsführer\n    </Segment>\n    <Segment value=\"andere\">Andere</Segment>\n  </SegmentedControl>\n</ColumnLayout>;\n","contextualHelp":"import {\n  Button,\n  ContextualHelp,\n  ContextualHelpTrigger,\n  Heading,\n  Label,\n  Segment,\n  SegmentedControl,\n  Text,\n} from \"@mittwald/flow-react-components\";\n\n<SegmentedControl defaultValue=\"lastschrift\">\n  <Label>\n    Zahlungsart\n    <ContextualHelpTrigger>\n      <Button />\n      <ContextualHelp>\n        <Heading>Weitere Informationen</Heading>\n        <Text>\n          Hier gibt es weitere Informationen, die zu lang\n          für die FieldDescription sind.\n        </Text>\n      </ContextualHelp>\n    </ContextualHelpTrigger>\n  </Label>\n  <Segment value=\"lastschrift\">Lastschrift</Segment>\n  <Segment value=\"Rechnung\">Rechnung</Segment>\n</SegmentedControl>;\n","default":"import {\n  Label,\n  Segment,\n  SegmentedControl,\n} from \"@mittwald/flow-react-components\";\n\n<SegmentedControl defaultValue=\"lastschrift\">\n  <Label>Zahlungsart</Label>\n  <Segment value=\"lastschrift\">Lastschrift</Segment>\n  <Segment value=\"Rechnung\">Rechnung</Segment>\n</SegmentedControl>;\n","fieldDescription":"import {\n  FieldDescription,\n  Label,\n  Segment,\n  SegmentedControl,\n} from \"@mittwald/flow-react-components\";\n\n<SegmentedControl defaultValue=\"cloud\">\n  <Label>Speicherplatz</Label>\n  <Segment value=\"cloud\">Cloud</Segment>\n  <Segment value=\"lokal\">Lokal</Segment>\n  <FieldDescription>\n    Speicherplatz kann jederzeit geändert werden\n  </FieldDescription>\n</SegmentedControl>;\n","form":"import {\n  Button,\n  Label,\n  Section,\n  Segment,\n  SegmentedControl,\n} from \"@mittwald/flow-react-components\";\nimport { useForm } from \"react-hook-form\";\nimport {\n  Form,\n  typedField,\n} from \"@mittwald/flow-react-components/react-hook-form\";\nimport { sleep } from \"@/content/03-components/actions/action/examples/lib\";\n\nexport default () => {\n  const form = useForm<{ payment: \"debit\" | \"invoice\" }>({\n    defaultValues: { payment: \"debit\" },\n  });\n  const Field = typedField(form);\n\n  return (\n    <Section>\n      <Form form={form} onSubmit={sleep}>\n        <Field\n          name=\"payment\"\n          rules={{\n            required: \"Bitte wähle eine Zahlungsart aus\",\n          }}\n        >\n          <SegmentedControl>\n            <Label>Zahlungsart</Label>\n            <Segment value=\"debit\">Lastschrift</Segment>\n            <Segment value=\"invoice\">Rechnung</Segment>\n          </SegmentedControl>\n        </Field>\n        <Button type=\"submit\">Speichern</Button>\n      </Form>\n    </Section>\n  );\n};\n","playground":"import {\n  Label,\n  Segment,\n  SegmentedControl,\n} from \"@mittwald/flow-react-components\";\n\n<SegmentedControl defaultValue=\"ssh-key\">\n  <Label>Authentifizierungsart</Label>\n  <Segment value=\"ssh-key\">SSH-Key</Segment>\n  <Segment value=\"passwort\">Passwort</Segment>\n</SegmentedControl>;\n","states":"import {\n  Label,\n  Section,\n  Segment,\n  SegmentedControl,\n} from \"@mittwald/flow-react-components\";\n\n<Section>\n  <SegmentedControl defaultValue=\"dev\">\n    <Label>Rolle</Label>\n    <Segment value=\"entwickler\">Entwickler</Segment>\n    <Segment value=\"designer\">Designer</Segment>\n    <Segment value=\"geschäftsführer\">\n      Geschäftsführer\n    </Segment>\n    <Segment value=\"andere\">Andere</Segment>\n  </SegmentedControl>\n  <SegmentedControl defaultValue=\"dev\" isDisabled>\n    <Label>Rolle</Label>\n    <Segment value=\"entwickler\">Entwickler</Segment>\n    <Segment value=\"designer\">Designer</Segment>\n    <Segment value=\"geschäftsführer\">\n      Geschäftsführer\n    </Segment>\n    <Segment value=\"andere\">Andere</Segment>\n  </SegmentedControl>\n</Section>;\n","textDo":"import {\n  Label,\n  Segment,\n  SegmentedControl,\n} from \"@mittwald/flow-react-components\";\n\n<SegmentedControl defaultValue=\"individuell\">\n  <Label>Einstellung</Label>\n  <Segment value=\"standard\">Standard</Segment>\n  <Segment value=\"individuell\">Individuell</Segment>\n</SegmentedControl>;\n","textDont":"import {\n  Label,\n  Segment,\n  SegmentedControl,\n} from \"@mittwald/flow-react-components\";\n\n<SegmentedControl defaultValue=\"individuell\">\n  <Label>Wähle deine Einstellungsart aus:</Label>\n  <Segment value=\"standard\">Standard-Einstellungen</Segment>\n  <Segment value=\"individuell\">\n    Individuell einstellbare Einstellungen\n  </Segment>\n</SegmentedControl>;\n"},"slugs":["03-components","form-controls","segmented-control"],"filename":"03-components/form-controls/segmented-control/index.mdx","anchors":[]},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"Select","description":"Ein Select ermöglicht es Usern, eine einzelne Option aus einer vordefinierten Liste auszuwählen."},"scope":{}},"examples":{"align":"import {\n  Align,\n  Button,\n  Select,\n  Label,\n  Option,\n} from \"@mittwald/flow-react-components\";\n\n<Align>\n  <Select>\n    <Label>App</Label>\n    <Option>WordPress</Option>\n    <Option>TYPO3</Option>\n    <Option>Contao</Option>\n    <Option>Drupal</Option>\n    <Option>Joomla!</Option>\n    <Option>Matomo</Option>\n  </Select>\n  <Button>Hinzufügen</Button>\n</Align>;\n","contextualHelp":"import {\n  Button,\n  ContextualHelp,\n  ContextualHelpTrigger,\n  Heading,\n  Label,\n  Option,\n  Select,\n  Text,\n} from \"@mittwald/flow-react-components\";\n\n<Select>\n  <Label>\n    App\n    <ContextualHelpTrigger>\n      <Button />\n      <ContextualHelp>\n        <Heading>Weitere Informationen</Heading>\n        <Text>\n          Hier gibt es weitere Informationen, die zu lang\n          für die FieldDescription sind.\n        </Text>\n      </ContextualHelp>\n    </ContextualHelpTrigger>\n  </Label>\n  <Option>WordPress</Option>\n  <Option>TYPO3</Option>\n  <Option>Contao</Option>\n  <Option>Drupal</Option>\n  <Option>Joomla!</Option>\n  <Option>Matomo</Option>\n</Select>;\n","default":"import {\n  Label,\n  Option,\n  Select,\n} from \"@mittwald/flow-react-components\";\n\n<Select>\n  <Label>App</Label>\n  <Option>WordPress</Option>\n  <Option>TYPO3</Option>\n  <Option>Contao</Option>\n  <Option>Drupal</Option>\n  <Option>Joomla!</Option>\n  <Option>Matomo</Option>\n</Select>;\n","defaultValue":"import {\n  Label,\n  Option,\n  Select,\n} from \"@mittwald/flow-react-components\";\n\n<Select defaultSelectedKey=\"wordpress\" isRequired>\n  <Label>App</Label>\n  <Option value=\"wordpress\">WordPress</Option>\n  <Option value=\"typo3\">TYPO3</Option>\n</Select>;\n","fieldDescription":"import {\n  FieldDescription,\n  Label,\n  Option,\n  Select,\n} from \"@mittwald/flow-react-components\";\n\n<Select>\n  <Label>App</Label>\n  <Option>WordPress</Option>\n  <Option>TYPO3</Option>\n  <Option>Contao</Option>\n  <Option>Drupal</Option>\n  <Option>Joomla!</Option>\n  <Option>Matomo</Option>\n  <FieldDescription>Weitere Informationen</FieldDescription>\n</Select>;\n","form":"import {\n  Button,\n  Label,\n  Option,\n  Section,\n  Select,\n} from \"@mittwald/flow-react-components\";\nimport { useForm } from \"react-hook-form\";\nimport {\n  Form,\n  typedField,\n} from \"@mittwald/flow-react-components/react-hook-form\";\nimport { sleep } from \"@/content/03-components/actions/action/examples/lib\";\n\nexport default () => {\n  const form = useForm<{ app: string }>();\n  const Field = typedField(form);\n\n  return (\n    <Section>\n      <Form form={form} onSubmit={sleep}>\n        <Field\n          name=\"app\"\n          rules={{\n            required: \"Bitte wähle eine App aus\",\n          }}\n        >\n          <Select>\n            <Label>App</Label>\n            <Option value=\"wordpress\">WordPress</Option>\n            <Option value=\"typo3\">TYPO3</Option>\n          </Select>\n        </Field>\n        <Button type=\"submit\">Speichern</Button>\n      </Form>\n    </Section>\n  );\n};\n"},"slugs":["03-components","form-controls","select"],"filename":"03-components/form-controls/select/index.mdx","anchors":[]},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"Slider","description":"Slider ermöglichen die Auswahl von Zahlenwerten innerhalb eines definierten Wertebereichs."},"scope":{}},"examples":{"default":"import {\n  Label,\n  Slider,\n} from \"@mittwald/flow-react-components\";\n\n<Slider\n  formatOptions={{\n    style: \"unit\",\n    unit: \"gigabyte\",\n  }}\n  minValue={50}\n  maxValue={750}\n  defaultValue={150}\n  step={50}\n  showInitialMarker\n>\n  <Label>Speicherplatz</Label>\n</Slider>;\n","form":"$3d"},"slugs":["03-components","form-controls","slider"],"filename":"03-components/form-controls/slider/index.mdx","anchors":[]},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"Switch","description":"Mit einem Switch können User Optionen ein- oder ausschalten. Die Component wird normalerweise verwendet, um bestimmte Einstellungen zu aktivieren oder zu deaktivieren."},"scope":{}},"examples":{"default":"import { Switch } from \"@mittwald/flow-react-components\";\n\n<Switch defaultSelected>Autoresponder</Switch>;\n","disabled":"import { Switch } from \"@mittwald/flow-react-components\";\n\n<Switch isDisabled>Autoresponder</Switch>;\n","leading-label":"import { Switch } from \"@mittwald/flow-react-components\";\n\n<Switch labelPosition=\"leading\">Autoresponder</Switch>;\n"},"slugs":["03-components","form-controls","switch"],"filename":"03-components/form-controls/switch/index.mdx","anchors":[]},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"TextArea","description":"Die TextArea ermöglicht es dem User, längere Texte über mehrere Zeilen hinweg einzugeben."},"scope":{}},"examples":{"align":"import {\n  Align,\n  Button,\n  Label,\n  TextArea,\n} from \"@mittwald/flow-react-components\";\n\n<Align>\n  <TextArea>\n    <Label>Nachricht</Label>\n  </TextArea>\n  <Button>Senden</Button>\n</Align>;\n","characterCount":"import {\n  Label,\n  TextArea,\n} from \"@mittwald/flow-react-components\";\n\n<TextArea showCharacterCount maxLength={100}>\n  <Label>Nachricht</Label>\n</TextArea>;\n","contextualHelp":"import {\n  Button,\n  ContextualHelp,\n  ContextualHelpTrigger,\n  Heading,\n  Label,\n  TextArea,\n  Text,\n} from \"@mittwald/flow-react-components\";\n\n<TextArea>\n  <Label>\n    Public Key\n    <ContextualHelpTrigger>\n      <Button />\n      <ContextualHelp>\n        <Heading>Weitere Informationen</Heading>\n        <Text>\n          Hier gibt es weitere Informationen, die zu lang\n          für die FieldDescription sind.\n        </Text>\n      </ContextualHelp>\n    </ContextualHelpTrigger>\n  </Label>\n</TextArea>;\n","default":"import {\n  FieldDescription,\n  Label,\n  TextArea,\n} from \"@mittwald/flow-react-components\";\n\n<TextArea>\n  <Label>Public Key</Label>\n  <FieldDescription>Beginnt mit ssh-rsa</FieldDescription>\n</TextArea>;\n","disabled":"import {\n  Label,\n  TextArea,\n} from \"@mittwald/flow-react-components\";\n\n<TextArea isDisabled>\n  <Label>Public Key</Label>\n</TextArea>;\n","form":"import {\n  Button,\n  Label,\n  Section,\n  TextArea,\n} from \"@mittwald/flow-react-components\";\nimport { useForm } from \"react-hook-form\";\nimport {\n  Form,\n  typedField,\n} from \"@mittwald/flow-react-components/react-hook-form\";\nimport { sleep } from \"@/content/03-components/actions/action/examples/lib\";\n\nexport default () => {\n  const form = useForm<{ message: string }>();\n  const Field = typedField(form);\n\n  return (\n    <Section>\n      <Form form={form} onSubmit={sleep}>\n        <Field\n          name=\"message\"\n          rules={{\n            required: \"Bitte gib eine Nachricht ein\",\n          }}\n        >\n          <TextArea>\n            <Label>Nachricht</Label>\n          </TextArea>\n        </Field>\n        <Button type=\"submit\">Senden</Button>\n      </Form>\n    </Section>\n  );\n};\n","invalid":"import {\n  FieldError,\n  Label,\n  TextArea,\n} from \"@mittwald/flow-react-components\";\n\n<TextArea isInvalid defaultValue=\"hello\">\n  <Label>Public Key</Label>\n  <FieldError>Ungültiger Key</FieldError>\n</TextArea>;\n","required":"import {\n  Label,\n  TextArea,\n} from \"@mittwald/flow-react-components\";\n\n<TextArea isRequired>\n  <Label>Public Key</Label>\n</TextArea>;\n","resizeable":"import {\n  Label,\n  TextArea,\n} from \"@mittwald/flow-react-components\";\n\n<TextArea rows={1} autoResizeMaxRows={5}>\n  <Label>Nachricht</Label>\n</TextArea>;\n"},"slugs":["03-components","form-controls","text-area"],"filename":"03-components/form-controls/text-area/index.mdx","anchors":[]},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"TextField","description":"Ein TextField ermöglicht es dem Nutzer, Text über die Tastatur in ein User Interface einzugeben. Ein Label und eine optionale FieldDescription unterstützen dabei, die Anforderungen an die Eingabe klar zu kommunizieren."},"scope":{}},"examples":{"align":"import {\n  Align,\n  Button,\n  Label,\n  TextField,\n} from \"@mittwald/flow-react-components\";\n\n<Align>\n  <TextField>\n    <Label>Weiterleitungsziel</Label>\n  </TextField>\n  <Button>Hinzufügen</Button>\n</Align>;\n","characterCount":"import {\n  Label,\n  TextField,\n} from \"@mittwald/flow-react-components\";\n\n<TextField showCharacterCount maxLength={10}>\n  <Label>Benutzername</Label>\n</TextField>;\n","columnLayout":"import {\n  ColumnLayout,\n  Label,\n  TextField,\n} from \"@mittwald/flow-react-components\";\n\n<ColumnLayout m={[1, 1]}>\n  <TextField isRequired>\n    <Label>Vorname</Label>\n  </TextField>\n  <TextField isRequired>\n    <Label>Nachname</Label>\n  </TextField>\n  <ColumnLayout s={[2, 1]}>\n    <TextField isRequired>\n      <Label>Straße</Label>\n    </TextField>\n    <TextField isRequired>\n      <Label>Hausnummer</Label>\n    </TextField>\n  </ColumnLayout>\n  <ColumnLayout s={[2, 1]}>\n    <TextField isRequired>\n      <Label>Stadt</Label>\n    </TextField>\n    <TextField isRequired>\n      <Label>PLZ</Label>\n    </TextField>\n  </ColumnLayout>\n  <TextField isRequired>\n    <Label>Land</Label>\n  </TextField>\n</ColumnLayout>;\n","contextualHelp":"import {\n  Button,\n  ContextualHelp,\n  ContextualHelpTrigger,\n  Heading,\n  Label,\n  Text,\n  TextField,\n} from \"@mittwald/flow-react-components\";\n\n<TextField>\n  <Label>\n    URL\n    <ContextualHelpTrigger>\n      <Button />\n      <ContextualHelp>\n        <Heading>Weitere Informationen</Heading>\n        <Text>\n          Hier gibt es weitere Informationen, die zu lang\n          für die FieldDescription sind.\n        </Text>\n      </ContextualHelp>\n    </ContextualHelpTrigger>\n  </Label>\n</TextField>;\n","default":"import {\n  FieldDescription,\n  Label,\n  TextField,\n} from \"@mittwald/flow-react-components\";\n\n<TextField>\n  <Label>URL</Label>\n  <FieldDescription>Beginnt mit https://</FieldDescription>\n</TextField>;\n","defaultValue":"import {\n  Label,\n  TextField,\n} from \"@mittwald/flow-react-components\";\n\n<TextField defaultValue=\"https://mittwald.de\">\n  <Label>URL</Label>\n</TextField>;\n","disabled":"import {\n  Label,\n  TextField,\n} from \"@mittwald/flow-react-components\";\n\n<TextField isDisabled>\n  <Label>URL</Label>\n</TextField>;\n","form":"import {\n  Button,\n  Label,\n  Section,\n  TextField,\n} from \"@mittwald/flow-react-components\";\nimport { useForm } from \"react-hook-form\";\nimport {\n  Form,\n  typedField,\n} from \"@mittwald/flow-react-components/react-hook-form\";\nimport { sleep } from \"@/content/03-components/actions/action/examples/lib\";\n\nexport default () => {\n  const form = useForm<{ url: string }>();\n  const Field = typedField(form);\n\n  return (\n    <Section>\n      <Form form={form} onSubmit={sleep}>\n        <Field\n          name=\"url\"\n          rules={{\n            required: \"Bitte gib eine URL ein\",\n          }}\n        >\n          <TextField>\n            <Label>URL</Label>\n          </TextField>\n        </Field>\n        <Button type=\"submit\">Speichern</Button>\n      </Form>\n    </Section>\n  );\n};\n","inputProps":"import {\n  Label,\n  TextField,\n} from \"@mittwald/flow-react-components\";\n\n<TextField name=\"email\" type=\"email\">\n  <Label>E-Mail</Label>\n</TextField>;\n","invalid":"import {\n  FieldError,\n  Label,\n  TextField,\n} from \"@mittwald/flow-react-components\";\n\n<TextField isInvalid defaultValue=\"hello\">\n  <Label>URL</Label>\n  <FieldError>Das ist keine URL</FieldError>\n</TextField>;\n","placeholder":"import {\n  Label,\n  TextField,\n} from \"@mittwald/flow-react-components\";\n\n<TextField placeholder=\"https://\">\n  <Label>URL</Label>\n</TextField>;\n","required":"import {\n  ColumnLayout,\n  Label,\n  TextField,\n} from \"@mittwald/flow-react-components\";\n\n<ColumnLayout m={[1, 1]}>\n  <TextField isRequired>\n    <Label>URL</Label>\n  </TextField>\n  <TextField>\n    <Label>URL</Label>\n  </TextField>\n</ColumnLayout>;\n","withoutLabel":"import {\n  FieldDescription,\n  TextField,\n} from \"@mittwald/flow-react-components\";\n\n<TextField aria-label=\"URL\">\n  <FieldDescription>Beginnt mit https://</FieldDescription>\n</TextField>;\n"},"slugs":["03-components","form-controls","text-field"],"filename":"03-components/form-controls/text-field/index.mdx","anchors":[]},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"TimeField","description":"Mit dem TimeField können User eine konkrete Uhrzeit angeben."},"scope":{}},"examples":{"contextualHelp":"import {\n  Button,\n  ContextualHelp,\n  ContextualHelpTrigger,\n  Heading,\n  Label,\n  TimeField,\n  Text,\n} from \"@mittwald/flow-react-components\";\n\n<TimeField>\n  <Label>\n    Uhrzeit\n    <ContextualHelpTrigger>\n      <Button />\n      <ContextualHelp>\n        <Heading>Weitere Informationen</Heading>\n        <Text>\n          Hier gibt es weitere Informationen, die zu lang\n          für die FieldDescription sind.\n        </Text>\n      </ContextualHelp>\n    </ContextualHelpTrigger>\n  </Label>\n</TimeField>;\n","default":"import {\n  Label,\n  TimeField,\n} from \"@mittwald/flow-react-components\";\n\n<TimeField>\n  <Label>Uhrzeit</Label>\n</TimeField>;\n","disabled":"import {\n  Label,\n  TimeField,\n} from \"@mittwald/flow-react-components\";\n\n<TimeField isDisabled>\n  <Label>Datum</Label>\n</TimeField>;\n","form":"import {\n  Button,\n  Label,\n  Section,\n  TimeField,\n} from \"@mittwald/flow-react-components\";\nimport { useForm } from \"react-hook-form\";\nimport {\n  Form,\n  typedField,\n} from \"@mittwald/flow-react-components/react-hook-form\";\nimport { sleep } from \"@/content/03-components/actions/action/examples/lib\";\nimport type { CalendarDateTime } from \"@internationalized/date\";\n\nexport default () => {\n  const form = useForm<{ time: CalendarDateTime }>();\n  const Field = typedField(form);\n\n  return (\n    <Section>\n      <Form form={form} onSubmit={sleep}>\n        <Field\n          name=\"time\"\n          rules={{\n            required: \"Bitte gib eine Uhrzeit ein\",\n          }}\n        >\n          <TimeField>\n            <Label>Uhrzeit</Label>\n          </TimeField>\n        </Field>\n        <Button type=\"submit\">Speichern</Button>\n      </Form>\n    </Section>\n  );\n};\n","granularity":"import {\n  Label,\n  TimeField,\n} from \"@mittwald/flow-react-components\";\n\n<Row>\n  <TimeField granularity=\"hour\">\n    <Label>Stunde</Label>\n  </TimeField>\n  <TimeField>\n    <Label>Stunde und Minute</Label>\n  </TimeField>\n  <TimeField granularity=\"second\">\n    <Label>Stunde, Minute und Sekunde</Label>\n  </TimeField>\n</Row>;\n","minMax":"import {\n  FieldDescription,\n  Label,\n  TimeField,\n} from \"@mittwald/flow-react-components\";\nimport { Time } from \"@internationalized/date\";\n\n<TimeField\n  minValue={new Time(8, 0)}\n  maxValue={new Time(16, 0)}\n>\n  <Label>Uhrzeit</Label>\n  <FieldDescription>Zwischen 8 und 16 Uhr</FieldDescription>\n</TimeField>;\n"},"slugs":["03-components","form-controls","time-field"],"filename":"03-components/form-controls/time-field/index.mdx","anchors":[]},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"Breadcrumb","description":"Eine Breadcrumb ist ein Navigationselement, das Usern Orientierung bietet, indem es die aktuelle Position sowie die übergeordneten Navigationsebenen anzeigt."},"scope":{}},"examples":{"dark":"import {\n  Breadcrumb,\n  Link,\n} from \"@mittwald/flow-react-components\";\n\n<Breadcrumb color=\"dark\">\n  <Link href=\"#\">Projekte</Link>\n  <Link href=\"#\">Apps</Link>\n  <Link href=\"#\">Meine App</Link>\n</Breadcrumb>;\n","default":"import {\n  Breadcrumb,\n  Link,\n} from \"@mittwald/flow-react-components\";\n\n<Breadcrumb>\n  <Link href=\"#\">Projekte</Link>\n  <Link href=\"#\">Apps</Link>\n  <Link href=\"#\">Meine App</Link>\n</Breadcrumb>;\n","light":"import {\n  Breadcrumb,\n  Link,\n} from \"@mittwald/flow-react-components\";\n\n<Breadcrumb color=\"light\">\n  <Link href=\"#\">Projekte</Link>\n  <Link href=\"#\">Apps</Link>\n  <Link href=\"#\">Meine App</Link>\n</Breadcrumb>;\n"},"slugs":["03-components","navigation","breadcrumb"],"filename":"03-components/navigation/breadcrumb/index.mdx","anchors":[]},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"HeaderNavigation","description":"Die HeaderNavigation ist eine horizontale Navigationskomponente, die als Navigationsleiste am oberen Rand einer Seite verwendet wird. Sie bietet Nutzenden Zugriff auf zentrale Bereiche einer Anwendung oder Website."},"scope":{}},"examples":{"contextMenu":"import {\n  Avatar,\n  Button,\n  ContextMenu,\n  ContextMenuTrigger,\n  HeaderNavigation,\n  IconLogout,\n  IconNotification,\n  IconSearch,\n  IconSettings,\n  IconSupport,\n  Image,\n  MenuItem,\n  Text,\n} from \"@mittwald/flow-react-components\";\n\n<HeaderNavigation aria-label=\"Header navigation\">\n  <Button>\n    <IconSearch />\n  </Button>\n  <Button>\n    <IconSupport />\n  </Button>\n  <Button>\n    <IconNotification />\n  </Button>\n  <ContextMenuTrigger>\n    <Button>\n      <Avatar>\n        <Image\n          alt=\"Gopher\"\n          src=\"https://cdn.shopify.com/s/files/1/2022/6883/products/IMG_2002_250x250@2x.JPG?v=1538235544\"\n        />\n      </Avatar>\n    </Button>\n    <ContextMenu>\n      <MenuItem>\n        <IconSettings />\n        <Text>Profil</Text>\n      </MenuItem>\n      <MenuItem>\n        <IconLogout />\n        <Text>Logout</Text>\n      </MenuItem>\n    </ContextMenu>\n  </ContextMenuTrigger>\n</HeaderNavigation>;\n","dark":"import {\n  Button,\n  HeaderNavigation,\n  IconSearch,\n  Link,\n} from \"@mittwald/flow-react-components\";\n\n<HeaderNavigation\n  aria-label=\"Header navigation\"\n  color=\"dark\"\n>\n  <Link href=\"#\">Getting startet</Link>\n  <Link href=\"#\" aria-current=\"page\">\n    Components\n  </Link>\n  <Button>\n    <IconSearch />\n  </Button>\n</HeaderNavigation>;\n","default":"import {\n  Button,\n  HeaderNavigation,\n  IconSearch,\n  Link,\n} from \"@mittwald/flow-react-components\";\n\n<HeaderNavigation aria-label=\"Header navigation\">\n  <Link href=\"#\">Getting startet</Link>\n  <Link href=\"#\" aria-current=\"page\">\n    Komponenten\n  </Link>\n  <Button>\n    <IconSearch />\n  </Button>\n</HeaderNavigation>;\n","light":"import {\n  Button,\n  HeaderNavigation,\n  IconSearch,\n  Link,\n} from \"@mittwald/flow-react-components\";\n\n<HeaderNavigation\n  aria-label=\"Header navigation\"\n  color=\"light\"\n>\n  <Link href=\"#\">Getting startet</Link>\n  <Link href=\"#\" aria-current=\"page\">\n    Components\n  </Link>\n  <Button>\n    <IconSearch />\n  </Button>\n</HeaderNavigation>;\n"},"slugs":["03-components","navigation","header-navigation"],"filename":"03-components/navigation/header-navigation/index.mdx","anchors":[]},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"Link","description":"Ein Link dient in erster Linie dazu, den User zu einer anderen Seite zu navigieren. Darüber hinaus kann er auch einen Download starten oder zu einem bestimmten Ankerpunkt auf der Seite führen."},"scope":{}},"examples":{"dark":"import { Link } from \"@mittwald/flow-react-components\";\n\n<Link href=\"#\" color=\"dark\">\n  Dark\n</Link>;\n","default":"import { Link } from \"@mittwald/flow-react-components\";\n\n<Link href=\"#\">Zum Dashboard</Link>;\n","disabled":"import { Link } from \"@mittwald/flow-react-components\";\n\n<Link href=\"#\" isDisabled>\n  Disabled\n</Link>;\n","download":"import { Link } from \"@mittwald/flow-react-components\";\n\n<Link download>Rechnung herunterladen</Link>;\n","external":"import { Link } from \"@mittwald/flow-react-components\";\n\n<Link href=\"https://mittwald.de\" target=\"_blank\">\n  Externer Link\n</Link>;\n","inlineText":"import {\n  Link,\n  Text,\n} from \"@mittwald/flow-react-components\";\n\n<Text>\n  Sieh dir unser <Link href=\"#\">Onboarding</Link> an, um\n  weitere Informationen zu erhalten.\n</Text>;\n","light":"import { Link } from \"@mittwald/flow-react-components\";\n\n<Link href=\"#\" color=\"light\">\n  Light\n</Link>;\n","position1":"import {\n  Header,\n  Heading,\n  Link,\n  Section,\n  Text,\n} from \"@mittwald/flow-react-components\";\n\n<Section>\n  <Header>\n    <Heading>Heading 2</Heading>\n    <Link href=\"#\">Textlink</Link>\n  </Header>\n  <Text>\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n  </Text>\n</Section>;\n","position2":"import {\n  Header,\n  Heading,\n  Link,\n  Section,\n  Text,\n} from \"@mittwald/flow-react-components\";\n\n<Section>\n  <Header>\n    <Heading>Heading 2</Heading>\n  </Header>\n  <Text>\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n  </Text>\n  <Link href=\"#\">Textlink</Link>\n</Section>;\n","primary":"import { Link } from \"@mittwald/flow-react-components\";\n\n<Link href=\"#\">Primary</Link>;\n","writingExtraDo":"import {\n  Link,\n  Text,\n} from \"@mittwald/flow-react-components\";\n\n<>\n  <Text>\n    Links sind wichte Navigationselemente innerhalb von\n    Benutzeroberflächen.\n  </Text>\n  <Link href=\"#\">Erfahre mehr über Links</Link>\n</>;\n","writingExtraDont":"import {\n  Link,\n  Text,\n} from \"@mittwald/flow-react-components\";\n\n<>\n  <Text>\n    Links sind wichte Navigationselemente innerhalb von\n    Benutzeroberflächen.\n  </Text>\n  <Link href=\"#\">Erfahre mehr</Link>\n</>;\n","writingInlineDo":"import {\n  Link,\n  Text,\n} from \"@mittwald/flow-react-components\";\n\n<Text>\n  Mit Hilfe des <Link href=\"#\">Onboardings</Link> kannst du\n  direkt loslegen.\n</Text>;\n","writingInlineDont":"import {\n  Link,\n  Text,\n} from \"@mittwald/flow-react-components\";\n\n<Text>\n  <Link href=\"#\">\n    Mit Hilfe des Onboardings kannst du direkt loslegen.\n  </Link>\n</Text>;\n"},"slugs":["03-components","navigation","link"],"filename":"03-components/navigation/link/index.mdx","anchors":[]},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"Navigation","description":"Die Navigation dient als zentrales Element zur Orientierung innerhalb einer Anwendung oder Website. Sie besteht aus mehreren Menüeinträgen, die zu unterschiedlichen Unterseiten führen."},"scope":{}},"examples":{"collapsable":"import {\n  Label,\n  Link,\n  Navigation,\n  NavigationGroup,\n} from \"@mittwald/flow-react-components\";\n\n<Navigation aria-label=\"Main navigation\">\n  <NavigationGroup collapsable>\n    <Label>Allgemein</Label>\n    <Link href=\"#\">Dashboard</Link>\n    <Link href=\"#\" aria-current=\"page\">\n      Performance\n    </Link>\n  </NavigationGroup>\n  <NavigationGroup collapsable>\n    <Label>Komponenten</Label>\n    <Link href=\"#\">Apps</Link>\n    <Link href=\"#\">Datenbanken</Link>\n    <Link href=\"#\">Domains</Link>\n  </NavigationGroup>\n</Navigation>;\n","default":"import {\n  Link,\n  Navigation,\n} from \"@mittwald/flow-react-components\";\n\n<Navigation aria-label=\"Companies\">\n  <Link href=\"https://www.apple.com\">Apple</Link>\n  <Link href=\"https://www.mittwald.de\" aria-current=\"page\">\n    mittwald\n  </Link>\n  <Link href=\"https://www.adobe.com\">Adobe</Link>\n  <Link href=\"https://www.google.com\">Google</Link>\n</Navigation>;\n","groups":"import {\n  Label,\n  Link,\n  Navigation,\n  NavigationGroup,\n} from \"@mittwald/flow-react-components\";\n\n<Navigation aria-label=\"Main navigation\">\n  <NavigationGroup>\n    <Label>Allgemein</Label>\n    <Link href=\"#\">Dashboard</Link>\n    <Link href=\"#\" aria-current=\"page\">\n      Performance\n    </Link>\n  </NavigationGroup>\n  <NavigationGroup>\n    <Label>Komponenten</Label>\n    <Link href=\"#\">Apps</Link>\n    <Link href=\"#\">Datenbanken</Link>\n    <Link href=\"#\">Domains</Link>\n  </NavigationGroup>\n</Navigation>;\n","icons":"import {\n  IconCustomer,\n  IconProject,\n  IconServer,\n  Link,\n  Navigation,\n  Text,\n} from \"@mittwald/flow-react-components\";\n\n<Navigation aria-label=\"Main menu\">\n  <Link href=\"#\">\n    <IconCustomer />\n    <Text>Organisationen</Text>\n  </Link>\n  <Link href=\"#\" aria-current=\"page\">\n    <IconServer />\n    <Text>Server</Text>\n  </Link>\n  <Link href=\"#\">\n    <IconProject />\n    <Text>Projekte</Text>\n  </Link>\n</Navigation>;\n","separator":"import {\n  Label,\n  Link,\n  Navigation,\n  NavigationGroup,\n  Separator,\n} from \"@mittwald/flow-react-components\";\n\n<Navigation aria-label=\"Main navigation\">\n  <NavigationGroup>\n    <Label>Allgemein</Label>\n    <Link href=\"#\">Dashboard</Link>\n    <Link href=\"#\" aria-current=\"page\">\n      Performance\n    </Link>\n  </NavigationGroup>\n\n  <Separator />\n\n  <NavigationGroup>\n    <Label>Komponenten</Label>\n    <Link href=\"#\">Apps</Link>\n    <Link href=\"#\">Datenbanken</Link>\n    <Link href=\"#\">Domains</Link>\n  </NavigationGroup>\n</Navigation>;\n"},"slugs":["03-components","navigation","navigation"],"filename":"03-components/navigation/navigation/index.mdx","anchors":[]},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"Tabs","description":"Tabs strukturieren verwandte Inhalte und ermöglichen einen schnellen Zugriff auf unterschiedliche Ansichten."},"scope":{}},"examples":{"collapsed":"import {\n  Tab,\n  Tabs,\n  TabTitle,\n} from \"@mittwald/flow-react-components\";\n\n<Tabs style={{ width: \"250px\" }}>\n  <Tab>\n    <TabTitle>Allgemein</TabTitle>\n    Allgemeiner Inhalt\n  </Tab>\n  <Tab id=\"storage\">\n    <TabTitle>Speicherplatz</TabTitle>\n    Speicherplatz Inhalt\n  </Tab>\n  <Tab>\n    <TabTitle>Spamschutz</TabTitle>\n    Spamschutz Inhalt\n  </Tab>\n</Tabs>;\n","content":"$3e","default-selected":"import {\n  Tab,\n  Tabs,\n  TabTitle,\n} from \"@mittwald/flow-react-components\";\n\n<Tabs defaultSelectedKey=\"storage\">\n  <Tab>\n    <TabTitle>Allgemein</TabTitle>\n    Allgemeiner Inhalt\n  </Tab>\n  <Tab id=\"storage\">\n    <TabTitle>Speicherplatz</TabTitle>\n    Speicherplatz Inhalt\n  </Tab>\n  <Tab>\n    <TabTitle>Spamschutz</TabTitle>\n    Spamschutz Inhalt\n  </Tab>\n</Tabs>;\n","default":"import {\n  Tab,\n  Tabs,\n  TabTitle,\n} from \"@mittwald/flow-react-components\";\n\n<Tabs>\n  <Tab>\n    <TabTitle>Allgemein</TabTitle>\n    Allgemeiner Inhalt\n  </Tab>\n  <Tab id=\"storage\">\n    <TabTitle>Speicherplatz</TabTitle>\n    Speicherplatz Inhalt\n  </Tab>\n  <Tab>\n    <TabTitle>Spamschutz</TabTitle>\n    Spamschutz Inhalt\n  </Tab>\n</Tabs>;\n","status":"import {\n  Alert,\n  AlertIcon,\n  Heading,\n  Tab,\n  Tabs,\n  TabTitle,\n} from \"@mittwald/flow-react-components\";\n\n<Tabs>\n  <Tab>\n    <TabTitle>Allgemein</TabTitle>\n    Allgemeiner Inhalt\n  </Tab>\n  <Tab id=\"storage\">\n    <TabTitle>\n      Speicherplatz\n      <AlertIcon status=\"danger\" />\n    </TabTitle>\n    <Alert status=\"danger\">\n      <Heading>Dein Speicherplatz ist voll</Heading>\n    </Alert>\n  </Tab>\n  <Tab>\n    <TabTitle>Spamschutz</TabTitle>\n    Spamschutz Inhalt\n  </Tab>\n</Tabs>;\n"},"slugs":["03-components","navigation","tabs"],"filename":"03-components/navigation/tabs/index.mdx","anchors":[]},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"ContextualHelp","description":"Ein ContextualHelp bietet dem User weiterführende, hilfreiche Informationen in einem Popover an."},"scope":{}},"examples":{"align":"import {\n  Align,\n  Button,\n  ContextualHelp,\n  ContextualHelpTrigger,\n  Text,\n} from \"@mittwald/flow-react-components\";\n\n<Align>\n  <Text>mail.agenturserver.de</Text>\n\n  <ContextualHelpTrigger>\n    <Button />\n\n    <ContextualHelp>\n      <Text>\n        Hier wird die URL des Servers angezeigt, der für den\n        E-Mail-Versand genutzt wird.\n      </Text>\n    </ContextualHelp>\n  </ContextualHelpTrigger>\n</Align>;\n","default":"import {\n  Button,\n  ContextualHelp,\n  ContextualHelpTrigger,\n  Heading,\n  Link,\n  Text,\n} from \"@mittwald/flow-react-components\";\n\n<ContextualHelpTrigger>\n  <Button />\n\n  <ContextualHelp>\n    <Heading>Rechte & Rollen</Heading>\n    <Text>\n      Jedem Benutzer-Profil wird im mStudio je Projekt\n      und/oder Organisation eine Rolle zugewiesen. Das\n      ermöglicht dir ein ganz neues und modernes Arbeiten.\n    </Text>\n    <Link>Mehr erfahren</Link>\n  </ContextualHelp>\n</ContextualHelpTrigger>;\n"},"slugs":["03-components","overlays","contextual-help"],"filename":"03-components/overlays/contextual-help/index.mdx","anchors":[]},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    example: \"static\",\n    editorDisabled: true,\n    bgColor: \"dark\",\n    zoom: 0.7\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"LightBox","description":"Eine LightBox zeigt Bilder vergrößert und als Overlay mit abgedunkeltem Hintergrund an, um den Fokus auf den Inhalt zu legen."},"scope":{}},"examples":{"actions":"import {\n  ActionGroup,\n  Button,\n  IconDelete,\n  IconDownload,\n  Image,\n  LightBox,\n  LightBoxTrigger,\n} from \"@mittwald/flow-react-components\";\n\n<LightBoxTrigger>\n  <Button>Open LightBox</Button>\n  <LightBox>\n    <Image src=\"https://mittwald.github.io/flow/assets/mittwald_logo_rgb.jpg\" />\n    <ActionGroup>\n      <Button>\n        <IconDownload />\n      </Button>\n      <Button>\n        <IconDelete />\n      </Button>\n    </ActionGroup>\n  </LightBox>\n</LightBoxTrigger>;\n","default":"import {\n  Button,\n  Image,\n  LightBox,\n  LightBoxTrigger,\n} from \"@mittwald/flow-react-components\";\n\n<LightBoxTrigger>\n  <Button>Open LightBox</Button>\n  <LightBox>\n    <Image src=\"https://mittwald.github.io/flow/assets/mittwald_logo_rgb.jpg\" />\n  </LightBox>\n</LightBoxTrigger>;\n","fitScreenFalse":"import {\n  Button,\n  Image,\n  LightBox,\n  LightBoxTrigger,\n} from \"@mittwald/flow-react-components\";\n\n<LightBoxTrigger>\n  <Button>Open LightBox</Button>\n  <LightBox fitScreen={false}>\n    <Image src=\"https://mittwald.github.io/flow/assets/mittwald_logo_rgb.jpg\" />\n  </LightBox>\n</LightBoxTrigger>;\n","imageTrigger":"import {\n  Button,\n  Image,\n  LightBox,\n  LightBoxTrigger,\n} from \"@mittwald/flow-react-components\";\n\n<LightBoxTrigger>\n  <Button>\n    <Image\n      width={100}\n      withBorder\n      alt=\"mittwald\"\n      src=\"https://mittwald.github.io/flow/assets/mittwald_logo_rgb.jpg\"\n    />\n  </Button>\n  <LightBox>\n    <Image\n      alt=\"mittwald\"\n      src=\"https://mittwald.github.io/flow/assets/mittwald_logo_rgb.jpg\"\n    />\n  </LightBox>\n</LightBoxTrigger>;\n","static":"import {\n  Button,\n  IconClose,\n  Image,\n} from \"@mittwald/flow-react-components\";\n\n<div\n  className=\"flow--light-box flow--light-box--fit-screen\"\n  style={{ backgroundColor: \"transparent\" }}\n>\n  <section role=\"dialog\">\n    <div className=\"flow--light-box--content\">\n      <Image\n        width={200}\n        src=\"https://mittwald.github.io/flow/assets/mittwald_logo_rgb.jpg\"\n      />\n    </div>\n    <div className=\"flow--light-box--actions\">\n      <Button color=\"light\" variant=\"soft\">\n        <IconClose />\n      </Button>\n    </div>\n  </section>\n</div>;\n"},"slugs":["03-components","overlays","light-box"],"filename":"03-components/overlays/light-box/index.mdx","anchors":[]},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    example: \"static\",\n    editorDisabled: true,\n    bgColor: \"light\",\n    zoom: 0.7\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"Modal","description":"Ein Modal zeigt Inhalte zentriert als Overlay über der Hauptseite an, wodurch der Nutzer sich voll auf den Inhalt des Modals konzentrieren kann."},"scope":{}},"examples":{"controller":"$3f","default":"$40","email":"import {\n  Action,\n  ActionGroup,\n  Button,\n  Heading,\n  Label,\n  Text,\n  TextField,\n} from \"@mittwald/flow-react-components\";\n\n<StaticModal>\n  <div className=\"flow--modal--content\">\n    <Heading>E-Mail-Adresse anlegen</Heading>\n    <Text>\n      Erstelle dir eine E-Mail-Adresse mit Postfach\n      Speicherplatz.\n    </Text>\n    <TextField type=\"email\">\n      <Label>E-Mail-Adresse</Label>\n    </TextField>\n  </div>\n  <ActionGroup className=\"flow--modal--action-group\">\n    <Action closeOverlay=\"Modal\">\n      <Button color=\"accent\">E-Mail-Adresse anlegen</Button>\n      <Button variant=\"soft\" color=\"secondary\">\n        Abbrechen\n      </Button>\n    </Action>\n  </ActionGroup>\n</StaticModal>;\n","form":"$41","headingsDo":"import { Heading } from \"@mittwald/flow-react-components\";\n\n<Column>\n  <Heading level={4}>E-Mail-Adresse bearbeiten</Heading>\n  <Heading level={4}>Projekt wirklich löschen?</Heading>\n  <Heading level={4}>\n    Projekt wirklich löschen? - App auswählen\n  </Heading>\n</Column>;\n","headingsDont":"import { Heading } from \"@mittwald/flow-react-components\";\n\n<Column>\n  <Heading level={4}>\n    Bearbeite hier deine E-Mail-Adresse\n  </Heading>\n  <Heading level={4}>Projektlöschvorgang starten</Heading>\n  <Heading level={4}>Wähle hier eine App aus</Heading>\n</Column>;\n","noAction":"import {\n  Action,\n  ActionGroup,\n  Button,\n  Heading,\n  Section,\n  Switch,\n} from \"@mittwald/flow-react-components\";\n\n<StaticModal>\n  <header className=\"flow--modal--header\">\n    <Heading>Einstellungen</Heading>\n  </header>\n  <div className=\"flow--modal--content\">\n    <Section>\n      <Switch defaultSelected>\n        Container Frontend anzeigen\n      </Switch>\n      <Switch>Extensions anzeigen</Switch>\n    </Section>\n  </div>\n  <ActionGroup className=\"flow--modal--action-group\">\n    <Action closeOverlay=\"Modal\">\n      <Button variant=\"soft\" color=\"secondary\">\n        Schließen\n      </Button>\n    </Action>\n  </ActionGroup>\n</StaticModal>;\n","offCanvas":"$42","size":"$43","static":"import {\n  Action,\n  ActionGroup,\n  Button,\n  Heading,\n  Label,\n  Section,\n  Text,\n  TextField,\n} from \"@mittwald/flow-react-components\";\n\n<StaticModal>\n  <header className=\"flow--modal--header\">\n    <Heading>Organisation anlegen</Heading>\n  </header>\n\n  <div className=\"flow--modal--content\">\n    <Section>\n      <Text>\n        Eine Organisation kannst du dir wie ein Unternehmen\n        vorstellen. An diesem Ort verwaltest du deine\n        Mitarbeiter, Zahlungsmodalitäten und kannst deine\n        Rechnungen einsehen.\n      </Text>\n      <TextField>\n        <Label>Organisationsname</Label>\n      </TextField>\n    </Section>\n  </div>\n  <ActionGroup className=\"flow--modal--action-group\">\n    <Action closeOverlay=\"Modal\">\n      <Button color=\"accent\">Organisation anlegen</Button>\n      <Button variant=\"soft\" color=\"secondary\">\n        Abbrechen\n      </Button>\n    </Action>\n  </ActionGroup>\n</StaticModal>;\n"},"slugs":["03-components","overlays","modal"],"filename":"03-components/overlays/modal/index.mdx","anchors":[]},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"Tooltip","description":"Tooltips sind kurze Hilfselemente, die beim Hovern über ein Element zusätzliche Informationen anzeigen."},"scope":{}},"examples":{"default":"import {\n  Button,\n  IconEdit,\n  Tooltip,\n  TooltipTrigger,\n} from \"@mittwald/flow-react-components\";\n\n<TooltipTrigger>\n  <Button aria-label=\"Bearbeiten\" variant=\"plain\">\n    <IconEdit />\n  </Button>\n  <Tooltip>Bearbeiten</Tooltip>\n</TooltipTrigger>;\n"},"slugs":["03-components","overlays","tooltip"],"filename":"03-components/overlays/tooltip/index.mdx","anchors":[]},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"AlertBadge","description":"Ein AlertBadge hebt Statusmeldungen hervor, die besondere Aufmerksamkeit erfordern."},"scope":{}},"examples":{"default":"import { AlertBadge } from \"@mittwald/flow-react-components\";\n\n<AlertBadge>Archiviert</AlertBadge>;\n","status":"import { AlertBadge } from \"@mittwald/flow-react-components\";\n\n<Row>\n  <AlertBadge status=\"info\">Archiviert</AlertBadge>\n  <AlertBadge status=\"success\">\n    Update erfolgreich\n  </AlertBadge>\n  <AlertBadge status=\"warning\">\n    Speicher fast voll\n  </AlertBadge>\n  <AlertBadge status=\"danger\">Speicher voll</AlertBadge>\n</Row>;\n"},"slugs":["03-components","status","alert-badge"],"filename":"03-components/status/alert-badge/index.mdx","anchors":[]},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"Alert","description":"Ein Alert macht den User auf eine wichtige Information aufmerksam. Er ist visuell hervorgehoben und sollte nur bei relevanten, nicht ignorierbaren Inhalten verwendet werden."},"scope":{}},"examples":{"default":"import {\n  Alert,\n  Heading,\n} from \"@mittwald/flow-react-components\";\n\n<Alert>\n  <Heading>E-Mail-Adresse wurde archiviert</Heading>\n</Alert>;\n","status":"$44","with-content":"import {\n  Alert,\n  Button,\n  Content,\n  Heading,\n} from \"@mittwald/flow-react-components\";\n\n<Alert>\n  <Heading>E-Mail-Adresse wurde archiviert</Heading>\n  <Content>\n    Da deine Domain gelöscht wurde, wurde diese\n    E-Mail-Adresse archiviert. Um E-Mails empfangen und\n    senden zu können musst du die Adresse wieder umbenennen.\n    <Button>E-Mail-Adresse anpassen</Button>\n  </Content>\n</Alert>;\n"},"slugs":["03-components","status","alert"],"filename":"03-components/status/alert/index.mdx","anchors":[]},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"Badge","description":"Ein Badge stellt kompakt zusätzliche Informationen wie Metadaten, Status oder Kategorien dar. Es unterstützt die schnelle Orientierung, ohne vom Hauptinhalt abzulenken."},"scope":{}},"examples":{"colors":"import {\n  Badge,\n  Label,\n  Text,\n} from \"@mittwald/flow-react-components\";\n\n<Row>\n  <Badge color=\"neutral\">\n    <Label>Scope</Label>\n    <Text>Value</Text>\n  </Badge>\n  <Badge color=\"blue\">\n    <Label>Scope</Label>\n    <Text>Value</Text>\n  </Badge>\n  <Badge color=\"navy\">\n    <Label>Scope</Label>\n    <Text>Value</Text>\n  </Badge>\n  <Badge color=\"violet\">\n    <Label>Scope</Label>\n    <Text>Value</Text>\n  </Badge>\n  <Badge color=\"teal\">\n    <Label>Scope</Label>\n    <Text>Value</Text>\n  </Badge>\n  <Badge color=\"lilac\">\n    <Label>Scope</Label>\n    <Text>Value</Text>\n  </Badge>\n  <Badge color=\"green\">\n    <Label>Scope</Label>\n    <Text>Value</Text>\n  </Badge>\n  <Badge color=\"orange\">\n    <Label>Scope</Label>\n    <Text>Value</Text>\n  </Badge>\n  <Badge color=\"red\">\n    <Label>Scope</Label>\n    <Text>Value</Text>\n  </Badge>\n</Row>;\n","dark":"import {\n  Badge,\n  Label,\n  Text,\n} from \"@mittwald/flow-react-components\";\n\n<Badge color=\"dark\">\n  <Label>Scope</Label>\n  <Text>Value</Text>\n</Badge>;\n","default":"import { Badge } from \"@mittwald/flow-react-components\";\n\n<Badge>Value</Badge>;\n","disabled":"import {\n  Badge,\n  Label,\n  Text,\n} from \"@mittwald/flow-react-components\";\n\n<Badge color=\"neutral\" isDisabled>\n  <Label>Scope</Label>\n  <Text>Value</Text>\n</Badge>;\n","light":"import {\n  Badge,\n  Label,\n  Text,\n} from \"@mittwald/flow-react-components\";\n\n<Badge color=\"light\">\n  <Label>Scope</Label>\n  <Text>Value</Text>\n</Badge>;\n","onClose":"import { Badge } from \"@mittwald/flow-react-components\";\n\n<Badge\n  onClose={() => {\n    alert(\"closed!\");\n  }}\n>\n  Value\n</Badge>;\n","onPress":"import { Badge } from \"@mittwald/flow-react-components\";\n\n<Badge\n  onPress={() => {\n    alert(\"pressed!\");\n  }}\n>\n  Value\n</Badge>;\n","scope":"import {\n  Badge,\n  Label,\n  Text,\n} from \"@mittwald/flow-react-components\";\n\n<Badge color=\"neutral\">\n  <Label>Scope</Label>\n  <Text>Value</Text>\n</Badge>;\n"},"slugs":["03-components","status","badge"],"filename":"03-components/status/badge/index.mdx","anchors":[]},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"CounterBadge","description":"Ein CounterBadge dient dazu, dem User schnell und kompakt auf neue oder ungelesene Inhalte hinzuweisen."},"scope":{}},"examples":{"default":"import { CounterBadge } from \"@mittwald/flow-react-components\";\n\n<CounterBadge count={5} />;\n","high-number":"import { CounterBadge } from \"@mittwald/flow-react-components\";\n\n<CounterBadge count={120} />;\n","with-button":"import {\n  Button,\n  CounterBadge,\n  IconNotification,\n} from \"@mittwald/flow-react-components\";\n\n<Button aria-label=\"Benachrichtigungen: 7\">\n  <IconNotification />\n  <CounterBadge count={7} />\n</Button>;\n","without-content":"import { CounterBadge } from \"@mittwald/flow-react-components\";\n\n<CounterBadge />;\n"},"slugs":["03-components","status","counter-badge"],"filename":"03-components/status/counter-badge/index.mdx","anchors":[]},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"LoadingSpinner","description":"Der LoadingSpinner signalisiert dem User, dass Inhalte im Hintergrund geladen werden und in Kürze verfügbar sind."},"scope":{}},"examples":{"dark":"import { LoadingSpinner } from \"@mittwald/flow-react-components\";\n\n<LoadingSpinner color=\"dark\" />;\n","default":"import { LoadingSpinner } from \"@mittwald/flow-react-components\";\n\n<LoadingSpinner />;\n","light":"import { LoadingSpinner } from \"@mittwald/flow-react-components\";\n\n<LoadingSpinner color=\"light\" />;\n"},"slugs":["03-components","status","loading-spinner"],"filename":"03-components/status/loading-spinner/index.mdx","anchors":[]},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"NotificationProvider","description":"Der NotificationProvider dient zur Anzeige und Steuerung von Notifications."},"scope":{}},"examples":{"auto-close":"import {\n  Button,\n  Heading,\n  Notification,\n  Text,\n  useNotificationController,\n} from \"@mittwald/flow-react-components\";\n\nexport default () => {\n  const controller = useNotificationController();\n\n  return (\n    <Button\n      onPress={() =>\n        controller.add(\n          <Notification\n            onClick={() => alert(\"Notification clicked\")}\n            status=\"warning\"\n            autoClose\n          >\n            <Heading>No SSL certificate</Heading>\n            <Text>\n              No SSL certificate could be issued for\n              examples.de.\n            </Text>\n          </Notification>,\n        )\n      }\n    >\n      Trigger Notification\n    </Button>\n  );\n};\n","closeById":"$45","default":"import {\n  Button,\n  Heading,\n  Notification,\n  Text,\n  useNotificationController,\n} from \"@mittwald/flow-react-components\";\n\nexport default () => {\n  const controller = useNotificationController();\n\n  return (\n    <Button\n      onPress={() =>\n        controller.add(\n          <Notification\n            onClick={() => alert(\"Notification clicked\")}\n            status=\"warning\"\n          >\n            <Heading>No SSL certificate</Heading>\n            <Text>\n              No SSL certificate could be issued for\n              examples.de.\n            </Text>\n          </Notification>,\n        )\n      }\n    >\n      Trigger Notification\n    </Button>\n  );\n};\n","provider":"import { NotificationProvider } from \"@mittwald/flow-react-components\";\n\n<NotificationProvider>Meine App</NotificationProvider>;\n"},"slugs":["03-components","status","notification-provider"],"filename":"03-components/status/notification-provider/index.mdx","anchors":[]},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"Notification","description":"Die Notification informiert die User über wichtige System- oder Statusmeldungen. Sie sollte sparsam eingesetzt werden, um die Aufmerksamkeit des Users zu erhalten."},"scope":{}},"examples":{"default":"import {\n  Heading,\n  Notification,\n  Text,\n} from \"@mittwald/flow-react-components\";\n\n<Notification>\n  <Heading>E-Mail-Adresse archiviert</Heading>\n  <Text>\n    Die E-Mail-Adresse <b>example@mittwald.de</b> wurde\n    archiviert.\n  </Text>\n</Notification>;\n","status":"import {\n  Heading,\n  Notification,\n  Text,\n} from \"@mittwald/flow-react-components\";\n\n<Row>\n  <Notification status=\"info\">\n    <Heading>E-Mail-Adresse archiviert</Heading>\n    <Text>\n      Die E-Mail-Adresse <b>example@mittwald.de</b> wurde\n      archiviert.\n    </Text>\n  </Notification>\n\n  <Notification status=\"warning\">\n    <Heading>Speicher fast voll</Heading>\n    <Text>\n      Der Speicherplatz im Projekt <b>My Project</b> ist zu\n      80% voll.\n    </Text>\n  </Notification>\n\n  <Notification status=\"danger\">\n    <Heading>Kein SSL-Zertifikat</Heading>\n    <Text>\n      Für <b>example.de</b> konnte kein SSL-Zertifikat\n      ausgestellt werden.\n    </Text>\n  </Notification>\n\n  <Notification status=\"success\">\n    <Heading>App installiert</Heading>\n    <Text>\n      Deine App <b>My WordPress</b> wurde erfolgreich\n      installiert.\n    </Text>\n  </Notification>\n</Row>;\n"},"slugs":["03-components","status","notification"],"filename":"03-components/status/notification/index.mdx","anchors":[]},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"ProgressBar","description":"Eine ProgressBar zeigt den Fortschritt eines laufenden Prozesses visuell in Form eines horizontalen Balkens an. Sie eignet sich sowohl für temporäre Prozesse als auch für Zustände mit konstantem Monitoring."},"scope":{}},"examples":{"decimal":"import {\n  Label,\n  ProgressBar,\n} from \"@mittwald/flow-react-components\";\n\n<ProgressBar\n  value={500}\n  maxValue={1000}\n  minValue={0}\n  formatOptions={{ style: \"decimal\" }}\n>\n  <Label>Stückzahl</Label>\n</ProgressBar>;\n","default":"import {\n  Label,\n  ProgressBar,\n} from \"@mittwald/flow-react-components\";\n\n<ProgressBar value={50}>\n  <Label>Speicher</Label>\n</ProgressBar>;\n","maxValue":"import {\n  Label,\n  ProgressBar,\n} from \"@mittwald/flow-react-components\";\n\n<ProgressBar\n  showMaxValue\n  value={500}\n  maxValue={1000}\n  minValue={0}\n  formatOptions={{ style: \"unit\", unit: \"gigabyte\" }}\n>\n  <Label>Speicher</Label>\n</ProgressBar>;\n","segments":"import {\n  Label,\n  ProgressBar,\n} from \"@mittwald/flow-react-components\";\n\n<ProgressBar\n  maxValue={1000}\n  size=\"l\"\n  showMaxValue\n  formatOptions={{ style: \"unit\", unit: \"gigabyte\" }}\n  segments={[\n    { value: 280, title: \"E-Mails\" },\n    {\n      value: 170,\n      title: \"Datenbanken\",\n    },\n    {\n      value: 110,\n      title: \"Backups\",\n    },\n  ]}\n>\n  <Label>Speicher</Label>\n</ProgressBar>;\n","size":"import {\n  Label,\n  ProgressBar,\n} from \"@mittwald/flow-react-components\";\nimport { Column } from \"@/lib/liveCode/components/LiveCodeEditor/components\";\n\n<Column>\n  <ProgressBar size=\"s\" value={50}>\n    <Label>Größe S</Label>\n  </ProgressBar>\n  <ProgressBar size=\"m\" value={50}>\n    <Label>Größe M</Label>\n  </ProgressBar>\n  <ProgressBar size=\"l\" value={50}>\n    <Label>Größe L</Label>\n  </ProgressBar>\n</Column>;\n","status":"import { ProgressBar } from \"@mittwald/flow-react-components\";\n\n<Row>\n  <ProgressBar value={100} status=\"success\">\n    Success\n  </ProgressBar>\n  <ProgressBar value={50} status=\"info\">\n    Info\n  </ProgressBar>\n  <ProgressBar value={70} status=\"warning\">\n    Warning\n  </ProgressBar>\n  <ProgressBar value={90} status=\"danger\">\n    Danger\n  </ProgressBar>\n</Row>;\n","unit":"import {\n  Label,\n  ProgressBar,\n} from \"@mittwald/flow-react-components\";\n\n<ProgressBar\n  value={500}\n  maxValue={1000}\n  minValue={0}\n  formatOptions={{ style: \"unit\", unit: \"gigabyte\" }}\n>\n  <Label>Speicher</Label>\n</ProgressBar>;\n"},"slugs":["03-components","status","progress-bar"],"filename":"03-components/status/progress-bar/index.mdx","anchors":[]},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"AccentBox","description":"Die AccentBox dient dazu, besondere Inhalte dekorativ hervorzuheben."},"scope":{}},"examples":{"color":"$46","default":"import {\n  AccentBox,\n  Heading,\n  Link,\n  Section,\n  Text,\n} from \"@mittwald/flow-react-components\";\n\n<AccentBox>\n  <Section>\n    <Heading>Tipps & Tricks für mehr Klimaschutz</Heading>\n    <Text>\n      Dein Cronjob läuft in weniger als\n      5-Minuten-Intervallen. Das verbraucht mehr Ressourcen.\n      Falls das nicht unbedingt nötig ist, kannst du ein\n      längeres Intervall wählen - das spart Energie und\n      schützt das Klima\n    </Text>\n    <Link href=\"#\" target=\"_blank\">\n      Blogartikel zu mehr Nachhaltigkeit\n    </Link>\n  </Section>\n</AccentBox>;\n","gradient":"import {\n  AccentBox,\n  Color,\n  Flex,\n  Heading,\n  Link,\n  Text,\n} from \"@mittwald/flow-react-components\";\n\n<AccentBox color=\"gradient\">\n  <Flex align=\"center\" wrap=\"wrap\" gap=\"m\">\n    <Flex direction=\"column\" grow>\n      <Heading size=\"l\">\n        <Color color=\"violet\">mStudio Extension</Color>{\" \"}\n        selber entwickeln\n      </Heading>\n      <Text>\n        <b>\n          <Color>\n            Veröffentliche{\" \"}\n            <Color color=\"violet\">eigene Features</Color> im\n            mStudio\n          </Color>\n        </b>\n      </Text>\n    </Flex>\n    <Link target=\"_blank\" href=\"#\" color=\"dark\">\n      Contributor Landingpage\n    </Link>\n  </Flex>\n</AccentBox>;\n","icon":"import {\n  AccentBox,\n  Heading,\n  Icon,\n  Link,\n  Section,\n  Text,\n} from \"@mittwald/flow-react-components\";\nimport { IconLeaf } from \"@tabler/icons-react\";\n\n<AccentBox>\n  <Icon>\n    <IconLeaf />\n  </Icon>\n  <Section>\n    <Heading>Tipps & Tricks für mehr Klimaschutz</Heading>\n    <Text>\n      Dein Cronjob läuft in weniger als\n      5-Minuten-Intervallen. Das verbraucht mehr Ressourcen.\n      Falls das nicht unbedingt nötig ist, kannst du ein\n      längeres Intervall wählen - das spart Energie und\n      schützt das Klima\n    </Text>\n    <Link href=\"#\" target=\"_blank\">\n      Blogartikel zu mehr Nachhaltigkeit\n    </Link>\n  </Section>\n</AccentBox>;\n","layoutCard":"import {\n  AccentBox,\n  Color,\n  Flex,\n  Heading,\n  LayoutCard,\n  Link,\n  Text,\n} from \"@mittwald/flow-react-components\";\n\n<LayoutCard>\n  <AccentBox color=\"gradient\">\n    <Flex align=\"center\" wrap=\"wrap\" gap=\"m\">\n      <Flex direction=\"column\" grow>\n        <Heading size=\"l\">\n          <Color color=\"violet\">mStudio Extension</Color>{\" \"}\n          selber entwickeln\n        </Heading>\n        <Text>\n          <b>\n            <Color>\n              Veröffentliche{\" \"}\n              <Color color=\"violet\">eigene Features</Color>{\" \"}\n              im mStudio\n            </Color>\n          </b>\n        </Text>\n      </Flex>\n      <Link target=\"_blank\" href=\"#\" color=\"dark\">\n        Contributor Landingpage\n      </Link>\n    </Flex>\n  </AccentBox>\n</LayoutCard>;\n"},"slugs":["03-components","structure","accent-box"],"filename":"03-components/structure/accent-box/index.mdx","anchors":[]},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"Accordion","description":"Das Accordion dient dazu Content-Bereiche ein- und auszublenden und so Informationen strukturiert und platzsparend darzustellen."},"scope":{}},"examples":{"default-expanded":"import {\n  Accordion,\n  Content,\n  Heading,\n} from \"@mittwald/flow-react-components\";\n\n<Accordion defaultExpanded>\n  <Heading>Accordion Titel</Heading>\n  <Content>Inhalt des Accordions</Content>\n</Accordion>;\n","default":"import {\n  Accordion,\n  Content,\n  Heading,\n} from \"@mittwald/flow-react-components\";\n\n<Accordion>\n  <Heading>Accordion Titel</Heading>\n  <Content>Inhalt des Accordions</Content>\n</Accordion>;\n","label":"import {\n  Accordion,\n  Content,\n  Label,\n} from \"@mittwald/flow-react-components\";\n\n<Accordion>\n  <Label>Accordion Titel</Label>\n  <Content>Inhalt des Accordions</Content>\n</Accordion>;\n","outline":"import {\n  Accordion,\n  Content,\n  Heading,\n} from \"@mittwald/flow-react-components\";\n\n<Accordion variant=\"outline\">\n  <Heading>Accordion Titel</Heading>\n  <Content>Inhalt des Accordions</Content>\n</Accordion>;\n"},"slugs":["03-components","structure","accordion"],"filename":"03-components/structure/accordion/index.mdx","anchors":[]},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"Align","description":"Align dient dazu, ausgewählte Components gezielt miteinander zu kombinieren - inklusive Anordnung und visueller Anpassungen (z. B. Farbänderungen)."},"scope":{}},"examples":{"default":"import {\n  Align,\n  Avatar,\n  Initials,\n  Text,\n} from \"@mittwald/flow-react-components\";\n\n<Align>\n  <Avatar>\n    <Initials>Max Mustermann</Initials>\n  </Avatar>\n  <Text>\n    <b>Max Mustermann</b>\n    Organisationsinhaber\n  </Text>\n</Align>;\n","icon-text":"import {\n  Align,\n  IconDomain,\n  Text,\n} from \"@mittwald/flow-react-components\";\n\n<Align>\n  <IconDomain />\n  <Text>mail.agenturserver.de</Text>\n</Align>;\n","input-button":"import {\n  Align,\n  Button,\n  Label,\n  TextField,\n} from \"@mittwald/flow-react-components\";\n\n<Align>\n  <TextField>\n    <Label>Weiterleitungsziel</Label>\n  </TextField>\n  <Button>Hinzufügen</Button>\n</Align>;\n","text-contextual-help":"import {\n  Align,\n  Button,\n  ContextualHelp,\n  ContextualHelpTrigger,\n  Text,\n} from \"@mittwald/flow-react-components\";\n\n<Align>\n  <Text>mail.agenturserver.de</Text>\n\n  <ContextualHelpTrigger>\n    <Button />\n\n    <ContextualHelp>\n      <Text>\n        Hier wird die URL des Servers angezeigt, der für den\n        E-Mail-Versand genutzt wird.\n      </Text>\n    </ContextualHelp>\n  </ContextualHelpTrigger>\n</Align>;\n","text-copy-button":"import {\n  Align,\n  CopyButton,\n  Text,\n} from \"@mittwald/flow-react-components\";\n\n<Align>\n  <Text>mail.agenturserver.de</Text>\n  <CopyButton text=\"mail.agenturserver.de\" />\n</Align>;\n"},"slugs":["03-components","structure","align"],"filename":"03-components/structure/align/index.mdx","anchors":[]},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true,\n    example: \"main\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"ColumnLayout","description":"Das ColumnLayout organisiert Inhalte in Spalten. Sowohl die Anzahl der Spalten als auch deren Größe lassen sich flexibel für verschiedene Breakpoints definieren"},"scope":{}},"examples":{"custom-values":"import {\n  ColumnLayout,\n  Label,\n  TextField,\n} from \"@mittwald/flow-react-components\";\n\n<ColumnLayout m={[2, 1]}>\n  <TextField isRequired>\n    <Label>Straße</Label>\n  </TextField>\n  <TextField isRequired>\n    <Label>Hausnummer</Label>\n  </TextField>\n</ColumnLayout>;\n","default":"import {\n  ColumnLayout,\n  Label,\n  TextField,\n} from \"@mittwald/flow-react-components\";\n\n<ColumnLayout rowGap=\"s\" columnGap=\"l\">\n  <TextField isRequired>\n    <Label>Vorname</Label>\n  </TextField>\n  <TextField isRequired>\n    <Label>Nachname</Label>\n  </TextField>\n  <TextField isRequired>\n    <Label>Straße</Label>\n  </TextField>\n  <TextField isRequired>\n    <Label>Hausnummer</Label>\n  </TextField>\n</ColumnLayout>;\n","gaps":"import {\n  ColumnLayout,\n  Label,\n  TextField,\n} from \"@mittwald/flow-react-components\";\n\n<ColumnLayout m={[1, 1]} rowGap=\"s\" columnGap=\"l\">\n  <TextField isRequired>\n    <Label>Vorname</Label>\n  </TextField>\n  <TextField isRequired>\n    <Label>Nachname</Label>\n  </TextField>\n  <ColumnLayout s={[2, 1]} columnGap=\"m\">\n    <TextField isRequired>\n      <Label>Straße</Label>\n    </TextField>\n    <TextField isRequired>\n      <Label>Hausnummer</Label>\n    </TextField>\n  </ColumnLayout>\n  <TextField isRequired>\n    <Label>Ort</Label>\n  </TextField>\n</ColumnLayout>;\n","hidden-columns":"import {\n  ColumnLayout,\n  Text,\n  Image,\n  Section,\n  Heading,\n} from \"@mittwald/flow-react-components\";\n\n<ColumnLayout s={[1, null]} m={[2, 1]} l={[5, 1]}>\n  <Section>\n    <Heading>Lorem ipsum dolor sit amet</Heading>\n    <Text>\n      Lorem ipsum dolor sit amet consectetur adipisicing\n      elit. Cumque eius quam quas vel voluptas, ullam\n      aliquid fugit. Voluptate harum accusantium rerum ullam\n      modi blanditiis vitae, laborum ea tempore, dolore\n      voluptas. Earum pariatur, similique corrupti id\n      officia perferendis. Labore, similique. Earum, quas\n      in. At dolorem corrupti blanditiis nulla deserunt\n      laborum! Corrupti delectus aspernatur nihil nulla\n      obcaecati ipsam porro sequi rem? Quam.\n    </Text>\n  </Section>\n  <Image\n    src=\"https://mittwald.github.io/flow/assets/mittwald_logo_rgb.jpg\"\n    alt=\"mittwald\"\n  />\n</ColumnLayout>;\n","main":"import {\n  ColumnLayout,\n  Label,\n  TextField,\n} from \"@mittwald/flow-react-components\";\n\n<ColumnLayout s={[1, 1]}>\n  <TextField isRequired>\n    <Label>Vorname</Label>\n  </TextField>\n  <TextField isRequired>\n    <Label>Nachname</Label>\n  </TextField>\n</ColumnLayout>;\n"},"slugs":["03-components","structure","column-layout"],"filename":"03-components/structure/column-layout/index.mdx","anchors":[]},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true,\n    bgColor: \"dark\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"Flex","description":"Flex ordnet Components innerhalb eines Flex-Containers an. Sie ermöglicht eine flexible, CSS-Flexbox-basierte Ausrichtung und Verteilung von Inhalten."},"scope":{}},"examples":{"default":"import {\n  LayoutCard,\n  Flex,\n} from \"@mittwald/flow-react-components\";\n\n<Flex gap=\"m\" justify=\"center\">\n  <LayoutCard />\n  <LayoutCard />\n  <LayoutCard />\n</Flex>;\n","layoutCard":"import {\n  Button,\n  Flex,\n  LayoutCard,\n  Text,\n} from \"@mittwald/flow-react-components\";\n\n<LayoutCard style={{ minHeight: 300 }}>\n  <Text>\n    Labore, similique. Earum, quas in. At dolorem corrupti\n    blanditiis nulla deserunt laborum! Corrupti delectus\n    aspernatur nihil nulla obcaecati ipsam porro sequi rem?\n    Quam.\n  </Text>\n  <Flex align=\"end\" grow>\n    <Button color=\"accent\">Install</Button>\n  </Flex>\n</LayoutCard>;\n","listItem":"import {\n  Avatar,\n  Content,\n  Flex,\n  Heading,\n  IconExtension,\n  Text,\n  typedList,\n} from \"@mittwald/flow-react-components\";\n\nexport default () => {\n  const List = typedList<{ text: string }>();\n\n  return (\n    <List.List\n      defaultViewMode=\"tiles\"\n      aria-label=\"Extensions\"\n    >\n      <List.StaticData\n        data={[\n          { text: \"Meine Extension\" },\n          {\n            text: \"Meine andere Extension mit einen deutlich längeren Namen\",\n          },\n        ]}\n      />\n      <List.Item\n        showTiles\n        showList={false}\n        textValue={(i) => i.text}\n      >\n        {(i) => (\n          <List.ItemView>\n            <Avatar>\n              <IconExtension />\n            </Avatar>\n            <Heading>{i.text}</Heading>\n\n            <Content>\n              <Flex justify=\"end\" align=\"end\" grow>\n                <Text>Kostenlos</Text>\n              </Flex>\n            </Content>\n          </List.ItemView>\n        )}\n      </List.Item>\n    </List.List>\n  );\n};\n"},"slugs":["03-components","structure","flex"],"filename":"03-components/structure/flex/index.mdx","anchors":[]},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true,\n    bgColor: \"dark\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"LayoutCard","description":"Eine LayoutCard ist ein einfacher Container, der mit beliebigem Inhalt gefüllt werden kann."},"scope":{}},"examples":{"default":"import { LayoutCard } from \"@mittwald/flow-react-components\";\n\n<LayoutCard>Inhalt der Layout Card</LayoutCard>;\n"},"slugs":["03-components","structure","layout-card"],"filename":"03-components/structure/layout-card/index.mdx","anchors":[]},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true,\n    example: \"mode-list\",\n    zoom: 0.6\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"List","description":"Die List bildet einen strukturierten Rahmen für mehrere ListItems und bietet Funktionen wie Sortierung, Filter und Suche."},"scope":{}},"examples":{"actionGroup":"import {\n  ActionGroup,\n  Avatar,\n  Button,\n  Heading,\n  IconDomain,\n  Text,\n  typedList,\n} from \"@mittwald/flow-react-components\";\nimport {\n  type Domain,\n  domains,\n} from \"@/content/03-components/structure/list/examples/domainApi\";\n\nexport default () => {\n  const DomainList = typedList<Domain>();\n\n  return (\n    <DomainList.List\n      batchSize={2}\n      hidePagination\n      aria-label=\"Domains\"\n    >\n      <DomainList.StaticData data={domains} />\n      <ActionGroup>\n        <Button color=\"accent\">Anlegen</Button>\n      </ActionGroup>\n      <DomainList.Item\n        textValue={(domain) => domain.domain}\n      >\n        {(domain) => (\n          <DomainList.ItemView>\n            <Avatar>\n              <IconDomain />\n            </Avatar>\n            <Heading>{domain.hostname}</Heading>\n            <Text>{domain.type}</Text>\n          </DomainList.ItemView>\n        )}\n      </DomainList.Item>\n    </DomainList.List>\n  );\n};\n","default":"$47","filterCategory":"$48","filterGeneralCategory":"$49","item-accordion":"import {\n  Avatar,\n  Content,\n  Heading,\n  IconDomain,\n  ListItemView,\n  Text,\n  typedList,\n} from \"@mittwald/flow-react-components\";\nimport {\n  type Domain,\n  domains,\n} from \"@/content/03-components/structure/list/examples/domainApi\";\n\nexport default () => {\n  const List = typedList<Domain>();\n\n  return (\n    <List.List\n      batchSize={2}\n      hidePagination\n      accordion\n      aria-label=\"Domains\"\n    >\n      <List.StaticData data={domains} />\n      <List.Item textValue={(domain) => domain.domain}>\n        {(domain) => (\n          <ListItemView>\n            <Avatar>\n              <IconDomain />\n            </Avatar>\n            <Heading>{domain.hostname}</Heading>\n            <Text>{domain.type}</Text>\n            <Content slot=\"bottom\">Mehr Inhalt</Content>\n          </ListItemView>\n        )}\n      </List.Item>\n    </List.List>\n  );\n};\n","item-action-group":"$4a","item-checkbox":"$4b","item-column-layout-hidden":"$4c","item-column-layout":"$4d","item-content":"import {\n  Avatar,\n  Content,\n  ContextMenu,\n  Heading,\n  IconDomain,\n  MenuItem,\n  typedList,\n} from \"@mittwald/flow-react-components\";\nimport {\n  type Domain,\n  domains,\n} from \"@/content/03-components/structure/list/examples/domainApi\";\n\nexport default () => {\n  const List = typedList<Domain>();\n\n  return (\n    <List.List\n      batchSize={2}\n      hidePagination\n      aria-label=\"Domains\"\n    >\n      <List.StaticData data={domains} />\n      <List.Item\n        showTiles\n        textValue={(domain) => domain.domain}\n      >\n        {(domain) => (\n          <List.ItemView>\n            <Avatar>\n              <IconDomain />\n            </Avatar>\n            <Heading>{domain.hostname}</Heading>\n\n            <Content slot=\"top\">Top Content</Content>\n            <Content slot=\"bottom\">Bottom Content</Content>\n\n            <ContextMenu>\n              <MenuItem>Details anzeigen</MenuItem>\n            </ContextMenu>\n          </List.ItemView>\n        )}\n      </List.Item>\n    </List.List>\n  );\n};\n","item-link":"import {\n  Avatar,\n  ContextMenu,\n  Heading,\n  IconDomain,\n  MenuItem,\n  typedList,\n} from \"@mittwald/flow-react-components\";\nimport {\n  type Domain,\n  domains,\n} from \"@/content/03-components/structure/list/examples/domainApi\";\n\nexport default () => {\n  const List = typedList<Domain>();\n\n  return (\n    <List.List\n      batchSize={2}\n      hidePagination\n      aria-label=\"Domains\"\n    >\n      <List.StaticData data={domains} />\n      <List.Item\n        href={() => \"#\"}\n        textValue={(domain) => domain.domain}\n      >\n        {(domain) => (\n          <List.ItemView>\n            <Avatar>\n              <IconDomain />\n            </Avatar>\n            <Heading>{domain.hostname}</Heading>\n\n            <ContextMenu>\n              <MenuItem>Details anzeigen</MenuItem>\n            </ContextMenu>\n          </List.ItemView>\n        )}\n      </List.Item>\n    </List.List>\n  );\n};\n","mobile":"$4e","mode-list":"$4f","mode-table":"$50","mode-tile":"$51","namingDo":"$52","namingDont":"$53","sortingDo":"$54","sortingDont":"$55","summary":"$56"},"slugs":["03-components","structure","list"],"filename":"03-components/structure/list/index.mdx","anchors":[]},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"Section","description":"Eine Section erhöht die Übersichtlichkeit, indem sie den Content in vertikale Teilbereiche mit festen Abständen gliedert. Zwischen mehreren Sections wird automatisch ein Separator eingefügt, um die Bereiche optisch zu trennen."},"scope":{}},"examples":{"alert-badge-dont":"$57","alert-badge":"import {\n  AlertBadge,\n  Button,\n  ColumnLayout,\n  Content,\n  CopyButton,\n  Header,\n  Heading,\n  IconExternalLink,\n  Label,\n  LabeledValue,\n  Link,\n  Section,\n  Text,\n} from \"@mittwald/flow-react-components\";\n\n<Section>\n  <Header>\n    <Heading>\n      Mein Projekt\n      <AlertBadge status=\"danger\">Deaktiviert</AlertBadge>\n    </Heading>\n\n    <Button variant=\"soft\" color=\"secondary\">\n      Datenbank migrieren\n    </Button>\n    <Button color=\"accent\">Aktivieren</Button>\n  </Header>\n\n  <ColumnLayout>\n    <LabeledValue>\n      <Label>Projektname</Label>\n      <Content>Dolce Vita</Content>\n    </LabeledValue>\n    <LabeledValue>\n      <Label>Short-ID</Label>\n      <Content>p-lol3qe</Content>\n      <CopyButton text=\"p-lol3qe\" />\n    </LabeledValue>\n    <LabeledValue>\n      <Label>Projektdomain</Label>\n      <Link>\n        <Text>p-lol3qe.project.space</Text>\n        <IconExternalLink />\n      </Link>\n      <CopyButton text=\"p-lol3qe.project.space\" />\n    </LabeledValue>\n  </ColumnLayout>\n</Section>;\n","context-menu":"$58","default":"import {\n  Heading,\n  Section,\n  Text,\n} from \"@mittwald/flow-react-components\";\n\n<Section>\n  <Heading>Newsletter</Heading>\n  <Text>\n    Kommende Releases, neue Features und Tipps rund um dein\n    Hosting – wir bringen dir das Wichtigste in dein\n    Postfach. Abonniere unseren Newsletter und bleib auf dem\n    Laufenden.\n  </Text>\n</Section>;\n","hierarchy-do":"import {\n  Heading,\n  IconStar,\n  Link,\n  Section,\n  Text,\n} from \"@mittwald/flow-react-components\";\n\n<Section>\n  <Heading>\n    <IconStar />\n    Erste Schritte\n  </Heading>\n  <Text>\n    Im Onboarding erklären wir dir alles Wichtige – etwa die\n    Organisationsstrukturen deines Hostings, das Rechte- und\n    Rollensystem oder auch den Zugang über SSH.\n  </Text>\n  <Link href=\"#\">Starten</Link>\n</Section>;\n","link":"import {\n  Header,\n  Heading,\n  Link,\n  Section,\n  Text,\n} from \"@mittwald/flow-react-components\";\n\n<Section>\n  <Header>\n    <Heading>Newsletter</Heading>\n    <Link href=\"#\">Zur Anmeldung</Link>\n  </Header>\n  <Text>\n    Kommende Releases, neue Features und Tipps rund um dein\n    Hosting – wir bringen dir das Wichtigste in dein\n    Postfach. Abonniere unseren Newsletter und bleib auf dem\n    Laufenden.\n  </Text>\n</Section>;\n","long-heading":"import {\n  AlertBadge,\n  Button,\n  ColumnLayout,\n  Content,\n  CopyButton,\n  Header,\n  Heading,\n  IconExternalLink,\n  Label,\n  LabeledValue,\n  Link,\n  Section,\n  Text,\n} from \"@mittwald/flow-react-components\";\n\n<Section>\n  <Header>\n    <Heading>\n      Mein sehr langes Projekt\n      <AlertBadge status=\"danger\">Deaktiviert</AlertBadge>\n    </Heading>\n\n    <Button variant=\"soft\" color=\"secondary\">\n      Datenbank migrieren\n    </Button>\n    <Button color=\"accent\">Aktivieren</Button>\n  </Header>\n\n  <ColumnLayout>\n    <LabeledValue>\n      <Label>Projektname</Label>\n      <Content>Dolce Vita</Content>\n    </LabeledValue>\n    <LabeledValue>\n      <Label>Short-ID</Label>\n      <Content>p-lol3qe</Content>\n      <CopyButton text=\"p-lol3qe\" />\n    </LabeledValue>\n    <LabeledValue>\n      <Label>Projektdomain</Label>\n      <Link>\n        <Text>p-lol3qe.project.space</Text>\n        <IconExternalLink />\n      </Link>\n      <CopyButton text=\"p-lol3qe.project.space\" />\n    </LabeledValue>\n  </ColumnLayout>\n</Section>;\n","multiple":"import {\n  Button,\n  Header,\n  Heading,\n  Section,\n  Text,\n} from \"@mittwald/flow-react-components\";\n\n<>\n  <Section>\n    <Header>\n      <Heading>Datenbanken</Heading>\n      <Button>Datenbank verknüpfen</Button>\n    </Header>\n    <Text>\n      Eine Datenbank, die mit einer App verknüpft ist, kann\n      nicht gelöscht werden. Die App nutzt immer die\n      verknüpfte Datenbank.\n    </Text>\n  </Section>\n  <Section>\n    <Heading>Cronjobs</Heading>\n    <Text>\n      Ein Cronjob ist immer fest einer App zugeordnet, du\n      kannst ihn unter dem Menüpunkt Cronjobs bearbeiten und\n      löschen.\n    </Text>\n  </Section>\n</>;\n","sub-heading":"import {\n  Heading,\n  InlineCode,\n  Label,\n  LabeledValue,\n  Section,\n  Text,\n} from \"@mittwald/flow-react-components\";\n\n<Section>\n  <Heading>DNS Verwaltung</Heading>\n  <Text>\n    Da du externe Nameserver nutzt, empfehlen wir dir\n    folgende Records bei deinem Provider einzutragen.\n  </Text>\n  <Heading level={3}>A-Record</Heading>\n  <LabeledValue>\n    <Label>IPv4-Adresse</Label>\n    <InlineCode>12.123.123.12</InlineCode>\n  </LabeledValue>\n</Section>;\n","switch":"import {\n  Header,\n  Heading,\n  Section,\n  Switch,\n  Text,\n} from \"@mittwald/flow-react-components\";\n\n<Section>\n  <Header>\n    <Heading>Autoresponder</Heading>\n    <Switch>Aktivieren</Switch>\n  </Header>\n  <Text>\n    Lasse den Autoresponder für dich arbeiten. Er kann\n    automatisch auf eingehende E-Mails antworten.\n  </Text>\n</Section>;\n"},"slugs":["03-components","structure","section"],"filename":"03-components/structure/section/index.mdx","anchors":[]},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"Separator","description":"Ein Separator ist eine horizontale Linie, die inhaltliche Abschnitte voneinander abgrenzt."},"scope":{}},"examples":{"default":"import { Separator } from \"@mittwald/flow-react-components\";\n\n<Separator />;\n"},"slugs":["03-components","structure","separator"],"filename":"03-components/structure/separator/index.mdx","anchors":[]},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true,\n    zoom: 0.6\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"Table","description":"Die Table zeigt Daten in Zeilen und Spalten. Sie hilft dabei, Informationen schnell zu überblicken und Einträge zu vergleichen."},"scope":{}},"examples":{"default":"$59","horizontally-centered":"import {\n  IconCheck,\n  IconClose,\n  Table,\n  TableBody,\n  TableCell,\n  TableColumn,\n  TableHeader,\n  TableRow,\n} from \"@mittwald/flow-react-components\";\n\n<Table aria-label=\"Scopes\">\n  <TableHeader>\n    <TableColumn>Bereich</TableColumn>\n    <TableColumn horizontalAlign=\"center\">\n      Lesen\n    </TableColumn>\n    <TableColumn horizontalAlign=\"center\">\n      Schreiben\n    </TableColumn>\n  </TableHeader>\n  <TableBody>\n    <TableRow>\n      <TableCell>Projekt</TableCell>\n      <TableCell horizontalAlign=\"center\">\n        <IconCheck status=\"success\" aria-label=\"Zugriff\" />\n      </TableCell>\n      <TableCell horizontalAlign=\"center\">\n        <IconClose\n          status=\"danger\"\n          aria-label=\"Kein Zugriff\"\n        />\n      </TableCell>\n    </TableRow>\n  </TableBody>\n</Table>;\n","vertically-centered":"import {\n  InlineCode,\n  Table,\n  TableBody,\n  TableCell,\n  TableColumn,\n  TableHeader,\n  TableRow,\n} from \"@mittwald/flow-react-components\";\n\n<Table aria-label=\"Button Props\" verticalAlign=\"middle\">\n  <TableHeader>\n    <TableColumn>Name</TableColumn>\n    <TableColumn>Type</TableColumn>\n    <TableColumn>Default</TableColumn>\n    <TableColumn>Description</TableColumn>\n  </TableHeader>\n  <TableBody>\n    <TableRow>\n      <TableCell>\n        <InlineCode>size</InlineCode>\n      </TableCell>\n      <TableCell>m | s</TableCell>\n      <TableCell>m</TableCell>\n      <TableCell>\n        Lorem ipsum dolor sit amet consectetur adipisicing\n        elit. Cumque eius quam quas vel voluptas, ullam\n        aliquid fugit.\n      </TableCell>\n    </TableRow>\n  </TableBody>\n</Table>;\n","withFooter":"import {\n  Table,\n  TableBody,\n  TableCell,\n  TableColumn,\n  TableFooterRow,\n  TableHeader,\n  TableRow,\n} from \"@mittwald/flow-react-components\";\n\n<Table aria-label=\"Bestellübersicht\">\n  <TableHeader>\n    <TableColumn>Artikel</TableColumn>\n    <TableColumn horizontalAlign=\"end\">Preis</TableColumn>\n  </TableHeader>\n  <TableBody>\n    <TableRow>\n      <TableCell>proSpace (2 vCPU / 4 GB RAM)</TableCell>\n      <TableCell horizontalAlign=\"end\">32,00 €</TableCell>\n    </TableRow>\n    <TableRow>\n      <TableCell>20 GB Speicherplatz</TableCell>\n      <TableCell horizontalAlign=\"end\">Inklusive</TableCell>\n    </TableRow>\n    <TableRow>\n      <TableCell>20 GB Zusatzspeicherplatz</TableCell>\n      <TableCell horizontalAlign=\"end\">2,00 €</TableCell>\n    </TableRow>\n    <TableFooterRow>\n      <TableCell>Gesamtpreis</TableCell>\n      <TableCell horizontalAlign=\"end\">34,00 €</TableCell>\n    </TableFooterRow>\n  </TableBody>\n</Table>;\n"},"slugs":["03-components","structure","table"],"filename":"03-components/structure/table/index.mdx","anchors":[]},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true,\n    zoom: 0.6\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"FileCardList","description":"Die FileCardList platziert mehrere FileCards in einem ColumnLayout und visualisiert Dateien samt relevanter Informationen."},"scope":{}},"examples":{"default":"import {\n  FileCard,\n  FileCardList,\n} from \"@mittwald/flow-react-components\";\n\n<FileCardList aria-label=\"Hochgeladene Dateien\">\n  <FileCard\n    name=\"file1.txt\"\n    onDelete={() => {\n      console.log(\"delete\");\n    }}\n  />\n  <FileCard\n    name=\"file2.txt\"\n    onDelete={() => {\n      console.log(\"delete\");\n    }}\n  />\n  <FileCard\n    name=\"file3.txt\"\n    onDelete={() => {\n      console.log(\"delete\");\n    }}\n  />\n  <FileCard\n    name=\"file4.txt\"\n    onDelete={() => {\n      console.log(\"delete\");\n    }}\n  />\n  <FileCard\n    type=\"image/jpg\"\n    name=\"image.jpg\"\n    onDelete={() => {\n      console.log(\"delete\");\n    }}\n  />\n</FileCardList>;\n"},"slugs":["03-components","upload","file-card-list"],"filename":"03-components/upload/file-card-list/index.mdx","anchors":[]},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"FileCard","description":"Die FileCard visualisiert Dateien samt relevanter Informationen."},"scope":{}},"examples":{"buttons":"import {\n  FileCard,\n  Button,\n  IconChevronDown,\n  IconChevronUp,\n} from \"@mittwald/flow-react-components\";\n\n<FileCard\n  type=\"image/jpg\"\n  name=\"image.jpg\"\n  onDelete={() => {\n    console.log(\"delete\");\n  }}\n>\n  <Button>\n    <IconChevronUp />\n  </Button>\n  <Button>\n    <IconChevronDown />\n  </Button>\n</FileCard>;\n","contextMenu":"import {\n  ContextMenu,\n  FileCard,\n  MenuItem,\n} from \"@mittwald/flow-react-components\";\n\n<FileCard\n  type=\"image/jpg\"\n  name=\"image.jpg\"\n  sizeInBytes={47500}\n>\n  <ContextMenu>\n    <MenuItem>Entfernen</MenuItem>\n  </ContextMenu>\n</FileCard>;\n","default":"import { FileCard } from \"@mittwald/flow-react-components\";\n\n<FileCard\n  type=\"image/jpg\"\n  name=\"image.jpg\"\n  sizeInBytes={47500}\n/>;\n","delete":"import { FileCard } from \"@mittwald/flow-react-components\";\n\n<FileCard\n  type=\"image/jpg\"\n  name=\"image.jpg\"\n  sizeInBytes={47500}\n  onDelete={() => {\n    console.log(\"delete\");\n  }}\n/>;\n","failed":"import {\n  FileCard,\n  Text,\n} from \"@mittwald/flow-react-components\";\n\n<FileCard name=\"image.jpg\" isFailed>\n  <Text>Datei konnte nicht hochgeladen werden</Text>\n</FileCard>;\n","image":"import { FileCard } from \"@mittwald/flow-react-components\";\n\n<FileCard\n  type=\"image/jpg\"\n  name=\"image.jpg\"\n  sizeInBytes={47500}\n  imageSrc=\"https://mittwald.github.io/flow/assets/mittwald_logo_rgb.jpg\"\n/>;\n","link":"import { FileCard } from \"@mittwald/flow-react-components\";\n\n<FileCard\n  type=\"image/jpg\"\n  name=\"image.jpg\"\n  sizeInBytes={47500}\n  href=\"#\"\n/>;\n","progressBar":"import {\n  FileCard,\n  Label,\n  ProgressBar,\n} from \"@mittwald/flow-react-components\";\n\n<FileCard>\n  <ProgressBar\n    value={2.1}\n    maxValue={3.4}\n    minValue={0}\n    showMaxValue\n    formatOptions={{ style: \"unit\", unit: \"megabyte\" }}\n  >\n    <Label>Image.png</Label>\n  </ProgressBar>\n</FileCard>;\n"},"slugs":["03-components","upload","file-card"],"filename":"03-components/upload/file-card/index.mdx","anchors":[]},{"mdxSource":{"compiledSource":"\"use strict\";\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const {LiveCodeEditor} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  if (!LiveCodeEditor) _missingMdxReference(\"LiveCodeEditor\", true);\n  return _jsx(LiveCodeEditor, {\n    editorDisabled: true\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{"component":"FileDropZone","description":"Die FileDropZone ermöglicht das Hochladen von Dateien per Drag-and-Drop oder durch manuelle Auswahl."},"scope":{}},"examples":{"default":"import {\n  Button,\n  FileDropZone,\n  FileField,\n  Heading,\n  IconUpload,\n  Section,\n} from \"@mittwald/flow-react-components\";\n\n<Section>\n  <FileDropZone onChange={(files) => console.log(files)}>\n    <IconUpload />\n    <Heading>Datei ablegen</Heading>\n    <FileField\n      name=\"file\"\n      onChange={(files) => console.log(files)}\n    >\n      <Button>Datei auswählen</Button>\n    </FileField>\n  </FileDropZone>\n</Section>;\n","multiple":"import {\n  Button,\n  FileDropZone,\n  FileField,\n  Heading,\n  IconUpload,\n  Section,\n} from \"@mittwald/flow-react-components\";\n\n<Section>\n  <FileDropZone\n    multiple\n    onChange={(files) => console.log(files)}\n  >\n    <IconUpload />\n    <Heading>Dateien ablegen</Heading>\n    <FileField\n      name=\"file\"\n      onChange={(files) => console.log(files)}\n    >\n      <Button>Dateien auswählen</Button>\n    </FileField>\n  </FileDropZone>\n</Section>;\n","type":"import {\n  Button,\n  FileDropZone,\n  FileField,\n  Heading,\n  IconImage,\n  Section,\n  Text,\n} from \"@mittwald/flow-react-components\";\n\n<Section>\n  <FileDropZone\n    accept=\"image/png\"\n    onChange={(files) => console.log(files)}\n  >\n    <IconImage />\n    <Heading>Bild ablegen</Heading>\n    <Text>\n      Es sind nur Bilder vom Typ image/png erlaubt.\n    </Text>\n    <FileField\n      name=\"file\"\n      onChange={(files) => console.log(files)}\n    >\n      <Button>Bild auswählen</Button>\n    </FileField>\n  </FileDropZone>\n</Section>;\n"},"slugs":["03-components","upload","file-drop-zone"],"filename":"03-components/upload/file-drop-zone/index.mdx","anchors":[]}]}],"$L5a"]}]]}]]}]}]}]
5b:I[56504,["275","static/chunks/56e56dd1-d9d740563edd70ac.js","7","static/chunks/7913f1fe-6480e0f0dbd677e5.js","348","static/chunks/b601c95a-a4479ee2bfef51a8.js","449","static/chunks/7d67aa13-a9505cfe119c0341.js","52","static/chunks/0f9dcbb3-d76ed7e94539a1ba.js","622","static/chunks/5707686f-b6185c31a2586637.js","685","static/chunks/685-03801d5b53342e0c.js","504","static/chunks/504-d709365a7c02fc91.js","974","static/chunks/app/page-691cf1f1ce0eb4dc.js"],"Link"]
5c:I[30738,["275","static/chunks/56e56dd1-d9d740563edd70ac.js","7","static/chunks/7913f1fe-6480e0f0dbd677e5.js","348","static/chunks/b601c95a-a4479ee2bfef51a8.js","449","static/chunks/7d67aa13-a9505cfe119c0341.js","52","static/chunks/0f9dcbb3-d76ed7e94539a1ba.js","622","static/chunks/5707686f-b6185c31a2586637.js","685","static/chunks/685-03801d5b53342e0c.js","892","static/chunks/892-b5a5fe5cdfe2d955.js","504","static/chunks/504-d709365a7c02fc91.js","177","static/chunks/app/layout-856d70240384c0ce.js"],"default"]
5a:["$","main",null,{"className":"layout_main__30FUz","children":["$","$L3",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":404}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],[]],"forbidden":"$undefined","unauthorized":"$undefined"}]}]
14:["$","header",null,{"children":["$","div",null,{"className":"layout_headerContent__OIGfC","children":[["$","$L5b",null,{"href":"/","children":["$","$L13",null,{"className":"layout_logo__PcxmI","src":"/flow-previews/docs/2065/merge/_next/static/media/flow-logo.7ab885cd.svg","alt":"mittwald Flow Logo"}]}],["$","$L5c",null,{"className":"layout_headerNavigation__SNRbw","docs":[{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:0:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:0:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:0:slugs","filename":"01-get-started/installation/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:0:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:1:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:1:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:1:slugs","filename":"01-get-started/stylesheet/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:1:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:2:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:2:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:2:slugs","filename":"02-foundations/01-design/01-design-tokens/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:2:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:3:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:3:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:3:slugs","filename":"02-foundations/01-design/02-colors/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:3:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:4:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:4:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:4:slugs","filename":"02-foundations/01-design/05-typography/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:4:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:5:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:5:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:5:slugs","filename":"02-foundations/02-structure/01-layout/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:5:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:6:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:6:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:6:slugs","filename":"02-foundations/02-structure/02-spacing/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:6:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:7:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:7:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:7:slugs","filename":"02-foundations/03-content-guidelines/01-sprach-guide/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:7:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:8:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:8:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:8:slugs","filename":"02-foundations/03-content-guidelines/02-fehlermeldungen/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:8:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:9:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:9:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:9:slugs","filename":"02-foundations/04-ui-patterns/01-dashboard/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:9:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:10:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:10:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:10:slugs","filename":"02-foundations/04-ui-patterns/02-anlegeprozess/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:10:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:11:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:11:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:11:slugs","filename":"02-foundations/04-ui-patterns/03-struktur/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:11:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:12:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:12:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:12:slugs","filename":"03-components/actions/action-group/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:12:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:13:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:13:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:13:slugs","filename":"03-components/actions/action/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:13:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:14:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:14:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:14:slugs","filename":"03-components/actions/button/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:14:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:15:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:15:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:15:slugs","filename":"03-components/actions/context-menu/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:15:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:16:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:16:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:16:slugs","filename":"03-components/actions/copy-button/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:16:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:17:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:17:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:17:slugs","filename":"03-components/chat/chat/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:17:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:18:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:18:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:18:slugs","filename":"03-components/chat/message-thread/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:18:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:19:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:19:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:19:slugs","filename":"03-components/chat/message/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:19:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:20:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:20:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:20:slugs","filename":"03-components/content/avatar-stack/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:20:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:21:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:21:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:21:slugs","filename":"03-components/content/avatar/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:21:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:22:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:22:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:22:slugs","filename":"03-components/content/code-block/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:22:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:23:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:23:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:23:slugs","filename":"03-components/content/color/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:23:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:24:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:24:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:24:slugs","filename":"03-components/content/heading/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:24:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:25:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:25:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:25:slugs","filename":"03-components/content/icon/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:25:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:26:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:26:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:26:slugs","filename":"03-components/content/illustrated-message/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:26:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:27:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:27:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:27:slugs","filename":"03-components/content/image/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:27:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:28:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:28:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:28:slugs","filename":"03-components/content/inline-code/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:28:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:29:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:29:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:29:slugs","filename":"03-components/content/label/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:29:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:30:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:30:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:30:slugs","filename":"03-components/content/labeled-value/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:30:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:31:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:31:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:31:slugs","filename":"03-components/content/markdown/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:31:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:32:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:32:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:32:slugs","filename":"03-components/content/rating/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:32:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:33:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:33:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:33:slugs","filename":"03-components/content/skeleton/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:33:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:34:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:34:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:34:slugs","filename":"03-components/content/text/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:34:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:35:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:35:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:35:slugs","filename":"03-components/data-visualisation/big-number/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:35:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:36:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:36:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:36:slugs","filename":"03-components/data-visualisation/cartesian-chart/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:36:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:37:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:37:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:37:slugs","filename":"03-components/data-visualisation/donut-chart/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:37:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:38:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:38:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:38:slugs","filename":"03-components/form-controls/autocomplete/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:38:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:39:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:39:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:39:slugs","filename":"03-components/form-controls/checkbox-button/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:39:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:40:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:40:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:40:slugs","filename":"03-components/form-controls/checkbox-group/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:40:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:41:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:41:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:41:slugs","filename":"03-components/form-controls/checkbox/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:41:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:42:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:42:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:42:slugs","filename":"03-components/form-controls/combo-box/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:42:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:43:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:43:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:43:slugs","filename":"03-components/form-controls/date-picker/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:43:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:44:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:44:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:44:slugs","filename":"03-components/form-controls/date-range-picker/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:44:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:45:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:45:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:45:slugs","filename":"03-components/form-controls/field-react-hook-form/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:45:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:46:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:46:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:46:slugs","filename":"03-components/form-controls/file-field/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:46:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:47:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:47:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:47:slugs","filename":"03-components/form-controls/form-react-hook-form/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:47:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:48:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:48:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:48:slugs","filename":"03-components/form-controls/markdown-editor/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:48:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:49:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:49:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:49:slugs","filename":"03-components/form-controls/number-field/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:49:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:50:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:50:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:50:slugs","filename":"03-components/form-controls/password-creation-field/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:50:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:51:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:51:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:51:slugs","filename":"03-components/form-controls/radio-group/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:51:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:52:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:52:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:52:slugs","filename":"03-components/form-controls/search-field/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:52:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:53:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:53:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:53:slugs","filename":"03-components/form-controls/segmented-control/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:53:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:54:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:54:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:54:slugs","filename":"03-components/form-controls/select/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:54:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:55:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:55:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:55:slugs","filename":"03-components/form-controls/slider/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:55:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:56:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:56:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:56:slugs","filename":"03-components/form-controls/switch/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:56:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:57:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:57:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:57:slugs","filename":"03-components/form-controls/text-area/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:57:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:58:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:58:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:58:slugs","filename":"03-components/form-controls/text-field/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:58:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:59:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:59:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:59:slugs","filename":"03-components/form-controls/time-field/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:59:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:60:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:60:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:60:slugs","filename":"03-components/navigation/breadcrumb/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:60:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:61:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:61:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:61:slugs","filename":"03-components/navigation/header-navigation/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:61:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:62:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:62:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:62:slugs","filename":"03-components/navigation/link/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:62:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:63:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:63:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:63:slugs","filename":"03-components/navigation/navigation/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:63:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:64:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:64:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:64:slugs","filename":"03-components/navigation/tabs/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:64:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:65:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:65:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:65:slugs","filename":"03-components/overlays/contextual-help/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:65:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:66:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:66:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:66:slugs","filename":"03-components/overlays/light-box/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:66:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:67:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:67:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:67:slugs","filename":"03-components/overlays/modal/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:67:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:68:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:68:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:68:slugs","filename":"03-components/overlays/tooltip/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:68:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:69:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:69:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:69:slugs","filename":"03-components/status/alert-badge/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:69:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:70:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:70:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:70:slugs","filename":"03-components/status/alert/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:70:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:71:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:71:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:71:slugs","filename":"03-components/status/badge/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:71:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:72:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:72:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:72:slugs","filename":"03-components/status/counter-badge/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:72:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:73:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:73:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:73:slugs","filename":"03-components/status/loading-spinner/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:73:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:74:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:74:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:74:slugs","filename":"03-components/status/notification-provider/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:74:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:75:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:75:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:75:slugs","filename":"03-components/status/notification/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:75:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:76:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:76:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:76:slugs","filename":"03-components/status/progress-bar/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:76:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:77:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:77:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:77:slugs","filename":"03-components/structure/accent-box/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:77:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:78:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:78:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:78:slugs","filename":"03-components/structure/accordion/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:78:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:79:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:79:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:79:slugs","filename":"03-components/structure/align/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:79:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:80:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:80:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:80:slugs","filename":"03-components/structure/column-layout/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:80:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:81:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:81:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:81:slugs","filename":"03-components/structure/flex/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:81:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:82:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:82:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:82:slugs","filename":"03-components/structure/layout-card/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:82:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:83:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:83:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:83:slugs","filename":"03-components/structure/list/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:83:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:84:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:84:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:84:slugs","filename":"03-components/structure/section/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:84:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:85:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:85:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:85:slugs","filename":"03-components/structure/separator/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:85:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:86:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:86:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:86:slugs","filename":"03-components/structure/table/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:86:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:87:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:87:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:87:slugs","filename":"03-components/upload/file-card-list/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:87:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:88:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:88:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:88:slugs","filename":"03-components/upload/file-card/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:88:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:89:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:89:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:89:slugs","filename":"03-components/upload/file-drop-zone/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:89:anchors"}]}],"$L5d"]}]}]
5e:I[56504,["275","static/chunks/56e56dd1-d9d740563edd70ac.js","7","static/chunks/7913f1fe-6480e0f0dbd677e5.js","348","static/chunks/b601c95a-a4479ee2bfef51a8.js","449","static/chunks/7d67aa13-a9505cfe119c0341.js","52","static/chunks/0f9dcbb3-d76ed7e94539a1ba.js","622","static/chunks/5707686f-b6185c31a2586637.js","685","static/chunks/685-03801d5b53342e0c.js","504","static/chunks/504-d709365a7c02fc91.js","974","static/chunks/app/page-691cf1f1ce0eb4dc.js"],"HeaderNavigation"]
5f:I[56504,["275","static/chunks/56e56dd1-d9d740563edd70ac.js","7","static/chunks/7913f1fe-6480e0f0dbd677e5.js","348","static/chunks/b601c95a-a4479ee2bfef51a8.js","449","static/chunks/7d67aa13-a9505cfe119c0341.js","52","static/chunks/0f9dcbb3-d76ed7e94539a1ba.js","622","static/chunks/5707686f-b6185c31a2586637.js","685","static/chunks/685-03801d5b53342e0c.js","504","static/chunks/504-d709365a7c02fc91.js","974","static/chunks/app/page-691cf1f1ce0eb4dc.js"],"Content"]
60:I[56504,["275","static/chunks/56e56dd1-d9d740563edd70ac.js","7","static/chunks/7913f1fe-6480e0f0dbd677e5.js","348","static/chunks/b601c95a-a4479ee2bfef51a8.js","449","static/chunks/7d67aa13-a9505cfe119c0341.js","52","static/chunks/0f9dcbb3-d76ed7e94539a1ba.js","622","static/chunks/5707686f-b6185c31a2586637.js","685","static/chunks/685-03801d5b53342e0c.js","504","static/chunks/504-d709365a7c02fc91.js","974","static/chunks/app/page-691cf1f1ce0eb4dc.js"],"ModalTrigger"]
61:I[56504,["275","static/chunks/56e56dd1-d9d740563edd70ac.js","7","static/chunks/7913f1fe-6480e0f0dbd677e5.js","348","static/chunks/b601c95a-a4479ee2bfef51a8.js","449","static/chunks/7d67aa13-a9505cfe119c0341.js","52","static/chunks/0f9dcbb3-d76ed7e94539a1ba.js","622","static/chunks/5707686f-b6185c31a2586637.js","685","static/chunks/685-03801d5b53342e0c.js","504","static/chunks/504-d709365a7c02fc91.js","974","static/chunks/app/page-691cf1f1ce0eb4dc.js"],"Button"]
62:I[56504,["275","static/chunks/56e56dd1-d9d740563edd70ac.js","7","static/chunks/7913f1fe-6480e0f0dbd677e5.js","348","static/chunks/b601c95a-a4479ee2bfef51a8.js","449","static/chunks/7d67aa13-a9505cfe119c0341.js","52","static/chunks/0f9dcbb3-d76ed7e94539a1ba.js","622","static/chunks/5707686f-b6185c31a2586637.js","685","static/chunks/685-03801d5b53342e0c.js","504","static/chunks/504-d709365a7c02fc91.js","974","static/chunks/app/page-691cf1f1ce0eb4dc.js"],"IconMenu"]
63:I[56504,["275","static/chunks/56e56dd1-d9d740563edd70ac.js","7","static/chunks/7913f1fe-6480e0f0dbd677e5.js","348","static/chunks/b601c95a-a4479ee2bfef51a8.js","449","static/chunks/7d67aa13-a9505cfe119c0341.js","52","static/chunks/0f9dcbb3-d76ed7e94539a1ba.js","622","static/chunks/5707686f-b6185c31a2586637.js","685","static/chunks/685-03801d5b53342e0c.js","504","static/chunks/504-d709365a7c02fc91.js","974","static/chunks/app/page-691cf1f1ce0eb4dc.js"],"Modal"]
64:I[56504,["275","static/chunks/56e56dd1-d9d740563edd70ac.js","7","static/chunks/7913f1fe-6480e0f0dbd677e5.js","348","static/chunks/b601c95a-a4479ee2bfef51a8.js","449","static/chunks/7d67aa13-a9505cfe119c0341.js","52","static/chunks/0f9dcbb3-d76ed7e94539a1ba.js","622","static/chunks/5707686f-b6185c31a2586637.js","685","static/chunks/685-03801d5b53342e0c.js","504","static/chunks/504-d709365a7c02fc91.js","974","static/chunks/app/page-691cf1f1ce0eb4dc.js"],"Heading"]
65:I[56504,["275","static/chunks/56e56dd1-d9d740563edd70ac.js","7","static/chunks/7913f1fe-6480e0f0dbd677e5.js","348","static/chunks/b601c95a-a4479ee2bfef51a8.js","449","static/chunks/7d67aa13-a9505cfe119c0341.js","52","static/chunks/0f9dcbb3-d76ed7e94539a1ba.js","622","static/chunks/5707686f-b6185c31a2586637.js","685","static/chunks/685-03801d5b53342e0c.js","504","static/chunks/504-d709365a7c02fc91.js","974","static/chunks/app/page-691cf1f1ce0eb4dc.js"],"Section"]
5d:["$","$L5e",null,{"className":"layout_mobileNavigation__1XY9K","children":["$","$L5f",null,{"children":["$","$L60",null,{"children":[["$","$L61",null,{"color":"secondary","variant":"plain","children":["$","$L62",null,{}]}],["$","$L63",null,{"offCanvas":true,"className":"layout_mobileNavigationOffCanvas__coBZM","children":[["$","$L64",null,{"children":"Menü"}],["$","$L5f",null,{"children":["$","$L65",null,{"children":[["$","$L5c",null,{"docs":[{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:0:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:0:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:0:slugs","filename":"01-get-started/installation/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:0:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:1:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:1:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:1:slugs","filename":"01-get-started/stylesheet/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:1:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:2:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:2:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:2:slugs","filename":"02-foundations/01-design/01-design-tokens/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:2:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:3:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:3:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:3:slugs","filename":"02-foundations/01-design/02-colors/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:3:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:4:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:4:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:4:slugs","filename":"02-foundations/01-design/05-typography/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:4:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:5:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:5:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:5:slugs","filename":"02-foundations/02-structure/01-layout/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:5:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:6:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:6:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:6:slugs","filename":"02-foundations/02-structure/02-spacing/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:6:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:7:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:7:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:7:slugs","filename":"02-foundations/03-content-guidelines/01-sprach-guide/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:7:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:8:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:8:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:8:slugs","filename":"02-foundations/03-content-guidelines/02-fehlermeldungen/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:8:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:9:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:9:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:9:slugs","filename":"02-foundations/04-ui-patterns/01-dashboard/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:9:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:10:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:10:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:10:slugs","filename":"02-foundations/04-ui-patterns/02-anlegeprozess/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:10:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:11:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:11:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:11:slugs","filename":"02-foundations/04-ui-patterns/03-struktur/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:11:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:12:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:12:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:12:slugs","filename":"03-components/actions/action-group/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:12:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:13:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:13:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:13:slugs","filename":"03-components/actions/action/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:13:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:14:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:14:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:14:slugs","filename":"03-components/actions/button/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:14:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:15:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:15:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:15:slugs","filename":"03-components/actions/context-menu/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:15:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:16:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:16:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:16:slugs","filename":"03-components/actions/copy-button/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:16:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:17:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:17:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:17:slugs","filename":"03-components/chat/chat/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:17:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:18:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:18:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:18:slugs","filename":"03-components/chat/message-thread/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:18:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:19:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:19:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:19:slugs","filename":"03-components/chat/message/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:19:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:20:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:20:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:20:slugs","filename":"03-components/content/avatar-stack/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:20:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:21:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:21:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:21:slugs","filename":"03-components/content/avatar/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:21:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:22:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:22:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:22:slugs","filename":"03-components/content/code-block/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:22:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:23:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:23:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:23:slugs","filename":"03-components/content/color/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:23:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:24:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:24:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:24:slugs","filename":"03-components/content/heading/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:24:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:25:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:25:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:25:slugs","filename":"03-components/content/icon/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:25:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:26:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:26:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:26:slugs","filename":"03-components/content/illustrated-message/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:26:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:27:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:27:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:27:slugs","filename":"03-components/content/image/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:27:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:28:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:28:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:28:slugs","filename":"03-components/content/inline-code/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:28:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:29:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:29:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:29:slugs","filename":"03-components/content/label/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:29:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:30:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:30:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:30:slugs","filename":"03-components/content/labeled-value/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:30:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:31:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:31:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:31:slugs","filename":"03-components/content/markdown/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:31:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:32:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:32:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:32:slugs","filename":"03-components/content/rating/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:32:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:33:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:33:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:33:slugs","filename":"03-components/content/skeleton/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:33:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:34:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:34:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:34:slugs","filename":"03-components/content/text/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:34:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:35:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:35:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:35:slugs","filename":"03-components/data-visualisation/big-number/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:35:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:36:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:36:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:36:slugs","filename":"03-components/data-visualisation/cartesian-chart/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:36:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:37:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:37:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:37:slugs","filename":"03-components/data-visualisation/donut-chart/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:37:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:38:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:38:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:38:slugs","filename":"03-components/form-controls/autocomplete/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:38:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:39:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:39:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:39:slugs","filename":"03-components/form-controls/checkbox-button/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:39:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:40:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:40:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:40:slugs","filename":"03-components/form-controls/checkbox-group/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:40:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:41:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:41:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:41:slugs","filename":"03-components/form-controls/checkbox/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:41:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:42:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:42:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:42:slugs","filename":"03-components/form-controls/combo-box/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:42:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:43:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:43:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:43:slugs","filename":"03-components/form-controls/date-picker/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:43:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:44:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:44:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:44:slugs","filename":"03-components/form-controls/date-range-picker/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:44:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:45:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:45:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:45:slugs","filename":"03-components/form-controls/field-react-hook-form/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:45:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:46:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:46:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:46:slugs","filename":"03-components/form-controls/file-field/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:46:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:47:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:47:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:47:slugs","filename":"03-components/form-controls/form-react-hook-form/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:47:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:48:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:48:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:48:slugs","filename":"03-components/form-controls/markdown-editor/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:48:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:49:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:49:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:49:slugs","filename":"03-components/form-controls/number-field/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:49:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:50:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:50:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:50:slugs","filename":"03-components/form-controls/password-creation-field/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:50:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:51:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:51:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:51:slugs","filename":"03-components/form-controls/radio-group/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:51:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:52:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:52:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:52:slugs","filename":"03-components/form-controls/search-field/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:52:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:53:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:53:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:53:slugs","filename":"03-components/form-controls/segmented-control/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:53:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:54:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:54:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:54:slugs","filename":"03-components/form-controls/select/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:54:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:55:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:55:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:55:slugs","filename":"03-components/form-controls/slider/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:55:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:56:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:56:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:56:slugs","filename":"03-components/form-controls/switch/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:56:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:57:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:57:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:57:slugs","filename":"03-components/form-controls/text-area/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:57:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:58:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:58:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:58:slugs","filename":"03-components/form-controls/text-field/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:58:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:59:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:59:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:59:slugs","filename":"03-components/form-controls/time-field/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:59:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:60:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:60:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:60:slugs","filename":"03-components/navigation/breadcrumb/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:60:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:61:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:61:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:61:slugs","filename":"03-components/navigation/header-navigation/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:61:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:62:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:62:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:62:slugs","filename":"03-components/navigation/link/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:62:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:63:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:63:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:63:slugs","filename":"03-components/navigation/navigation/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:63:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:64:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:64:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:64:slugs","filename":"03-components/navigation/tabs/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:64:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:65:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:65:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:65:slugs","filename":"03-components/overlays/contextual-help/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:65:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:66:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:66:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:66:slugs","filename":"03-components/overlays/light-box/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:66:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:67:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:67:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:67:slugs","filename":"03-components/overlays/modal/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:67:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:68:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:68:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:68:slugs","filename":"03-components/overlays/tooltip/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:68:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:69:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:69:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:69:slugs","filename":"03-components/status/alert-badge/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:69:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:70:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:70:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:70:slugs","filename":"03-components/status/alert/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:70:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:71:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:71:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:71:slugs","filename":"03-components/status/badge/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:71:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:72:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:72:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:72:slugs","filename":"03-components/status/counter-badge/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:72:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:73:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:73:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:73:slugs","filename":"03-components/status/loading-spinner/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:73:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:74:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:74:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:74:slugs","filename":"03-components/status/notification-provider/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:74:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:75:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:75:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:75:slugs","filename":"03-components/status/notification/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:75:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:76:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:76:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:76:slugs","filename":"03-components/status/progress-bar/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:76:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:77:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:77:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:77:slugs","filename":"03-components/structure/accent-box/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:77:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:78:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:78:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:78:slugs","filename":"03-components/structure/accordion/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:78:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:79:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:79:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:79:slugs","filename":"03-components/structure/align/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:79:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:80:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:80:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:80:slugs","filename":"03-components/structure/column-layout/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:80:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:81:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:81:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:81:slugs","filename":"03-components/structure/flex/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:81:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:82:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:82:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:82:slugs","filename":"03-components/structure/layout-card/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:82:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:83:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:83:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:83:slugs","filename":"03-components/structure/list/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:83:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:84:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:84:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:84:slugs","filename":"03-components/structure/section/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:84:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:85:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:85:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:85:slugs","filename":"03-components/structure/separator/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:85:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:86:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:86:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:86:slugs","filename":"03-components/structure/table/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:86:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:87:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:87:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:87:slugs","filename":"03-components/upload/file-card-list/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:87:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:88:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:88:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:88:slugs","filename":"03-components/upload/file-card/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:88:anchors"},{"mdxSource":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:89:mdxSource","examples":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:89:examples","slugs":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:89:slugs","filename":"03-components/upload/file-drop-zone/index.mdx","anchors":"$2:props:children:props:children:props:children:1:props:children:2:props:children:0:props:docs:89:anchors"}]}],"$L66"]}]}]]}]]}]}]}]
66:["$","$L15",null,{"docs":"$5d:props:children:props:children:props:children:1:props:children:1:props:children:props:children:0:props:docs","mobileNavigation":true}]
b:[["$","meta","0",{"charSet":"utf-8"}],["$","meta","1",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
7:null
67:I[79652,[],"IconMark"]
9:{"metadata":[["$","title","0",{"children":"Flow – mittwald Design System"}],["$","link","1",{"rel":"icon","href":"/flow-previews/docs/2065/merge/favicon.ico","type":"image/x-icon","sizes":"32x32"}],["$","$L67","2",{}]],"error":null,"digest":"$undefined"}
e:"$9:metadata"
