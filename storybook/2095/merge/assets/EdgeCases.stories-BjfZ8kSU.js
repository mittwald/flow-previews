import{j as r}from"./iframe-BvCo0Jms.js";import{O as m}from"./Option-C6SLPYdt.js";import{S as e}from"./Select-CoovDMO2.js";import{L as a}from"./Label-9SlnZKrY.js";import n from"./Default.stories-eDNE-lL1.js";import{d as l}from"./dummyText-CX_I_Wpl.js";import"./index-nuYtCEEu.js";import"./Popover-sopU_0Up.js";import"./clsx-B-dksMZM.js";import"./context-Dhm9rN8k.js";import"./flowComponent-D-_a8eO4.js";import"./index-DAXCiU9B.js";import"./index-DV2r3peR.js";import"./useStatic-BT5cYh4l.js";import"./OverlayContextProvider-CRRzvlsl.js";import"./Dialog-Bn7Do3Cm.js";import"./Button-pJkeE9x7.js";import"./utils-Cw2xzcbV.js";import"./ProgressBar-Upnvx2FX.js";import"./Label-DMgJ6fuj.js";import"./Hidden-Bxmlm1r5.js";import"./filterDOMProps-i7L6S0l1.js";import"./useLabel-DLhdFYyT.js";import"./context-EIbK-86q.js";import"./NumberFormatter-DNR9MAW-.js";import"./LiveAnnouncer-Cy654hVN.js";import"./usePress-BZrRujBy.js";import"./useFocus-C5EW73ar.js";import"./useFocusRing-D8FCXLiH.js";import"./useFocusable-BxQ2X-GC.js";import"./RSPContexts-DqErA_gH.js";import"./OverlayArrow-CPNbfpB1.js";import"./useControlledState-C0Hm7DMH.js";import"./Collection-DPawhEbh.js";import"./CollectionBuilder-BCns4Ten.js";import"./SelectionIndicator-CnEt238s.js";import"./Separator-CzBpIsK8.js";import"./Text-BvqGhHlZ.js";import"./SelectionManager-BEbqbhJ2.js";import"./useEvent-CQT5QNCL.js";import"./useCollator-B2HFQgM0.js";import"./FocusScope-Dcb5J3f3.js";import"./useLocalizedStringFormatter-CtRq2A2D.js";import"./VisuallyHidden-ch7dD1y0.js";import"./ClearPropsContextView-C48HQbuq.js";import"./ClearPropsContext-BXwgDp0Q.js";import"./IconWarning-DF-Lhcnu.js";import"./DragAndDrop-D4igw7zg.js";import"./inertValue-DW6eZbvn.js";import"./useListState-z3XGiHoa.js";import"./useFieldComponent-h58tn8zy.js";import"./react-children-utilities-K6HpEoIu.js";import"./useMakeFocusable-I3KvykiR.js";import"./Form-DLKKw6GK.js";import"./intlStrings-ZMTSFH_M.js";import"./useFormValidation-DFmu6UDs.js";import"./useFormReset-B8Yq5UFv.js";import"./Label.module-CUYTf9Jc.js";import"./FieldDescription-ThKAVIuf.js";import"./Text-CM7-JVVa.js";import"./browser-DOebU0pA.js";import"./EmulatedBoldText-BsN5iyXq.js";import"./CountryOptions-CVG_m1uu.js";import"./ContextualHelpTrigger-BPEc1f2p.js";import"./OverlayTrigger-UXgCK67L.js";import"./ControlledNotification-DPGunEdj.js";import"./Button-BdRFLyHU.js";import"./LoadingSpinner-6N6Rbt89.js";const Ar={...n,title:"Form Controls/Select/Edge Cases"},t={render:i=>r.jsxs(e,{...i,children:[r.jsx(a,{children:"Label"}),Array(20).fill("").map((s,o)=>r.jsxs(m,{children:["Option ",o+1]},o))]})},p={render:i=>r.jsxs(e,{...i,children:[r.jsx(a,{children:"Label"}),Array(4).fill("").map((s,o)=>r.jsxs(m,{children:["Option ",o+1," ",l.medium]},o))]})};t.parameters={...t.parameters,docs:{...t.parameters?.docs,source:{originalSource:`{
  render: props => <Select {...props}>
      <Label>Label</Label>
      {Array(20).fill("").map((value, index) => <Option key={index}>Option {index + 1}</Option>)}
    </Select>
}`,...t.parameters?.docs?.source}}};p.parameters={...p.parameters,docs:{...p.parameters?.docs,source:{originalSource:`{
  render: props => <Select {...props}>
      <Label>Label</Label>
      {Array(4).fill("").map((value, index) => <Option key={index}>
            Option {index + 1} {dummyText.medium}
          </Option>)}
    </Select>
}`,...p.parameters?.docs?.source}}};const Tr=["ManyOptions","LongTexts"];export{p as LongTexts,t as ManyOptions,Tr as __namedExportsOrder,Ar as default};
