import{c as y,$,d as m}from"./mergeRefs-DCHnGnoY.js";import{r as c,R as x}from"./index-BdpSHsi2.js";function b(t){const l=c.useRef(null);return c.useMemo(()=>({get current(){return l.current},set current(e){l.current=e,typeof t=="function"?t(e):t&&(t.current=e)}}),[t])}const p=Symbol("default");function v({values:t,children:l}){for(let[e,a]of t)l=x.createElement(e.Provider,{value:a},l);return l}function N(t){let{className:l,style:e,children:a,defaultClassName:f,defaultChildren:s,defaultStyle:o,values:r}=t;return c.useMemo(()=>{let n,d,u;return typeof l=="function"?n=l({...r,defaultClassName:f}):n=l,typeof e=="function"?d=e({...r,defaultStyle:o||{}}):d=e,typeof a=="function"?u=a({...r,defaultChildren:s}):a==null?u=s:u=a,{className:n??f,style:d||o?{...o,...d}:void 0,children:u??s,"data-rac":""}},[l,e,a,f,s,o,r])}function S(t,l){let e=c.useContext(t);if(l===null)return null;if(e&&typeof e=="object"&&"slots"in e&&e.slots){let a=l||p;if(!e.slots[a]){let f=new Intl.ListFormat().format(Object.keys(e.slots).map(o=>`"${o}"`)),s=l?`Invalid slot "${l}".`:"A slot prop is required.";throw new Error(`${s} Valid slot names are ${f}.`)}return e.slots[a]}return e}function g(t,l,e){let a=S(e,t.slot)||{},{ref:f,...s}=a,o=b(c.useMemo(()=>y(l,f),[l,f])),r=$(s,t);return"style"in s&&s.style&&"style"in t&&t.style&&(typeof s.style=="function"||typeof t.style=="function"?r.style=n=>{let d=typeof s.style=="function"?s.style(n):s.style,u={...n.defaultStyle,...d},i=typeof t.style=="function"?t.style({...n,defaultStyle:u}):t.style;return{...u,...i}}:r.style={...s.style,...t.style}),[r,o]}function M(t=!0){let[l,e]=c.useState(t),a=c.useRef(!1),f=c.useCallback(s=>{a.current=!0,e(!!s)},[]);return m(()=>{a.current||e(!1)},[]),[f,l]}function R(t){const l=/^(data-.*)$/;let e={};for(const a in t)l.test(a)||(e[a]=t[a]);return e}export{g as $,N as a,v as b,S as c,M as d,R as e,b as f,p as g};
