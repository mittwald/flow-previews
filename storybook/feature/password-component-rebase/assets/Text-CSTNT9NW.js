import{j as t}from"./jsx-runtime-D_zvdyIk.js";import"./index-F2Fta7eo.js";import{f as h,C as j,P as y,W as T}from"./PropsContextProvider-dnCHcaDZ.js";import{i as u}from"./browser-BJKb5O22.js";import{E as C}from"./EmulatedBoldText-DovK0xj5.js";import{c as $}from"./clsx-B-dksMZM.js";import{$ as b}from"./Text-D85TVzOv.js";const E="flow--text",P="flow--text--light",k="flow--text--dark",e={text:E,light:P,dark:k,"align-start":"flow--text--align-start","align-center":"flow--text--align-center","align-end":"flow--text--align-end","wrap-wrap":"flow--text--wrap-wrap","wrap-balance":"flow--text--wrap-balance","wrap-pretty":"flow--text--wrap-pretty"},N=h("Text",o=>{const{children:c,className:x,elementType:r="span",emulateBoldWidth:m,ref:n,color:a,align:s="start",wrap:l,...f}=o,d=$(e.text,a&&e[a],s&&e[`align-${s}`],l&&e[`wrap-${l}`],x),i={...f,className:d},w={Link:{inline:!0}},p=t.jsx(y,{props:w,children:t.jsx(T,{if:m,children:t.jsx(C,{children:c})})});if(!o.slot){const g=r;return t.jsx(g,{...i,ref:n,children:p})}return u(typeof r=="string","'elementType' in Text component must be of type string"),t.jsx(j,{children:t.jsx(b,{...i,elementType:r,ref:n,children:p})})});N.__docgenInfo={description:`@flr-generate all
@flr-clear-props-context`,methods:[],displayName:"Text"};export{N as T};
