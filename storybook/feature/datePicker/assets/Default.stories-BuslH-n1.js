import{R as e}from"./index-uCp2LrAq.js";import{f as o,F as S}from"./FormField.module-CpCFPza4.js";import{c as V}from"./clsx-B-dksMZM.js";import{P as M}from"./PropsContextProvider-Bes6Wf8F.js";import{P as T}from"./PopoverTrigger-CJjKvP3U.js";import{i as O,s as w,C as B,a as Z,b as j,c as d,d as p,j as H,f as N,g as h,h as u}from"./CalendarHeader-Dm9UFbBN.js";import{B as W}from"./Button-ulZ4Jbdu.js";import"./IconApp-Cxjf7gPB.js";import{w as z}from"./IconWarning-2GqJK2gc.js";import{$ as A}from"./Group-Bkrvm067.js";import{b as G}from"./OverlayTrigger-CZl3hatG.js";import{L as l}from"./Label-XTfJKiv1.js";import{F as J}from"./FieldDescription-DDkbsc6q.js";import"./_commonjsHelpers-BosuxZz1.js";import"./flowComponent-wUaQYyEI.js";import"./index-CFQDndEx.js";import"./index-BOkhicXD.js";import"./Form-B3U8TWeK.js";import"./useFocusable-SxMTR87z.js";import"./utils-CblGkSXh.js";import"./useLabel-D9TuMkUI.js";import"./useLabels-POLqFEYE.js";import"./Text-PvbfzXMy.js";import"./Action-Benk5eLT.js";import"./Text-CkBcFDZm.js";import"./EmulatedBoldText-DzNCZpDp.js";import"./Wrap-DQq6jo70.js";import"./OverlayArrow-DFzBEdBA.js";import"./number-nHrFdSb-.js";import"./useLocalizedStringFormatter-CELuk77o.js";import"./useControlledState-B8AA3oOY.js";import"./Button-EGpG9HXG.js";import"./filterDOMProps-CeZl_uWj.js";import"./usePress-BPPmAJfG.js";import"./RSPContexts-CJnKmcd7.js";import"./LiveAnnouncer-AIgN_avV.js";import"./useUpdateEffect-B3Lpb7P3.js";import"./useEvent-BUAZZNDw.js";import"./getScrollParent-CcmJp979.js";import"./useCollator-fUoTTx-r.js";import"./VisuallyHidden-CQbC_8pq.js";import"./Input-Ca4BfW5i.js";import"./FocusScope-Be1QW02A.js";import"./useFormReset-Bt7ImmB-.js";import"./Label-Dyr5o6sY.js";import"./Heading-BTa2x8cK.js";import"./LoadingSpinner-CTgdLL_K.js";import"./NumberFormatter-DNR9MAW-.js";const C=()=>e.createElement(O,{className:w.calendar},e.createElement(B,null),e.createElement(Z,null,r=>e.createElement(j,{date:r})));C.__docgenInfo={description:"",methods:[],displayName:"RangeCalendar"};const K="flow--date-range-picker--date-range-input",Q={dateRangeInput:K},L=r=>{const{isDisabled:m}=r;return e.createElement(A,{className:Q.dateRangeInput},e.createElement("div",null,e.createElement(d,{slot:"start"},t=>e.createElement(p,{segment:t})),e.createElement("span",{"aria-hidden":"true"},"â€“"),e.createElement(d,{slot:"end"},t=>e.createElement(p,{segment:t}))),e.createElement(W,{variant:"plain",color:"secondary",isDisabled:m},e.createElement(z,null)))};L.__docgenInfo={description:"",methods:[],displayName:"DateRangeInput",props:{isDisabled:{required:!1,tsType:{name:"boolean"},description:""}}};const a=r=>{const{children:m,className:t,errorMessage:k,...q}=r,v=V(o.formField,t),_={Label:{className:o.label,optional:!r.isRequired},FieldDescription:{className:o.fieldDescription}};return e.createElement(H,{...q,className:v},e.createElement(L,{isDisabled:r.isDisabled}),e.createElement(M,{props:_},m),e.createElement(S,{className:o.fieldError},k),e.createElement(T,{placement:"bottom end"},e.createElement(G,null,e.createElement(C,null))))};a.__docgenInfo={description:"",methods:[],displayName:"DateRangePicker",props:{errorMessage:{required:!1,tsType:{name:"ReactNode"},description:""}},composes:["PropsWithChildren"]};const ze={title:"Form Controls/DateRangePicker",component:a,render:r=>e.createElement(a,{...r,isRequired:!0},e.createElement(l,null,"Date")),parameters:{controls:{exclude:["errorMessage"]}}},s={},n={args:{isDisabled:!0}},i={args:{minValue:N(h())},render:r=>e.createElement(a,{isRequired:!0,defaultValue:{start:u("2012-07-03"),end:u("2012-07-04")},...r,isInvalid:!0,errorMessage:"Date is in the past"},e.createElement(l,null,"Future Date"))},c={args:{minValue:N(h())},render:r=>e.createElement(a,{isRequired:!0,...r},e.createElement(l,null,"Future Date"),e.createElement(J,null,"Select a future date"))};var f,b,g;s.parameters={...s.parameters,docs:{...(f=s.parameters)==null?void 0:f.docs,source:{originalSource:"{}",...(g=(b=s.parameters)==null?void 0:b.docs)==null?void 0:g.source}}};var D,$,E;n.parameters={...n.parameters,docs:{...(D=n.parameters)==null?void 0:D.docs,source:{originalSource:`{
  args: {
    isDisabled: true
  }
}`,...(E=($=n.parameters)==null?void 0:$.docs)==null?void 0:E.source}}};var R,x,F;i.parameters={...i.parameters,docs:{...(R=i.parameters)==null?void 0:R.docs,source:{originalSource:`{
  args: {
    minValue: today(getLocalTimeZone())
  },
  render: props => <DateRangePicker isRequired defaultValue={{
    start: parseDate("2012-07-03"),
    end: parseDate("2012-07-04")
  }} {...props} isInvalid errorMessage="Date is in the past">
      <Label>Future Date</Label>
    </DateRangePicker>
}`,...(F=(x=i.parameters)==null?void 0:x.docs)==null?void 0:F.source}}};var y,I,P;c.parameters={...c.parameters,docs:{...(y=c.parameters)==null?void 0:y.docs,source:{originalSource:`{
  args: {
    minValue: today(getLocalTimeZone())
  },
  render: props => <DateRangePicker isRequired {...props}>
      <Label>Future Date</Label>
      <FieldDescription>Select a future date</FieldDescription>
    </DateRangePicker>
}`,...(P=(I=c.parameters)==null?void 0:I.docs)==null?void 0:P.source}}};const Ae=["Default","Disabled","Invalid","FutureDatesOnly"];export{s as Default,n as Disabled,c as FutureDatesOnly,i as Invalid,Ae as __namedExportsOrder,ze as default};
