import{j as r}from"./iframe-qTztDmQ9.js";import{O as m}from"./Option-B8iKW7sG.js";import{S as e}from"./Select-uSEbxSqQ.js";import{L as a}from"./Label-B_HtseH-.js";import n from"./Default.stories-D9gwVVzG.js";import{d as l}from"./dummyText-CX_I_Wpl.js";import"./index-nuYtCEEu.js";import"./Popover-Cs9RVKWs.js";import"./clsx-B-dksMZM.js";import"./context-Cf3mID_7.js";import"./flowComponent-Bak4HlW4.js";import"./index-P12icK_R.js";import"./index-_9O3yG_2.js";import"./useStatic-CJuuYRzf.js";import"./OverlayContextProvider-g6FpQG7e.js";import"./Dialog-a9xsPkPz.js";import"./Button-BJWArbVY.js";import"./utils-CdWUsvaa.js";import"./ProgressBar-BBefMTke.js";import"./Label-Bo8Flsc_.js";import"./Hidden-B1UrvXuA.js";import"./filterDOMProps-i7L6S0l1.js";import"./useLabel-uF6YmIyy.js";import"./context-bFJEZtp8.js";import"./NumberFormatter-DNR9MAW-.js";import"./LiveAnnouncer-Cy654hVN.js";import"./usePress-Dljjmf_y.js";import"./useFocus-CdJCReig.js";import"./useFocusRing-hzSL5p2c.js";import"./useFocusable-Q1pEG0eK.js";import"./RSPContexts-C3w4xSHJ.js";import"./OverlayArrow-CaJ_i3sf.js";import"./useControlledState-tlJilXH9.js";import"./Collection-CQdjy6gf.js";import"./CollectionBuilder-B-XA9uLm.js";import"./SelectionIndicator-gGCk-Q46.js";import"./Separator-Duld6zlz.js";import"./Text-B9fEov2V.js";import"./SelectionManager-DzXI_LHw.js";import"./useEvent-qXt-HnUm.js";import"./useCollator-CFJsu416.js";import"./FocusScope-BLJU626h.js";import"./useLocalizedStringFormatter-CIyKheH2.js";import"./VisuallyHidden-DWMxxCWQ.js";import"./ClearPropsContextView-UvqASDld.js";import"./ClearPropsContext-CkWIpOjD.js";import"./IconWarning-DPAJHOeD.js";import"./DragAndDrop-TdlUtNTo.js";import"./inertValue-BjhVwWC7.js";import"./useListState-BIZ9dW-l.js";import"./useFieldComponent-DGEmXGQh.js";import"./react-children-utilities-C8dGDy-T.js";import"./useMakeFocusable-CCDaBvVW.js";import"./Form-D5uPTAwc.js";import"./intlStrings-ZMTSFH_M.js";import"./useFormValidation-DR7MCNfC.js";import"./useFormReset-CmjicI53.js";import"./Label.module-CUYTf9Jc.js";import"./FieldDescription-M_rJr44b.js";import"./Text-C9f0aLW8.js";import"./browser-D-RoGxAl.js";import"./EmulatedBoldText-C04JDKuJ.js";import"./CountryOptions-DTIU5Hob.js";import"./ContextualHelpTrigger-BZEvoIFo.js";import"./OverlayTrigger-Bw3qBN6u.js";import"./ControlledNotification-BCXQpFCZ.js";import"./Button-B4S912ZH.js";import"./LoadingSpinner-C5H0hepe.js";const Ar={...n,title:"Form Controls/Select/Edge Cases"},t={render:i=>r.jsxs(e,{...i,children:[r.jsx(a,{children:"Label"}),Array(20).fill("").map((s,o)=>r.jsxs(m,{children:["Option ",o+1]},o))]})},p={render:i=>r.jsxs(e,{...i,children:[r.jsx(a,{children:"Label"}),Array(4).fill("").map((s,o)=>r.jsxs(m,{children:["Option ",o+1," ",l.medium]},o))]})};t.parameters={...t.parameters,docs:{...t.parameters?.docs,source:{originalSource:`{
  render: props => <Select {...props}>
      <Label>Label</Label>
      {Array(20).fill("").map((value, index) => <Option key={index}>Option {index + 1}</Option>)}
    </Select>
}`,...t.parameters?.docs?.source}}};p.parameters={...p.parameters,docs:{...p.parameters?.docs,source:{originalSource:`{
  render: props => <Select {...props}>
      <Label>Label</Label>
      {Array(4).fill("").map((value, index) => <Option key={index}>
            Option {index + 1} {dummyText.medium}
          </Option>)}
    </Select>
}`,...p.parameters?.docs?.source}}};const Tr=["ManyOptions","LongTexts"];export{p as LongTexts,t as ManyOptions,Tr as __namedExportsOrder,Ar as default};
