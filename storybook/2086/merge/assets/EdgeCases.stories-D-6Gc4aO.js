import{j as r}from"./iframe-CMcq8v1f.js";import{O as m}from"./Option-D2BQAYIo.js";import{S as e}from"./Select-D5GSoOES.js";import{L as a}from"./Label-BIfXBQMD.js";import n from"./Default.stories-0_UAYcSH.js";import{d as l}from"./dummyText-CX_I_Wpl.js";import"./index-nuYtCEEu.js";import"./Popover-B0yZiuHu.js";import"./clsx-B-dksMZM.js";import"./useOverlayController-B6qJG6eL.js";import"./context-haW4s5UJ.js";import"./flowComponent-DAEI1NYm.js";import"./index-UsNUevoW.js";import"./index-Tcjlyiep.js";import"./useStatic-CKvWQ5ch.js";import"./OverlayContextProvider-CrE8gLZT.js";import"./Dialog-Drh022ms.js";import"./Button-qWTNe4li.js";import"./utils-B4_KO4f3.js";import"./ProgressBar-DGR0UqD3.js";import"./Label-CtMkNZ5K.js";import"./Hidden-BSe2pCrZ.js";import"./filterDOMProps-i7L6S0l1.js";import"./useLabel-MLAtSIJy.js";import"./context-Bckjq63R.js";import"./NumberFormatter-DNR9MAW-.js";import"./LiveAnnouncer-Cy654hVN.js";import"./usePress-Bqdsvk60.js";import"./useFocus-B0Qlm3zv.js";import"./useFocusRing-CoJ5esee.js";import"./useFocusable-DlaONHPB.js";import"./RSPContexts-DoqEYCaI.js";import"./OverlayArrow-Czusrgg9.js";import"./useControlledState-C8UmWEhe.js";import"./Collection-lzDPGY_z.js";import"./CollectionBuilder-DClya-CG.js";import"./SelectionIndicator-npitMQ6K.js";import"./Separator-B5umkblU.js";import"./Text-CkmSClwy.js";import"./SelectionManager-CYX1bfTV.js";import"./useEvent-DWTRHc2N.js";import"./useCollator-DTERHYIY.js";import"./FocusScope-BZyWBR-T.js";import"./useLocalizedStringFormatter-BoDSEWEG.js";import"./VisuallyHidden-Dy6kQkYD.js";import"./ClearPropsContextView-Cy6OLcLC.js";import"./ClearPropsContext-CU9ecYMv.js";import"./IconWarning-pzLTBmMV.js";import"./DragAndDrop-DqcFh9lQ.js";import"./inertValue-HhDqmaW6.js";import"./useListState-BE5Utr86.js";import"./useFieldComponent-B7IsP0qp.js";import"./react-children-utilities-CDk9z-7u.js";import"./useMakeFocusable-B2ENdPIj.js";import"./Form-BA9ATDJW.js";import"./intlStrings-ZMTSFH_M.js";import"./useFormValidation-C01Q1Aoq.js";import"./useFormReset-DUTu2q8R.js";import"./Label.module-CUYTf9Jc.js";import"./FieldDescription-CUyjOtFz.js";import"./Text-DOkc_YZA.js";import"./browser-BnbqEoZX.js";import"./EmulatedBoldText-DAg28Pal.js";import"./CountryOptions-DEqkrtjJ.js";import"./ContextualHelpTrigger-B7gMTMIy.js";import"./OverlayTrigger-CxCtI9-h.js";import"./ControlledNotification-B4XPi9m7.js";import"./Button-CRhbM7FI.js";import"./LoadingSpinner-DgAvzAIP.js";const Tr={...n,title:"Form Controls/Select/Edge Cases"},t={render:i=>r.jsxs(e,{...i,children:[r.jsx(a,{children:"Label"}),Array(20).fill("").map((s,o)=>r.jsxs(m,{children:["Option ",o+1]},o))]})},p={render:i=>r.jsxs(e,{...i,children:[r.jsx(a,{children:"Label"}),Array(4).fill("").map((s,o)=>r.jsxs(m,{children:["Option ",o+1," ",l.medium]},o))]})};t.parameters={...t.parameters,docs:{...t.parameters?.docs,source:{originalSource:`{
  render: props => <Select {...props}>
      <Label>Label</Label>
      {Array(20).fill("").map((value, index) => <Option key={index}>Option {index + 1}</Option>)}
    </Select>
}`,...t.parameters?.docs?.source}}};p.parameters={...p.parameters,docs:{...p.parameters?.docs,source:{originalSource:`{
  render: props => <Select {...props}>
      <Label>Label</Label>
      {Array(4).fill("").map((value, index) => <Option key={index}>
            Option {index + 1} {dummyText.medium}
          </Option>)}
    </Select>
}`,...p.parameters?.docs?.source}}};const Er=["ManyOptions","LongTexts"];export{p as LongTexts,t as ManyOptions,Er as __namedExportsOrder,Tr as default};
