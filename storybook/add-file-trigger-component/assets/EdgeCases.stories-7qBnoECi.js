import{S as a,O as l}from"./Option-BKMjPjvj.js";import{R as t}from"./index-Cs7sjTYM.js";import{L as n}from"./Label-3TwhOvTI.js";import s from"./Default.stories-Dd6YTgju.js";import"./PropsContextProvider-DXo7lD_U.js";import"./index-j_f0pOtZ.js";import"./clsx-B-dksMZM.js";import"./FormField.module-CjJo_njJ.js";import"./IconApp-CKfGrMYq.js";import"./_commonjsHelpers-BosuxZz1.js";import"./flowComponent-Bg40pdZw.js";import"./index-Cf-03bMR.js";import"./IconWarning-DoqSRZU1.js";import"./Form-VOSHarlK.js";import"./useFocusRing-Cx5sZpw_.js";import"./useLabel-BA8WH6BO.js";import"./utils-GKDLJ2vO.js";import"./Text-DP1y2Dk0.js";import"./filterDOMProps-CeZl_uWj.js";import"./Popover-ClYLtDjh.js";import"./OverlayTrigger-CuDFj76r.js";import"./RSPContexts-BseA8goh.js";import"./OverlayArrow-HdKIwz3h.js";import"./ProgressBar-CpzbYRLN.js";import"./Label-qcDNDzhS.js";import"./Hidden-C2kgQquV.js";import"./useLocalizedStringFormatter-TZkCr3Qr.js";import"./NumberFormatter-DNR9MAW-.js";import"./useControlledState-B7K2eYzO.js";import"./PressResponder-Bhz1UQIJ.js";import"./usePress-IYK5Xs6I.js";import"./FocusScope-Dq1DdGw4.js";import"./getScrollParent-CcmJp979.js";import"./VisuallyHidden-sPIK_yL0.js";import"./context-BnMUo41h.js";import"./useSelector-DiJHxpbu.js";import"./ListBox-4OZGf8Ft.js";import"./Collection-BdcdgcY_.js";import"./CollectionBuilder-B4BE-ZOx.js";import"./DragAndDrop-Bssnb-st.js";import"./Header-BWLNclCp.js";import"./Separator-Cpniaoiw.js";import"./useMenuTrigger-Bu3ZT3TV.js";import"./SelectionManager-DqE4UxeO.js";import"./useEvent-BjqsPY1I.js";import"./useCollator-tPR4bsZ_.js";import"./useListState-oXDegA_A.js";import"./Button-CB57Q0FS.js";import"./LiveAnnouncer-CeCcBDbP.js";import"./useFocusable-BZB42ELj.js";import"./useSingleSelectListState-D50aPRB7.js";import"./useFormReset-BmVKDtZT.js";import"./FieldDescription-DFuVvWqw.js";import"./Text-DZmFXo-e.js";import"./EmulatedBoldText-Dmze-Iwg.js";import"./Wrap-DQq6jo70.js";const ur={...s,title:"Form Controls/Select/Edge Cases"},r={render:e=>t.createElement(a,{...e},t.createElement(n,null,"Label"),Array(20).fill("").map((c,o)=>t.createElement(l,{key:o},"Option ",o+1)))};var m,p,i;r.parameters={...r.parameters,docs:{...(m=r.parameters)==null?void 0:m.docs,source:{originalSource:`{
  render: props => <Select {...props}>
      <Label>Label</Label>
      {Array(20).fill("").map((value, index) => <Option key={index}>Option {index + 1}</Option>)}
    </Select>
}`,...(i=(p=r.parameters)==null?void 0:p.docs)==null?void 0:i.source}}};const Or=["Default"];export{r as Default,Or as __namedExportsOrder,ur as default};
