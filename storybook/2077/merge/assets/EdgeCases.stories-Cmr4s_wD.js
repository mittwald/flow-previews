import{j as r}from"./iframe-BYlM8TfH.js";import{O as m}from"./Option-SLnJ--wA.js";import{S as e}from"./Select-BXanEs5J.js";import{L as a}from"./Label-CObvhZe8.js";import n from"./Default.stories-fk9b0Ds4.js";import{d as l}from"./dummyText-CX_I_Wpl.js";import"./index-nuYtCEEu.js";import"./Popover-D-aIXqDf.js";import"./clsx-B-dksMZM.js";import"./context-BILGmIqx.js";import"./flowComponent-CJQUzeBk.js";import"./index-Z9ghxMfX.js";import"./index-BpRuSIpR.js";import"./useStatic-6sdTMqO6.js";import"./OverlayContextProvider-Dz9UAd6s.js";import"./Dialog-BSP5EDkY.js";import"./Button-BmIa1mS-.js";import"./utils-BDqIfUE7.js";import"./ProgressBar--do5EHZn.js";import"./Label-COiWxsLa.js";import"./Hidden-CSqzjE-Z.js";import"./filterDOMProps-i7L6S0l1.js";import"./useLabel-IFSjtkUu.js";import"./context-BxRqKeiD.js";import"./NumberFormatter-DNR9MAW-.js";import"./LiveAnnouncer-Cy654hVN.js";import"./usePress-kOJVCjd_.js";import"./useFocus-B9vfYs8K.js";import"./useFocusRing-BaqqhOKG.js";import"./useFocusable-SxOERRg1.js";import"./RSPContexts-BeeOgZFj.js";import"./OverlayArrow-Dcf6I1B8.js";import"./useControlledState-Bs4hSWnz.js";import"./Collection-C6Fc_Z_x.js";import"./CollectionBuilder-CXjS8Zh0.js";import"./SelectionIndicator-BFnOXggJ.js";import"./Separator-DKnWRjMi.js";import"./Text-Dc8La0ek.js";import"./SelectionManager-Bmb-1_mZ.js";import"./useEvent-DHF942Kq.js";import"./useCollator-BcPpPzi9.js";import"./FocusScope-ChlmKh1V.js";import"./useLocalizedStringFormatter-DNjkRVig.js";import"./VisuallyHidden-D5yM91eE.js";import"./ClearPropsContextView-BJe-Torm.js";import"./ClearPropsContext-BpBo361K.js";import"./IconWarning-WQ4wo7kP.js";import"./DragAndDrop-Yhamlz7A.js";import"./inertValue-Dft80CZj.js";import"./useListState-BPcEkfH9.js";import"./useFieldComponent-BoJq1S9B.js";import"./react-children-utilities-DxnuAJ4K.js";import"./useMakeFocusable-BmfPg07G.js";import"./Form-CqmUY9BV.js";import"./intlStrings-ZMTSFH_M.js";import"./useFormValidation-wBqhYJyj.js";import"./useFormReset-Bl4vFhC1.js";import"./Label.module-CUYTf9Jc.js";import"./FieldDescription-DcQaW8xO.js";import"./Text-ZBSxG77c.js";import"./browser-D2sPcOVM.js";import"./EmulatedBoldText-bM5QDT6k.js";import"./CountryOptions-Cs_lVIox.js";import"./ContextualHelpTrigger-bIxyyS-7.js";import"./OverlayTrigger-B-qRJ8Xp.js";import"./ControlledNotification-Dl6zeRdw.js";import"./Button-DrjwoUCb.js";import"./LoadingSpinner-CqJPIXvI.js";const Ar={...n,title:"Form Controls/Select/Edge Cases"},t={render:i=>r.jsxs(e,{...i,children:[r.jsx(a,{children:"Label"}),Array(20).fill("").map((s,o)=>r.jsxs(m,{children:["Option ",o+1]},o))]})},p={render:i=>r.jsxs(e,{...i,children:[r.jsx(a,{children:"Label"}),Array(4).fill("").map((s,o)=>r.jsxs(m,{children:["Option ",o+1," ",l.medium]},o))]})};t.parameters={...t.parameters,docs:{...t.parameters?.docs,source:{originalSource:`{
  render: props => <Select {...props}>
      <Label>Label</Label>
      {Array(20).fill("").map((value, index) => <Option key={index}>Option {index + 1}</Option>)}
    </Select>
}`,...t.parameters?.docs?.source}}};p.parameters={...p.parameters,docs:{...p.parameters?.docs,source:{originalSource:`{
  render: props => <Select {...props}>
      <Label>Label</Label>
      {Array(4).fill("").map((value, index) => <Option key={index}>
            Option {index + 1} {dummyText.medium}
          </Option>)}
    </Select>
}`,...p.parameters?.docs?.source}}};const Tr=["ManyOptions","LongTexts"];export{p as LongTexts,t as ManyOptions,Tr as __namedExportsOrder,Ar as default};
