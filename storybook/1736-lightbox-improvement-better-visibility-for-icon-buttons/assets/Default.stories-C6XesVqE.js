import{j as t,r as f}from"./iframe-DJR6bG_N.js";import{A as i}from"./Autocomplete-Dk0tLz46.js";import{L as u}from"./Label-43dyzUgI.js";import{S as x}from"./SearchField-AVhjtAWF.js";import{O as m}from"./Option-_QioazVa.js";import"./PropsContextProvider-BL9cdq29.js";import"./mergeRefs-Hpx63azc.js";import"./index-C22qm2g8.js";import"./clsx-B-dksMZM.js";import"./DialogTriggerView-DkospgpI.js";import"./context-tBw8Lqjb.js";import"./useStatic-CIf-dq2E.js";import"./Dialog-B2WyxH4W.js";import"./Button-C47dkwdH.js";import"./utils-DRP6LXVD.js";import"./ProgressBar-B9rixrKR.js";import"./Label-sZvCZMuk.js";import"./Hidden-BHSOAXCo.js";import"./filterDOMProps-CghfNOdR.js";import"./useLabel-DhfP4m7A.js";import"./context-DgBdWYay.js";import"./NumberFormatter-DNR9MAW-.js";import"./LiveAnnouncer-CeCcBDbP.js";import"./usePress-CnK8r-az.js";import"./useFocus-BcpzqQNe.js";import"./useFocusRing-CfOOnzfL.js";import"./useFocusable-BEA6ccjd.js";import"./RSPContexts-DiuHitS7.js";import"./OverlayArrow-Dty9UTNu.js";import"./useControlledState-CYpB0MkV.js";import"./Collection-Bn5uLIdX.js";import"./CollectionBuilder-Kei65M9q.js";import"./Separator-43LoEa0E.js";import"./Text-BqN-_O45.js";import"./Group-CE0iASVZ.js";import"./SearchField-CR0mUJzd.js";import"./FieldError-Cb0gzYqD.js";import"./Form-BkELhqZm.js";import"./useLocalizedStringFormatter-DqMJYvZV.js";import"./useTextField-CXWfURMQ.js";import"./useFormReset-DJO_Tyel.js";import"./TextField-CZNDqobz.js";import"./useEvent-SSoNVoxa.js";import"./SelectionManager-DV-un0OH.js";import"./useCollator-CQl6CZ5b.js";import"./FocusScope-nXLL4j6O.js";import"./VisuallyHidden-Capsm3hZ.js";import"./Text-CxYW3yHX.js";import"./browser-B_AF4VAW.js";import"./EmulatedBoldText-DOjRM7Xy.js";import"./useFilter-B90Q6hzn.js";import"./FormField.module-B9AzUSUD.js";import"./FieldError-eo7y5sCy.js";import"./IconWarning-TBIhG4gU.js";import"./Button-BcHxSHOm.js";import"./LoadingSpinner-BP8XYJb-.js";import"./ReactAriaControlledValueFix-XAEHa8Nn.js";import"./Popover-DLNqBLfZ.js";import"./ListBox-BrIuWvI-.js";import"./DragAndDrop-BAdLEwtj.js";import"./inertValue-BfYXCTr1.js";import"./useListState-8Izct9VX.js";const Ct={title:"Form Controls/Autocomplete",component:i,parameters:{controls:{exclude:["className"]}},render:()=>{const h=O=>["example.com","test.org","email.net","mail.com"].map(g=>{const r=`${O.split("@")[0]}@${g}`;return t.jsx(m,{value:r,textValue:r,children:r},r)}),[p,j]=f.useState("");return t.jsxs(i,{children:[t.jsx(x,{onChange:j,value:p,children:t.jsx(u,{children:"Test"})}),h(p)]})}},o={render:()=>t.jsxs(i,{children:[t.jsx(x,{children:t.jsx(u,{children:"Test"})}),t.jsx(m,{value:"example.com",children:"example.com"}),t.jsx(m,{value:"domain.de",children:"domain.de"}),t.jsx(m,{value:"test.org",children:"test.org"})]})},e={};var s,a,n;o.parameters={...o.parameters,docs:{...(s=o.parameters)==null?void 0:s.docs,source:{originalSource:`{
  render: () => <Autocomplete>
      <SearchField>
        <Label>Test</Label>
      </SearchField>
      <Option value="example.com">example.com</Option>
      <Option value="domain.de">domain.de</Option>
      <Option value="test.org">test.org</Option>
    </Autocomplete>
}`,...(n=(a=o.parameters)==null?void 0:a.docs)==null?void 0:n.source}}};var l,c,d;e.parameters={...e.parameters,docs:{...(l=e.parameters)==null?void 0:l.docs,source:{originalSource:"{}",...(d=(c=e.parameters)==null?void 0:c.docs)==null?void 0:d.source}}};const Dt=["FixedOptions","Default"];export{e as Default,o as FixedOptions,Dt as __namedExportsOrder,Ct as default};
