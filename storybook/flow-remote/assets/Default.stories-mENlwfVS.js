import{f as h,P as A,O as u}from"./flowComponent-CaEd1ouJ.js";import{R as e}from"./index-BbMBc-iG.js";import{f as r,F}from"./FieldError-Bxt0_Hqg.js";import{P as L,C as B}from"./PropsContextProvider-BgoMLKZk.js";import{c as $}from"./clsx-B-dksMZM.js";import{$ as D,a as P}from"./RadioGroup-C57r1f3b.js";import"./IconApp-B_zPpa1A.js";import{z as _}from"./IconWarning-CceziLlX.js";import{L as f}from"./Label-D6uleru1.js";import{a as y}from"./chunk-D5ZWXAHU-DlerbUHg.js";import"./index-U7Evrs-N.js";import"./_commonjsHelpers-Cpj98o6Y.js";import"./index-CPTjWdH1.js";import"./FieldError-0S5lF-We.js";import"./useFocusRing-DA2rHHrb.js";import"./utils-D4Vol65q.js";import"./Text-oWh285ma.js";import"./filterDOMProps-BSfnXAP7.js";import"./Form-4lWAVKAg.js";import"./useLabel-C5NcpKQ2.js";import"./Label-BybFgH_Q.js";import"./Hidden-BN0YEbzJ.js";import"./useControlledState-CMnoB41k.js";import"./FocusScope-TaiHum7E.js";import"./useLocalizedStringFormatter-DYdTqA_9.js";import"./useFormReset-BIr5_auz.js";import"./useFocusable-BA3lYSOI.js";import"./usePress-DotMbixf.js";import"./VisuallyHidden-CAwLSgYE.js";import"./react-children-utilities-BBO5HXrA.js";import"./v4-CtRu48qb.js";const M="flow--segmented-control",V="flow--segmented-control--segments",q="flow--segmented-control--segmented-control-container",O="flow--segmented-control--segment",o={segmentedControl:M,segments:V,segmentedControlContainer:q,"container-breakpoint-size-xs":"flow--segmented-control--container-breakpoint-size-xs",segment:O,"container-breakpoint-size-s":"flow--segmented-control--container-breakpoint-size-s","container-breakpoint-size-m":"flow--segmented-control--container-breakpoint-size-m","container-breakpoint-size-l":"flow--segmented-control--container-breakpoint-size-l","container-breakpoint-size-xl":"flow--segmented-control--container-breakpoint-size-xl"},W=t=>`container-breakpoint-size-${t}`,a=h("SegmentedControl",t=>{const{children:i,className:c,containerBreakpointSize:d="m",ref:p,...g}=t,I=$(r.formField,o.segmentedControlContainer,c,o[W(d)]),R={Label:{className:r.label},FieldDescription:{className:r.fieldDescription,tunnelId:"fieldDescription"},FieldError:{className:r.customFieldError,tunnelId:"fieldError"},Segment:{tunnelId:"segments",className:o.segment}};return e.createElement(D,{...g,className:I,ref:p},e.createElement(A,null,e.createElement(L,{dependencies:["segment"],props:R,mergeInParentContext:!0},i,e.createElement("div",{className:o.segmentedControl},e.createElement("div",{className:o.segments},e.createElement(u,{id:"segments"}))),e.createElement(u,{id:"fieldDescription"}),e.createElement(u,{id:"fieldError"}))),e.createElement(F,{className:r.fieldError}))});a.__docgenInfo={description:"@flr-generate all",methods:[],displayName:"SegmentedControl"};const j="flow--segmented-control--segment",G="flow--segmented-control--segment--checkmark",E={segment:j,checkmark:G},n=h("Segment",t=>{const{children:i,className:c,ref:d,...p}=t,g=$(E.segment,c);return e.createElement(B,null,e.createElement(P,{...p,className:g,ref:d},i,e.createElement(_,{className:E.checkmark})))});n.__docgenInfo={description:"@flr-generate all",methods:[],displayName:"Segment"};const Ne={title:"Form Controls/SegmentedControl",component:a,args:{onChange:y("onChange")},parameters:{controls:{exclude:["onChange"]}},render:t=>e.createElement(a,{...t,defaultValue:"admin"},e.createElement(f,null,"Role"),e.createElement(n,{value:"admin"},"Admin"),e.createElement(n,{value:"member"},"Member"),e.createElement(n,{value:"accountant"},"Accountant"))},m={},s={render:t=>e.createElement(a,{...t,defaultValue:"admin",containerBreakpointSize:"xs"},e.createElement(f,null,"Role"),e.createElement(n,{value:"admin"},"Admin"),e.createElement(n,{value:"member"},"Member")),parameters:{viewport:{defaultViewport:"mobile1"}}},l={render:t=>e.createElement(a,{...t,isInvalid:!0,isRequired:!0},e.createElement(f,null,"Role"),e.createElement(n,{value:"admin"},"Admin"),e.createElement(n,{value:"member"},"Member"),e.createElement(n,{value:"accountant"},"Accountant"),e.createElement(F,null,"Select a role to continue"))};var C,b,S;m.parameters={...m.parameters,docs:{...(C=m.parameters)==null?void 0:C.docs,source:{originalSource:"{}",...(S=(b=m.parameters)==null?void 0:b.docs)==null?void 0:S.source}}};var k,v,N;s.parameters={...s.parameters,docs:{...(k=s.parameters)==null?void 0:k.docs,source:{originalSource:`{
  render: props => <SegmentedControl {...props} defaultValue="admin" containerBreakpointSize="xs">
      <Label>Role</Label>
      <Segment value="admin">Admin</Segment>
      <Segment value="member">Member</Segment>
    </SegmentedControl>,
  parameters: {
    viewport: {
      defaultViewport: "mobile1"
    }
  }
}`,...(N=(v=s.parameters)==null?void 0:v.docs)==null?void 0:N.source}}};var w,x,z;l.parameters={...l.parameters,docs:{...(w=l.parameters)==null?void 0:w.docs,source:{originalSource:`{
  render: props => <SegmentedControl {...props} isInvalid isRequired>
      <Label>Role</Label>
      <Segment value="admin">Admin</Segment>
      <Segment value="member">Member</Segment>
      <Segment value="accountant">Accountant</Segment>
      <FieldError>Select a role to continue</FieldError>
    </SegmentedControl>
}`,...(z=(x=l.parameters)==null?void 0:x.docs)==null?void 0:z.source}}};const we=["Default","CustomContainerBreakpoint","WithFieldError"];export{s as CustomContainerBreakpoint,m as Default,l as WithFieldError,we as __namedExportsOrder,Ne as default};
