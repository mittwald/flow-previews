import{B as e}from"./Badge-CNte5E1Q.js";import a from"./Default.stories-3IcHNlqw.js";import{R as t}from"./index-B-o1Wr-g.js";import{d as s}from"./dummyText-CX_I_Wpl.js";import{T as n}from"./Text-CemaETXH.js";import{L as d}from"./Label-BFoBZBqy.js";import"./clsx-B-dksMZM.js";import"./PropsContextProvider-BHq6Fnml.js";import"./index-ynQ6n1pc.js";import"./flowComponent-SXQnFwcy.js";import"./index-DolzVqEf.js";import"./_commonjsHelpers-Cpj98o6Y.js";import"./Button-D-75P3dD.js";import"./IconApp--rto3B0B.js";import"./IconWarning--ZE28x2f.js";import"./Wrap-DQq6jo70.js";import"./LoadingSpinner-CHM1vGyh.js";import"./useLocalizedStringFormatter-BQr1rA-c.js";import"./Button-DpaYcQnV.js";import"./utils-CCebJm36.js";import"./ProgressBar-C7LzY9et.js";import"./Label-BFvRcNt5.js";import"./Hidden-CRdWNeH8.js";import"./filterDOMProps-CeZl_uWj.js";import"./useLabel-DrlXsFf-.js";import"./NumberFormatter-DNR9MAW-.js";import"./LiveAnnouncer-CeCcBDbP.js";import"./useFocusable-CjESOWAx.js";import"./useFocusRing-CTDVvBmm.js";import"./usePress-C3EQNDer.js";import"./ContextMenuTrigger-D3A-lKs0.js";import"./ContextMenu.module-37Y7DEq9.js";import"./Popover-DWEIJP_k.js";import"./OverlayTrigger-DiRcFnzf.js";import"./RSPContexts-BT50PPhj.js";import"./OverlayArrow-BMY-498z.js";import"./useControlledState-BgxdDqm0.js";import"./Collection-DyVww_gO.js";import"./CollectionBuilder-CRjClK3P.js";import"./Header-Bk-D7IzI.js";import"./Separator-BAc0WD8W.js";import"./Text-CByKVUtS.js";import"./SelectionManager-Dnw_ATjh.js";import"./FocusScope-Deam_7e8.js";import"./useEvent-CmPtILZD.js";import"./useCollator-DiB6vpBo.js";import"./VisuallyHidden-lWpahT0S.js";import"./context-HWij4CCA.js";import"./useSelector-iQqgW7gO.js";import"./Action-lrZohdE4.js";import"./getActionGroupSlot-Ctir2FTR.js";import"./dynamic-DKDa4OpU.js";import"./deepHas-qlU7dqTi.js";import"./react-children-utilities-D14ImiYi.js";import"./Avatar-De9fjr11.js";import"./storyBackgrounds-GFSAi-dI.js";import"./EmulatedBoldText-1x_0FOGF.js";const ur={...a,title:"Status/Badge/Edge Cases"},r={render:i=>t.createElement(e,{...i},t.createElement(d,null,"Scope"),t.createElement(n,null,s.long))};var o,m,p;r.parameters={...r.parameters,docs:{...(o=r.parameters)==null?void 0:o.docs,source:{originalSource:`{
  render: props => <Badge {...props}>
      <Label>Scope</Label>
      <Text>{dummyText.long}</Text>
    </Badge>
}`,...(p=(m=r.parameters)==null?void 0:m.docs)==null?void 0:p.source}}};const xr=["LongText"];export{r as LongText,xr as __namedExportsOrder,ur as default};
