import{$ as f}from"./usePress-CipJ8IEr.js";import{a as i}from"./index-D1Z7wIYD.js";import{b as d}from"./utils-_0I8Kdxf.js";import{$ as b}from"./useFocusable-Di1f8vLw.js";import{R as c,r as t}from"./index-BwDkhjyp.js";const x=c.forwardRef(({children:o,...a},r)=>{let s=t.useRef(!1),e=t.useContext(f);r=d(r||(e==null?void 0:e.ref));let n=i(e||{},{...a,ref:r,register(){s.current=!0,e&&e.register()}});return b(e,r),t.useEffect(()=>{s.current||(console.warn("A PressResponder was rendered without a pressable child. Either call the usePress hook, or wrap your DOM node with <Pressable> component."),s.current=!0)},[]),c.createElement(f.Provider,{value:n},o)});function h({children:o}){let a=t.useMemo(()=>({register:()=>{}}),[]);return c.createElement(f.Provider,{value:a},o)}export{x as $,h as a};
