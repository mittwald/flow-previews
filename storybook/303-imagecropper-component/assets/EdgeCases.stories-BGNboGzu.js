import{R as t}from"./index-BwDkhjyp.js";import{a as g,C as d,M as o}from"./ContextMenuTrigger-BuF8irH6.js";import{B as x}from"./Button-CGYujOOx.js";import M from"./Default.stories-CpwRF9dx.js";import{d as i}from"./dummyText-CX_I_Wpl.js";import"./_commonjsHelpers-BosuxZz1.js";import"./ContextMenu.module-CAjBRoKS.js";import"./flowComponent-pf1ZT_RA.js";import"./PropsContextProvider-DR_AoDrQ.js";import"./index-D1Z7wIYD.js";import"./clsx-B-dksMZM.js";import"./index-B8XB3FuZ.js";import"./PopoverTrigger-DfYVWCk8.js";import"./OverlayTrigger-CcMw9uE5.js";import"./utils-_0I8Kdxf.js";import"./RSPContexts-Bc9pl35m.js";import"./OverlayArrow-CTAo9QmE.js";import"./useFocusable-Di1f8vLw.js";import"./number-nHrFdSb-.js";import"./useLocalizedStringFormatter-BgjAeG81.js";import"./useControlledState-C0C-dzuH.js";import"./filterDOMProps-CeZl_uWj.js";import"./PressResponder-CS6YBkA6.js";import"./usePress-CipJ8IEr.js";import"./FocusScope-h9apr_hQ.js";import"./getScrollParent-CcmJp979.js";import"./useLabels-h5MY4Xo1.js";import"./VisuallyHidden-CctDujdB.js";import"./context-ZkthLU-2.js";import"./useSelector-Pyc-engy.js";import"./Action-DJglBR0x.js";import"./Text-OHQxmlAI.js";import"./EmulatedBoldText-B1t6hs5E.js";import"./Wrap-DQq6jo70.js";import"./Text-YaHrFsZr.js";import"./dynamic-DKDa4OpU.js";import"./IconApp-C-B10zNi.js";import"./IconWarning-D08KcEGW.js";import"./deepFindOfType-CmKNZ8si.js";import"./react-children-utilities-CseWD4BL.js";import"./Collection-BUjDbYEY.js";import"./Header-CClMDSoE.js";import"./Separator-DAfHJ8px.js";import"./useMenuTrigger-I7P_BxpU.js";import"./SelectionManager-C8SlKI3Z.js";import"./useEvent-BSX0jSmh.js";import"./useDescription-CvuWAMaA.js";import"./LoadingSpinner-BjsJqdEZ.js";import"./Button-j9P20aTv.js";import"./Separator-rF9M-VlY.js";import"./Heading-CYnWOiGh.js";import"./Section-DhcKGvwf.js";import"./Activity-DsHdYeGi.js";const Tt={...M,title:"Actions/ContextMenu/Edge Cases"},e={render:m=>t.createElement(g,null,t.createElement(x,null,"Trigger"),t.createElement(d,{...m},t.createElement(o,null,i.medium),t.createElement(o,null,i.medium)))},r={render:m=>t.createElement(g,null,t.createElement(x,null,"Trigger"),t.createElement(d,{...m},Array(20).fill("").map((T,n)=>t.createElement(o,{key:n},"Item ",n+1))))};var p,a,u;e.parameters={...e.parameters,docs:{...(p=e.parameters)==null?void 0:p.docs,source:{originalSource:`{
  render: props => <ContextMenuTrigger>
      <Button>Trigger</Button>
      <ContextMenu {...props}>
        <MenuItem>{dummyText.medium}</MenuItem>
        <MenuItem>{dummyText.medium}</MenuItem>
      </ContextMenu>
    </ContextMenuTrigger>
}`,...(u=(a=e.parameters)==null?void 0:a.docs)==null?void 0:u.source}}};var s,l,c;r.parameters={...r.parameters,docs:{...(s=r.parameters)==null?void 0:s.docs,source:{originalSource:`{
  render: props => <ContextMenuTrigger>
      <Button>Trigger</Button>
      <ContextMenu {...props}>
        {Array(20).fill("").map((value, index) => <MenuItem key={index}>Item {index + 1}</MenuItem>)}
      </ContextMenu>
    </ContextMenuTrigger>
}`,...(c=(l=r.parameters)==null?void 0:l.docs)==null?void 0:c.source}}};const Ct=["LongTexts","LongList"];export{r as LongList,e as LongTexts,Ct as __namedExportsOrder,Tt as default};
