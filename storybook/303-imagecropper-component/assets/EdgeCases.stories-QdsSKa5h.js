import{S as a,O as l}from"./Option-ChwWUmEE.js";import{R as t}from"./index-BwDkhjyp.js";import{L as n}from"./Label-DqyDhkXf.js";import s from"./Default.stories-Cdtx6rNQ.js";import"./PropsContextProvider-DR_AoDrQ.js";import"./index-D1Z7wIYD.js";import"./clsx-B-dksMZM.js";import"./FormField.module-DmKGlvAf.js";import"./IconApp-C-B10zNi.js";import"./_commonjsHelpers-BosuxZz1.js";import"./flowComponent-pf1ZT_RA.js";import"./index-B8XB3FuZ.js";import"./IconWarning-D08KcEGW.js";import"./Form-RrZ3zN_v.js";import"./useFocusable-Di1f8vLw.js";import"./utils-_0I8Kdxf.js";import"./useLabel-Dy08JOVD.js";import"./useLabels-h5MY4Xo1.js";import"./Text-YaHrFsZr.js";import"./PopoverTrigger-DfYVWCk8.js";import"./OverlayTrigger-CcMw9uE5.js";import"./RSPContexts-Bc9pl35m.js";import"./OverlayArrow-CTAo9QmE.js";import"./number-nHrFdSb-.js";import"./useLocalizedStringFormatter-BgjAeG81.js";import"./useControlledState-C0C-dzuH.js";import"./filterDOMProps-CeZl_uWj.js";import"./PressResponder-CS6YBkA6.js";import"./usePress-CipJ8IEr.js";import"./FocusScope-h9apr_hQ.js";import"./getScrollParent-CcmJp979.js";import"./VisuallyHidden-CctDujdB.js";import"./context-ZkthLU-2.js";import"./useSelector-Pyc-engy.js";import"./Button-j9P20aTv.js";import"./Collection-BUjDbYEY.js";import"./intlStrings-ZMTSFH_M.js";import"./Label-BbJlieEf.js";import"./useSingleSelectListState-Ca2oXnF-.js";import"./SelectionManager-C8SlKI3Z.js";import"./useEvent-BSX0jSmh.js";import"./useDescription-CvuWAMaA.js";import"./useMenuTrigger-I7P_BxpU.js";import"./useFormReset-CqSSSrN8.js";import"./useDragAndDrop-1zf7j-vC.js";import"./Header-CClMDSoE.js";import"./Separator-DAfHJ8px.js";import"./FieldDescription-DDIKcJ3T.js";import"./Text-OHQxmlAI.js";import"./EmulatedBoldText-B1t6hs5E.js";import"./Wrap-DQq6jo70.js";const nr={...s,title:"Form Controls/Select/Edge Cases"},r={render:e=>t.createElement(a,{...e},t.createElement(n,null,"Label"),Array(20).fill("").map((c,o)=>t.createElement(l,{key:o},"Option ",o+1)))};var m,p,i;r.parameters={...r.parameters,docs:{...(m=r.parameters)==null?void 0:m.docs,source:{originalSource:`{
  render: props => <Select {...props}>
      <Label>Label</Label>
      {Array(20).fill("").map((value, index) => <Option key={index}>Option {index + 1}</Option>)}
    </Select>
}`,...(i=(p=r.parameters)==null?void 0:p.docs)==null?void 0:i.source}}};const sr=["Default"];export{r as Default,sr as __namedExportsOrder,nr as default};
