import{S as a,O as l}from"./Option-DiEoxryq.js";import{R as t}from"./index-uCp2LrAq.js";import{L as n}from"./Label-BizVKcMA.js";import s from"./Default.stories-DssaeIZ3.js";import"./PropsContextProvider-DJl9unei.js";import"./index-CqLFpzzG.js";import"./clsx-B-dksMZM.js";import"./FormField.module-Baz52Xvq.js";import"./IconApp-08dtyhav.js";import"./_commonjsHelpers-BosuxZz1.js";import"./flowComponent-d9koHm8X.js";import"./index-BOkhicXD.js";import"./IconWarning--xZ87BQk.js";import"./Form-CUMXIWEV.js";import"./useFocusable-DIY1EfD0.js";import"./utils-CRveUs4Q.js";import"./useLabel-C-G_TB0Q.js";import"./useLabels-CrvI0Xse.js";import"./Text-BxG67LRB.js";import"./PopoverTrigger-6KT5KTFb.js";import"./OverlayTrigger-PMv2-p4P.js";import"./RSPContexts-CJnKmcd7.js";import"./OverlayArrow-DobB3-tX.js";import"./number-nHrFdSb-.js";import"./useLocalizedStringFormatter-CPyIEVee.js";import"./useControlledState-B8AA3oOY.js";import"./filterDOMProps-CeZl_uWj.js";import"./PressResponder-CvugjgZN.js";import"./usePress-B-418flx.js";import"./FocusScope-DRFNwxZB.js";import"./getScrollParent-CcmJp979.js";import"./VisuallyHidden-BwH5wu93.js";import"./context-DGHf5otc.js";import"./useSelector-BUIORffs.js";import"./Button-B6RNnFE-.js";import"./Collection-AT6m4EFM.js";import"./intlStrings-ZMTSFH_M.js";import"./Label-B6vS7Cqe.js";import"./useSingleSelectListState-3HenLGl_.js";import"./SelectionManager-ADoBXYhu.js";import"./useEvent-YC2gB4eD.js";import"./useDescription-DkXZ8A7g.js";import"./useMenuTrigger-BGlgYenP.js";import"./useFormReset-D51lDO-b.js";import"./useDragAndDrop-Ddpx_AkE.js";import"./Header-hOCBwC_K.js";import"./Separator-D-FRkinj.js";import"./FieldDescription-Bpo0BlGa.js";import"./Text-CzfDsx2u.js";import"./EmulatedBoldText-DzNCZpDp.js";import"./Wrap-DQq6jo70.js";const nr={...s,title:"Form Controls/Select/Edge Cases"},r={render:e=>t.createElement(a,{...e},t.createElement(n,null,"Label"),Array(20).fill("").map((c,o)=>t.createElement(l,{key:o},"Option ",o+1)))};var m,p,i;r.parameters={...r.parameters,docs:{...(m=r.parameters)==null?void 0:m.docs,source:{originalSource:`{
  render: props => <Select {...props}>
      <Label>Label</Label>
      {Array(20).fill("").map((value, index) => <Option key={index}>Option {index + 1}</Option>)}
    </Select>
}`,...(i=(p=r.parameters)==null?void 0:p.docs)==null?void 0:i.source}}};const sr=["Default"];export{r as Default,sr as __namedExportsOrder,nr as default};
