import{L as d}from"./LabeledValue-Bjxbi9jA.js";import C from"./Default.stories-DKCKDzyl.js";import{d as e}from"./dummyText-CX_I_Wpl.js";import{L as u}from"./Label-LjpPhEpK.js";import{C as c}from"./Content-Bd6yOpPl.js";import{R as t}from"./index-Cs7sjTYM.js";import{C as L}from"./CopyButton-C5syxqim.js";import"./clsx-B-dksMZM.js";import"./PropsContextProvider-CE2pl7GD.js";import"./index-DKTAOSvX.js";import"./InlineCode-D5MHviMC.js";import"./Link-CANUX3pR.js";import"./flowComponent-DojWstBP.js";import"./index-Cf-03bMR.js";import"./_commonjsHelpers-BosuxZz1.js";import"./utils-BwYH5X3X.js";import"./filterDOMProps-CeZl_uWj.js";import"./usePress-1fQJjpyE.js";import"./useFocusRing-if03xCoO.js";import"./useFocusable-VJrkZIcY.js";import"./useLocalizedStringFormatter-A1OcE67O.js";import"./Label-z8V7EdU9.js";import"./Hidden-CCrdO6Wk.js";import"./Wrap-DQq6jo70.js";import"./Button-DXVDIrTY.js";import"./IconApp-BvR14QOm.js";import"./IconWarning-CKNdQ7e9.js";import"./Text-U6fXasfV.js";import"./EmulatedBoldText-Dmze-Iwg.js";import"./Text-Dd84vsje.js";import"./LoadingSpinner-VvQ8syNA.js";import"./Button-BebB4Pfr.js";import"./ProgressBar-AEPgO8_B.js";import"./useLabel-RWB8_cdz.js";import"./NumberFormatter-DNR9MAW-.js";import"./LiveAnnouncer-CeCcBDbP.js";import"./TooltipTrigger-Ba1cn70j.js";import"./OverlayArrow-DTpAwzOr.js";import"./useControlledState-B7K2eYzO.js";import"./react-children-utilities-CdZndyK3.js";import"./Action-BPHLOjQX.js";import"./context-D-nUHgHo.js";import"./useSelector-DDdDwEvg.js";import"./dynamic-DKDa4OpU.js";const nt={title:"Content/LabeledValue/Edge Cases",...C},r={render:m=>t.createElement(d,{...m},t.createElement(u,null,e.medium),t.createElement(c,null,e.short),t.createElement(L,{text:e.short}))},o={render:m=>t.createElement(d,{...m},t.createElement(u,null,e.medium),t.createElement(c,null,e.long),t.createElement(L,{text:e.long}))};var p,n,a;r.parameters={...r.parameters,docs:{...(p=r.parameters)==null?void 0:p.docs,source:{originalSource:`{
  render: props => <LabeledValue {...props}>
      <Label>{dummyText.medium}</Label>
      <Content>{dummyText.short}</Content>
      <CopyButton text={dummyText.short} />
    </LabeledValue>
}`,...(a=(n=r.parameters)==null?void 0:n.docs)==null?void 0:a.source}}};var i,l,s;o.parameters={...o.parameters,docs:{...(i=o.parameters)==null?void 0:i.docs,source:{originalSource:`{
  render: props => <LabeledValue {...props}>
      <Label>{dummyText.medium}</Label>
      <Content>{dummyText.long}</Content>
      <CopyButton text={dummyText.long} />
    </LabeledValue>
}`,...(s=(l=o.parameters)==null?void 0:l.docs)==null?void 0:s.source}}};const at=["LongLabel","LongContent"];export{o as LongContent,r as LongLabel,at as __namedExportsOrder,nt as default};
