import{R as t}from"./index-B-o1Wr-g.js";import{f as E,C as u,P as T}from"./flowComponent-Bi8R7MU8.js";import{i as h}from"./browser-B3hGj0u-.js";import{E as C}from"./EmulatedBoldText-1x_0FOGF.js";import{W as g}from"./Wrap-DQq6jo70.js";import{c as y}from"./clsx-B-dksMZM.js";import{$ as P}from"./Text-R-rrVGxo.js";const k="flow--text",w="flow--text--light",N="flow--text--dark",a={text:k,light:w,dark:N},$=E("Text",o=>{const{children:m,className:c,elementType:e="span",emulateBoldWidth:i,refProp:r,color:n,...p}=o,f=y(a.text,n&&a[n],c),s={...p,className:f},x={Link:{inline:!0}},l=t.createElement(T,{props:x},t.createElement(g,{if:i},t.createElement(C,null,m)));if(!o.slot){const d=e;return t.createElement(d,{...s,ref:r},l)}return h(typeof e=="string","'elementType' in Text component must be of type string"),t.createElement(u,null,t.createElement(P,{...s,elementType:e,ref:r},l))});$.__docgenInfo={description:"",methods:[],displayName:"Text"};export{$ as T};
