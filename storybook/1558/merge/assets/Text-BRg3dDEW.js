import{j as t}from"./iframe-oDnSRKrU.js";import{f as j,P as $}from"./PropsContextProvider-DCrF-e2x.js";import{i as b}from"./browser-B1IGKoaP.js";import{E as k}from"./EmulatedBoldText-EQ8sxSlk.js";import{c as E}from"./clsx-B-dksMZM.js";import{$ as N}from"./Text-BhCBXCIE.js";const P=o=>{const{if:n,children:r}=o;return n?r:r.props.children},C="flow--text",B="flow--text--light",W="flow--text--dark",_="flow--text--icon",e={text:C,light:B,dark:W,icon:_,"align-start":"flow--text--align-start","align-center":"flow--text--align-center","align-end":"flow--text--align-end","wrap-wrap":"flow--text--wrap-wrap","wrap-balance":"flow--text--wrap-balance","wrap-pretty":"flow--text--wrap-pretty"},v=j("Text",o=>{const{children:n,className:r,elementType:s="span",emulateBoldWidth:m,ref:a,color:l,align:i="start",wrap:c,style:d,whiteSpace:w,wordBreak:g,...h}=o,y=E(e.text,l&&e[l],i&&e[`align-${i}`],c&&e[`wrap-${c}`],r),p={...h,className:y},u={Link:{inline:!0},Icon:{className:e.icon}},x={whiteSpace:w,wordBreak:g,...d},f=t.jsx($,{props:u,children:t.jsx(P,{if:m,children:t.jsx(k,{children:n})})});if(!o.slot){const T=s;return t.jsx(T,{style:x,...p,ref:a,children:f})}return b(typeof s=="string","'elementType' in Text component must be of type string"),t.jsx(N,{style:x,...p,elementType:s,ref:a,children:f})});v.__docgenInfo={description:"@flr-generate all",methods:[],displayName:"Text"};export{v as T,P as W};
