import{j as r}from"./iframe-DwkHntCQ.js";import{O as m}from"./Option-oXTcuhNH.js";import{S as e}from"./Select-hihWp_Ma.js";import{L as a}from"./Label-IsfDEsPh.js";import n from"./Default.stories-DmokjfQ5.js";import{d as l}from"./dummyText-CX_I_Wpl.js";import"./index-nuYtCEEu.js";import"./Popover-DvylaOgQ.js";import"./clsx-B-dksMZM.js";import"./useOverlayController-Dk9bMBr8.js";import"./context-DyX3upIJ.js";import"./flowComponent-CDVCCqgo.js";import"./index-90CY5obj.js";import"./index-Cx9MYi32.js";import"./useStatic-BqeeL3zA.js";import"./OverlayContextProvider-DEtKF3P2.js";import"./Dialog-Cj1dv_FM.js";import"./Button-BrfRNilt.js";import"./utils-Di7WFWpe.js";import"./ProgressBar-BJChhODk.js";import"./Label-CkXLKyn5.js";import"./Hidden-CTKHA4Af.js";import"./filterDOMProps-i7L6S0l1.js";import"./useLabel-DPc8RWv0.js";import"./context-BkqugFd7.js";import"./NumberFormatter-DNR9MAW-.js";import"./LiveAnnouncer-Cy654hVN.js";import"./usePress-BCP8B4jj.js";import"./utils-BgD92WZP.js";import"./useFocus-GoSUCcJ3.js";import"./useFocusWithin-tqcFW1Po.js";import"./useFocusable-Bnl-RQKa.js";import"./useFocusRing-B6zRS2mI.js";import"./RSPContexts-CHr_tkrx.js";import"./OverlayArrow-BCGgH0Vq.js";import"./useControlledState-DyDKUpf4.js";import"./Collection-C9EPSj0q.js";import"./CollectionBuilder-CpTUcuaV.js";import"./SelectionIndicator-BmVEKeRD.js";import"./Separator-D5X37L1x.js";import"./Text-BtFh1iC6.js";import"./SelectionManager-BDJUyJ7N.js";import"./useEvent-N-KGhH9j.js";import"./useCollator-DA-keOw9.js";import"./FocusScope-wRqNTiuk.js";import"./useLocalizedStringFormatter-ClJgDr8F.js";import"./VisuallyHidden-CVpyzdGa.js";import"./ClearPropsContextView-CxP4Y2-5.js";import"./ClearPropsContext-D7-qaIYX.js";import"./IconWarning-CscgxAB5.js";import"./DragAndDrop-DPC6TjMJ.js";import"./inertValue-C5iuCiD5.js";import"./useListState-eKehioLB.js";import"./useFieldComponent-DTLstJQQ.js";import"./react-children-utilities-C8UOdL4T.js";import"./useMakeFocusable-e4U3WnWM.js";import"./Form-DZTCn0e1.js";import"./intlStrings-ZMTSFH_M.js";import"./useFormValidation-D01J8um2.js";import"./useFormReset-BUY4HIau.js";import"./Label.module-CUYTf9Jc.js";import"./FieldDescription-DY5ANAML.js";import"./Text-DBgNVic9.js";import"./browser-DfU0u7Y9.js";import"./EmulatedBoldText-CNqdjroB.js";import"./CountryOptions-DP63xssR.js";import"./ContextualHelpTrigger-CzVJho9R.js";import"./OverlayTrigger-Dz-k30Wm.js";import"./ControlledNotification-B20ejBs1.js";import"./Button-DN4_LEM9.js";import"./LoadingSpinner-Bd24wSd4.js";const kr={...n,title:"Form Controls/Select/Edge Cases"},t={render:i=>r.jsxs(e,{...i,children:[r.jsx(a,{children:"Label"}),Array(20).fill("").map((s,o)=>r.jsxs(m,{children:["Option ",o+1]},o))]})},p={render:i=>r.jsxs(e,{...i,children:[r.jsx(a,{children:"Label"}),Array(4).fill("").map((s,o)=>r.jsxs(m,{children:["Option ",o+1," ",l.medium]},o))]})};t.parameters={...t.parameters,docs:{...t.parameters?.docs,source:{originalSource:`{
  render: props => <Select {...props}>
      <Label>Label</Label>
      {Array(20).fill("").map((value, index) => <Option key={index}>Option {index + 1}</Option>)}
    </Select>
}`,...t.parameters?.docs?.source}}};p.parameters={...p.parameters,docs:{...p.parameters?.docs,source:{originalSource:`{
  render: props => <Select {...props}>
      <Label>Label</Label>
      {Array(4).fill("").map((value, index) => <Option key={index}>
            Option {index + 1} {dummyText.medium}
          </Option>)}
    </Select>
}`,...p.parameters?.docs?.source}}};const Cr=["ManyOptions","LongTexts"];export{p as LongTexts,t as ManyOptions,Cr as __namedExportsOrder,kr as default};
