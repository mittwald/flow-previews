import{L as d}from"./LabeledValue-CFTVEBbQ.js";import C from"./Default.stories-DwsiS2gP.js";import{d as t}from"./dummyText-CX_I_Wpl.js";import{L as u}from"./Label-Cb_5Fm_J.js";import{C as c}from"./Content-jgDaHoYr.js";import{R as e}from"./index-Cs7sjTYM.js";import{C as L}from"./CopyButton-D2S66AJp.js";import"./clsx-B-dksMZM.js";import"./PropsContextProvider-BmJWDS_p.js";import"./index-C8LjR2Bd.js";import"./InlineCode-CU6XHDNo.js";import"./Link-DUOM6bRs.js";import"./flowComponent-D7ioKQ_2.js";import"./index-Cf-03bMR.js";import"./_commonjsHelpers-BosuxZz1.js";import"./utils-BBsc42SX.js";import"./filterDOMProps-CeZl_uWj.js";import"./usePress-Do5SRlXR.js";import"./useFocusRing-CRCkdtud.js";import"./useFocusable-D6sODRzj.js";import"./useLocalizedStringFormatter-BSNlGq_b.js";import"./Label-DgAfL5vK.js";import"./Hidden-DMUPAT4b.js";import"./Wrap-DQq6jo70.js";import"./Button-CBaVSeEb.js";import"./IconApp-BOae6dD3.js";import"./IconWarning-DMnbQijb.js";import"./Text-DYnmzK5R.js";import"./EmulatedBoldText-Dmze-Iwg.js";import"./Text-C0gOxGaJ.js";import"./LoadingSpinner-BLH-7Wh6.js";import"./Button-BknGA9dM.js";import"./TooltipTrigger-81PChhl_.js";import"./OverlayArrow-B8rEgeMV.js";import"./number-nHrFdSb-.js";import"./useControlledState-B7K2eYzO.js";import"./react-children-utilities-CdZndyK3.js";import"./Action-s1n0zgTl.js";import"./context-Dd6hPQBJ.js";import"./useSelector-0qDIPR45.js";import"./dynamic-DKDa4OpU.js";const oe={title:"Content/LabeledValue/Edge Cases",...C},r={render:m=>e.createElement(d,{...m},e.createElement(u,null,t.medium),e.createElement(c,null,t.short),e.createElement(L,{text:t.short}))},o={render:m=>e.createElement(d,{...m},e.createElement(u,null,t.medium),e.createElement(c,null,t.long),e.createElement(L,{text:t.long}))};var n,p,a;r.parameters={...r.parameters,docs:{...(n=r.parameters)==null?void 0:n.docs,source:{originalSource:`{
  render: props => <LabeledValue {...props}>
      <Label>{dummyText.medium}</Label>
      <Content>{dummyText.short}</Content>
      <CopyButton text={dummyText.short} />
    </LabeledValue>
}`,...(a=(p=r.parameters)==null?void 0:p.docs)==null?void 0:a.source}}};var i,l,s;o.parameters={...o.parameters,docs:{...(i=o.parameters)==null?void 0:i.docs,source:{originalSource:`{
  render: props => <LabeledValue {...props}>
      <Label>{dummyText.medium}</Label>
      <Content>{dummyText.long}</Content>
      <CopyButton text={dummyText.long} />
    </LabeledValue>
}`,...(s=(l=o.parameters)==null?void 0:l.docs)==null?void 0:s.source}}};const me=["LongLabel","LongContent"];export{o as LongContent,r as LongLabel,me as __namedExportsOrder,oe as default};
