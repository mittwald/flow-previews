import{a as y,$,b as m}from"./mergeRefs-DCCfFRi5.js";import{r,R as b}from"./iframe-Co5olYEg.js";function x(t){const l=r.useRef(null),e=r.useRef(void 0),f=r.useCallback(a=>{if(typeof t=="function"){const n=t,s=n(a);return()=>{typeof s=="function"?s():n(null)}}else if(t)return t.current=a,()=>{t.current=null}},[t]);return r.useMemo(()=>({get current(){return l.current},set current(a){l.current=a,e.current&&(e.current(),e.current=void 0),a!=null&&(e.current=f(a))}}),[f])}const p=Symbol("default");function h({values:t,children:l}){for(let[e,f]of t)l=b.createElement(e.Provider,{value:f},l);return l}function v(t){let{className:l,style:e,children:f,defaultClassName:a,defaultChildren:n,defaultStyle:s,values:c}=t;return r.useMemo(()=>{let u,d,o;return typeof l=="function"?u=l({...c,defaultClassName:a}):u=l,typeof e=="function"?d=e({...c,defaultStyle:s||{}}):d=e,typeof f=="function"?o=f({...c,defaultChildren:n}):f==null?o=n:o=f,{className:u??a,style:d||s?{...s,...d}:void 0,children:o??n,"data-rac":""}},[l,e,f,a,n,s,c])}function C(t,l){let e=r.useContext(t);if(l===null)return null;if(e&&typeof e=="object"&&"slots"in e&&e.slots){let f=l||p;if(!e.slots[f]){let a=new Intl.ListFormat().format(Object.keys(e.slots).map(s=>`"${s}"`)),n=l?`Invalid slot "${l}".`:"A slot prop is required.";throw new Error(`${n} Valid slot names are ${a}.`)}return e.slots[f]}return e}function N(t,l,e){let f=C(e,t.slot)||{},{ref:a,...n}=f,s=x(r.useMemo(()=>y(l,a),[l,a])),c=$(n,t);return"style"in n&&n.style&&"style"in t&&t.style&&(typeof n.style=="function"||typeof t.style=="function"?c.style=u=>{let d=typeof n.style=="function"?n.style(u):n.style,o={...u.defaultStyle,...d},i=typeof t.style=="function"?t.style({...u,defaultStyle:o}):t.style;return{...o,...i}}:c.style={...n.style,...t.style}),[c,s]}function g(t=!0){let[l,e]=r.useState(t),f=r.useRef(!1),a=r.useCallback(n=>{f.current=!0,e(!!n)},[]);return m(()=>{f.current||e(!1)},[]),[a,l]}function k(t){const l=/^(data-.*)$/;let e={};for(const f in t)l.test(f)||(e[f]=t[f]);return e}export{N as $,v as a,x as b,C as c,h as d,p as e,g as f,k as g};
