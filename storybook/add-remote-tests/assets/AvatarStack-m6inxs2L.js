import{r as v,j as a}from"./iframe-CYUlilGp.js";import{c as p}from"./clsx-B-dksMZM.js";import{P as f,W as h}from"./PropsContextProvider-CDe6Qqh3.js";import{B as x}from"./Button-BfM0n2Gx.js";import{A as C}from"./Avatar-DdZ5HvES.js";const k="flow--avatar-stack",z="flow--avatar-stack--avatar",t={avatarStack:k,avatar:z,"size-m":"flow--avatar-stack--size-m","size-xs":"flow--avatar-stack--size-xs","size-s":"flow--avatar-stack--size-s","size-l":"flow--avatar-stack--size-l"},P=n=>{const{className:i,children:e,totalCount:l=0,size:s="m",onCountPress:r,...c}=n,m=v.Children.count(e),o=l-m,d=p(t.avatarStack,t[`size-${s}`],i),u={Avatar:{className:t.avatar,size:s},Button:{className:t.avatar}};return a.jsx(f,{props:u,mergeInParentContext:!0,children:a.jsxs("div",{className:d,...c,children:[e,o>0&&a.jsx(h,{if:r,children:a.jsx(x,{onPress:r,children:a.jsxs(C,{size:s,children:["+",o]})})})]})})};P.__docgenInfo={description:"@flr-generate all",methods:[],displayName:"AvatarStack",props:{totalCount:{required:!1,tsType:{name:"number"},description:`The total count of items, as avatars should only be displayed for the first
view`},onCountPress:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"The onPress action of the additional items count element"},size:{required:!1,tsType:{name:"union",raw:'"xs" | "s" | "m" | "l"',elements:[{name:"literal",value:'"xs"'},{name:"literal",value:'"s"'},{name:"literal",value:'"m"'},{name:"literal",value:'"l"'}]},description:'The size of the avatars inside the stack. @default "m"'}},composes:["PropsWithClassName","PropsWithChildren"]};export{P as A};
