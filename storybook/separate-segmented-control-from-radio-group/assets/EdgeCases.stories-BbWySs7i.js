import{S as a,O as l}from"./Option-D2gotxU3.js";import{R as t}from"./index-Cs7sjTYM.js";import{L as n}from"./Label-B7Bpoqda.js";import s from"./Default.stories-DJU1KZvg.js";import"./PropsContextProvider-CRusYdr1.js";import"./index-j_f0pOtZ.js";import"./clsx-B-dksMZM.js";import"./FormField.module-DA2LTVSt.js";import"./IconApp-BqkAjPQv.js";import"./_commonjsHelpers-BosuxZz1.js";import"./flowComponent-Bj3jyc5s.js";import"./index-Cf-03bMR.js";import"./IconWarning-C0Jc7RFp.js";import"./Form-CDVAwZBo.js";import"./useFocusRing-DdBFev_0.js";import"./useLabel-BA8WH6BO.js";import"./utils-Cd8r7pc9.js";import"./Text-Bnjm0IRl.js";import"./filterDOMProps-CeZl_uWj.js";import"./PopoverTrigger-YLhUNpL4.js";import"./OverlayTrigger-BFSK6JNY.js";import"./RSPContexts-BseA8goh.js";import"./OverlayArrow-Bm5GlnqX.js";import"./ProgressBar-K2upHjuk.js";import"./Label-C-iBdzH7.js";import"./Hidden-C2kgQquV.js";import"./useLocalizedStringFormatter-TZkCr3Qr.js";import"./NumberFormatter-DNR9MAW-.js";import"./useControlledState-B7K2eYzO.js";import"./usePress-Cn8oVN-C.js";import"./FocusScope-DMuRQrVO.js";import"./getScrollParent-CcmJp979.js";import"./VisuallyHidden-BVqa5uLw.js";import"./context-C6jbarL_.js";import"./useSelector-zyIjyxEQ.js";import"./ListBox-DuGtMGZD.js";import"./Collection-BdcdgcY_.js";import"./CollectionBuilder-B4BE-ZOx.js";import"./DragAndDrop-Bssnb-st.js";import"./Header-3zDVqz72.js";import"./Separator-ZOqStrt8.js";import"./useMenuTrigger-C0OxO33Y.js";import"./SelectionManager-CLd9IAHF.js";import"./useEvent-BjqsPY1I.js";import"./useCollator-tPR4bsZ_.js";import"./useListState-CL5yIiDJ.js";import"./Button-B89OlhFY.js";import"./LiveAnnouncer-CeCcBDbP.js";import"./useFocusable-GQF4xS8_.js";import"./useSingleSelectListState-DQfa2Mvd.js";import"./useFormReset-BmVKDtZT.js";import"./FieldDescription-BTRrm07b.js";import"./Text-DpeJkNeI.js";import"./EmulatedBoldText-Dmze-Iwg.js";import"./Wrap-DQq6jo70.js";const fr={...s,title:"Form Controls/Select/Edge Cases"},r={render:e=>t.createElement(a,{...e},t.createElement(n,null,"Label"),Array(20).fill("").map((c,o)=>t.createElement(l,{key:o},"Option ",o+1)))};var m,p,i;r.parameters={...r.parameters,docs:{...(m=r.parameters)==null?void 0:m.docs,source:{originalSource:`{
  render: props => <Select {...props}>
      <Label>Label</Label>
      {Array(20).fill("").map((value, index) => <Option key={index}>Option {index + 1}</Option>)}
    </Select>
}`,...(i=(p=r.parameters)==null?void 0:p.docs)==null?void 0:i.source}}};const ur=["Default"];export{r as Default,ur as __namedExportsOrder,fr as default};
