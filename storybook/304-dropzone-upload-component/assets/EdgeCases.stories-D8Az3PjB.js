import{L as d}from"./LabeledValue-DmH26els.js";import C from"./Default.stories-Do2pYewB.js";import{d as e}from"./dummyText-CX_I_Wpl.js";import{L as u}from"./Label-D_lYvbbp.js";import{C as c}from"./Content-DW2opCWC.js";import{R as t}from"./index-B-o1Wr-g.js";import{C as L}from"./CopyButton-CLwpZ-Pe.js";import"./clsx-B-dksMZM.js";import"./PropsContextProvider-BYgAOosN.js";import"./index-CHDNsM8M.js";import"./InlineCode-DdDdvZ8I.js";import"./Link-Ct1DJBCv.js";import"./flowComponent-BM_bsdM-.js";import"./index-DolzVqEf.js";import"./_commonjsHelpers-Cpj98o6Y.js";import"./IconApp-BsMqgwqQ.js";import"./IconWarning-B4d9xTRO.js";import"./useLocalizedStringFormatter-X6TgI_-C.js";import"./utils-DKtCZAsl.js";import"./filterDOMProps-CeZl_uWj.js";import"./usePress-RNxp3RZQ.js";import"./useFocusRing-aZOxpy_h.js";import"./useFocusable-DeAGt_gp.js";import"./Label-lrV0rU61.js";import"./Hidden-_I_3hSLB.js";import"./Wrap-DQq6jo70.js";import"./Button-C--giUau.js";import"./Text-Cj_eL-oH.js";import"./EmulatedBoldText-1x_0FOGF.js";import"./Text-CiYJIQMS.js";import"./LoadingSpinner-DCq4YO4s.js";import"./Button-i9IuKDdG.js";import"./ProgressBar-CBi1pwqX.js";import"./useLabel-C4jwYeNR.js";import"./NumberFormatter-DNR9MAW-.js";import"./LiveAnnouncer-CeCcBDbP.js";import"./Tooltip-BrfG_2y1.js";import"./OverlayArrow-8ryNgZFp.js";import"./useControlledState-BgxdDqm0.js";import"./react-children-utilities-D14ImiYi.js";import"./Action-D0zhlgd9.js";import"./context-859mpCQj.js";import"./useSelector-B1salhvt.js";import"./getActionGroupSlot-AJlcTtI2.js";import"./dynamic-DKDa4OpU.js";const at={title:"Content/LabeledValue/Edge Cases",...C},r={render:m=>t.createElement(d,{...m},t.createElement(u,null,e.medium),t.createElement(c,null,e.short),t.createElement(L,{text:e.short}))},o={render:m=>t.createElement(d,{...m},t.createElement(u,null,e.medium),t.createElement(c,null,e.long),t.createElement(L,{text:e.long}))};var p,n,a;r.parameters={...r.parameters,docs:{...(p=r.parameters)==null?void 0:p.docs,source:{originalSource:`{
  render: props => <LabeledValue {...props}>
      <Label>{dummyText.medium}</Label>
      <Content>{dummyText.short}</Content>
      <CopyButton text={dummyText.short} />
    </LabeledValue>
}`,...(a=(n=r.parameters)==null?void 0:n.docs)==null?void 0:a.source}}};var i,l,s;o.parameters={...o.parameters,docs:{...(i=o.parameters)==null?void 0:i.docs,source:{originalSource:`{
  render: props => <LabeledValue {...props}>
      <Label>{dummyText.medium}</Label>
      <Content>{dummyText.long}</Content>
      <CopyButton text={dummyText.long} />
    </LabeledValue>
}`,...(s=(l=o.parameters)==null?void 0:l.docs)==null?void 0:s.source}}};const it=["LongLabel","LongContent"];export{o as LongContent,r as LongLabel,it as __namedExportsOrder,at as default};
