import{S as a,O as l}from"./Option-DwU1f82w.js";import{R as t}from"./index-Cs7sjTYM.js";import{L as n}from"./Label-COhATZiw.js";import s from"./Default.stories-BcTY1s5g.js";import"./PropsContextProvider-BmJWDS_p.js";import"./index-C8LjR2Bd.js";import"./clsx-B-dksMZM.js";import"./FormField.module-DiE_-oAn.js";import"./IconApp-DHYIey49.js";import"./_commonjsHelpers-BosuxZz1.js";import"./flowComponent-yA_GJLJm.js";import"./index-Cf-03bMR.js";import"./IconWarning-BN_iwvii.js";import"./Form-BJmzrAR9.js";import"./useFocusRing-CRCkdtud.js";import"./useLabel-D8UVq-XF.js";import"./useLabels-DMhdkBu1.js";import"./utils-BBsc42SX.js";import"./Text-C0gOxGaJ.js";import"./PopoverTrigger-rsaQhhey.js";import"./OverlayTrigger-C8QEaa4w.js";import"./RSPContexts-BseA8goh.js";import"./OverlayArrow-B8rEgeMV.js";import"./number-nHrFdSb-.js";import"./useLocalizedStringFormatter-BSNlGq_b.js";import"./useControlledState-B7K2eYzO.js";import"./filterDOMProps-CeZl_uWj.js";import"./usePress-Do5SRlXR.js";import"./FocusScope-CGKzeA_Y.js";import"./Hidden-DMUPAT4b.js";import"./getScrollParent-CcmJp979.js";import"./VisuallyHidden-D4oQIDY4.js";import"./context-Br3oPyvc.js";import"./useSelector-IWPZxGsb.js";import"./ListBox-DPVwlPTD.js";import"./Collection-BSVICx61.js";import"./CollectionBuilder-C1pJ_vaJ.js";import"./DragAndDrop-Bssnb-st.js";import"./Header-BikxQE8J.js";import"./Separator-C6jiSXXg.js";import"./useMenuTrigger-wMfZdwoS.js";import"./SelectionManager-D54GM_Uc.js";import"./useEvent-Be9f7BQw.js";import"./useCollator-BmGy_8lF.js";import"./useListState-D5Ew4QeR.js";import"./Button-BknGA9dM.js";import"./useFocusable-D6sODRzj.js";import"./Label-DgAfL5vK.js";import"./useSingleSelectListState-B3Jus2RD.js";import"./useFormReset-DlrFI1sj.js";import"./FieldDescription-oYEOqy0I.js";import"./Text-BJH5_Aan.js";import"./EmulatedBoldText-Dmze-Iwg.js";import"./Wrap-DQq6jo70.js";const dr={...s,title:"Form Controls/Select/Edge Cases"},r={render:e=>t.createElement(a,{...e},t.createElement(n,null,"Label"),Array(20).fill("").map((c,o)=>t.createElement(l,{key:o},"Option ",o+1)))};var m,p,i;r.parameters={...r.parameters,docs:{...(m=r.parameters)==null?void 0:m.docs,source:{originalSource:`{
  render: props => <Select {...props}>
      <Label>Label</Label>
      {Array(20).fill("").map((value, index) => <Option key={index}>Option {index + 1}</Option>)}
    </Select>
}`,...(i=(p=r.parameters)==null?void 0:p.docs)==null?void 0:i.source}}};const fr=["Default"];export{r as Default,fr as __namedExportsOrder,dr as default};
