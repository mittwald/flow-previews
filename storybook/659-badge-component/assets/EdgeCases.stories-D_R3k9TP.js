import{m as e,B as a}from"./Default.stories-DZPNqRRE.js";import{R as t}from"./index-Cs7sjTYM.js";import{d as s}from"./dummyText-CX_I_Wpl.js";import{T as n}from"./Text-CtA3VFUU.js";import{L as d}from"./Label-Dqjizk5T.js";import"./clsx-B-dksMZM.js";import"./PropsContextProvider-BmJWDS_p.js";import"./index-C8LjR2Bd.js";import"./flowComponent-BhQARXCG.js";import"./index-BU4L-DQy.js";import"./_commonjsHelpers-BosuxZz1.js";import"./Button-B76rtY3R.js";import"./IconApp-CtALKRUq.js";import"./IconWarning-_gxAMnYu.js";import"./Wrap-DQq6jo70.js";import"./LoadingSpinner-eWFzTv6N.js";import"./useLocalizedStringFormatter-BSNlGq_b.js";import"./Button-B_pBO4HW.js";import"./utils-CgpzwoFP.js";import"./Hidden-BsXGu--s.js";import"./filterDOMProps-CeZl_uWj.js";import"./useFocusable-DdFCD-YN.js";import"./usePress-C9_maMb0.js";import"./ContextMenuTrigger-DMkl6aQ1.js";import"./ContextMenu.module-68N5lvfm.js";import"./PopoverTrigger-BofPQJ4G.js";import"./OverlayTrigger-ChEattJQ.js";import"./RSPContexts-BseA8goh.js";import"./OverlayArrow-B9aGSeR2.js";import"./number-nHrFdSb-.js";import"./useControlledState-B7K2eYzO.js";import"./FocusScope-jwB0dEBj.js";import"./getScrollParent-CcmJp979.js";import"./useLabels-DMhdkBu1.js";import"./VisuallyHidden-Bx6BLr_2.js";import"./context-Cs3JBZSo.js";import"./useSelector-tPnT0VC4.js";import"./Action-DaRt2BIl.js";import"./dynamic-DKDa4OpU.js";import"./deepFindOfType-BylCc5Xi.js";import"./react-children-utilities-CdZndyK3.js";import"./Collection-D5YsYnk7.js";import"./CollectionBuilder-bH4u-dJi.js";import"./Header-8TqMsGve.js";import"./Separator-BGQky6UT.js";import"./Text-BgIWd_-0.js";import"./useMenuTrigger-BixCDTNz.js";import"./SelectionManager-DV2VTso8.js";import"./useEvent-Be9f7BQw.js";import"./useCollator-BmGy_8lF.js";import"./storyBackgrounds-BHxp8d-8.js";import"./EmulatedBoldText-Dmze-Iwg.js";import"./Label-BRZ8BO2K.js";const dr={...e,title:"Status/Badge/Edge Cases"},r={render:i=>t.createElement(a,{...i},t.createElement(d,null,"Scope"),t.createElement(n,null,s.long))};var o,m,p;r.parameters={...r.parameters,docs:{...(o=r.parameters)==null?void 0:o.docs,source:{originalSource:`{
  render: props => <Badge {...props}>
      <Label>Scope</Label>
      <Text>{dummyText.long}</Text>
    </Badge>
}`,...(p=(m=r.parameters)==null?void 0:m.docs)==null?void 0:p.source}}};const cr=["LongText"];export{r as LongText,cr as __namedExportsOrder,dr as default};
