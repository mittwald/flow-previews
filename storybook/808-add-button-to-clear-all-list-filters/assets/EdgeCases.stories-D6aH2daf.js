import{B as e}from"./Badge-XaN_BHuj.js";import a from"./Default.stories-COFS-ZOn.js";import{R as t}from"./index-Cs7sjTYM.js";import{d as s}from"./dummyText-CX_I_Wpl.js";import{T as n}from"./Text-DYnmzK5R.js";import{L as d}from"./Label-Cb_5Fm_J.js";import"./clsx-B-dksMZM.js";import"./PropsContextProvider-BmJWDS_p.js";import"./index-C8LjR2Bd.js";import"./flowComponent-D7ioKQ_2.js";import"./index-Cf-03bMR.js";import"./_commonjsHelpers-BosuxZz1.js";import"./Button-BLJCmALH.js";import"./IconApp-BOae6dD3.js";import"./IconWarning-P6NmkjLC.js";import"./Wrap-DQq6jo70.js";import"./LoadingSpinner-ZeZA4Lmj.js";import"./useLocalizedStringFormatter-BSNlGq_b.js";import"./Button-BknGA9dM.js";import"./utils-BBsc42SX.js";import"./Hidden-DMUPAT4b.js";import"./filterDOMProps-CeZl_uWj.js";import"./useFocusable-D6sODRzj.js";import"./useFocusRing-CRCkdtud.js";import"./usePress-Do5SRlXR.js";import"./ContextMenuTrigger-DQfMqo3Q.js";import"./ContextMenu.module-68N5lvfm.js";import"./PopoverTrigger-XlMnyj-9.js";import"./OverlayTrigger-BvOr0J9V.js";import"./RSPContexts-BseA8goh.js";import"./OverlayArrow-B8rEgeMV.js";import"./number-nHrFdSb-.js";import"./useControlledState-B7K2eYzO.js";import"./FocusScope-CGKzeA_Y.js";import"./getScrollParent-CcmJp979.js";import"./useLabels-DMhdkBu1.js";import"./VisuallyHidden-D4oQIDY4.js";import"./context-Dd6hPQBJ.js";import"./useSelector-0qDIPR45.js";import"./Action-s1n0zgTl.js";import"./dynamic-DKDa4OpU.js";import"./deepFindOfType-BylCc5Xi.js";import"./react-children-utilities-CdZndyK3.js";import"./Collection-BSVICx61.js";import"./CollectionBuilder-C1pJ_vaJ.js";import"./Header-BikxQE8J.js";import"./Separator-C6jiSXXg.js";import"./Text-C0gOxGaJ.js";import"./useMenuTrigger-BPSWHnth.js";import"./SelectionManager-D54GM_Uc.js";import"./useEvent-Be9f7BQw.js";import"./useCollator-BmGy_8lF.js";import"./storyBackgrounds-GFSAi-dI.js";import"./EmulatedBoldText-Dmze-Iwg.js";import"./Label-DgAfL5vK.js";const lr={...a,title:"Status/Badge/Edge Cases"},r={render:i=>t.createElement(e,{...i},t.createElement(d,null,"Scope"),t.createElement(n,null,s.long))};var o,m,p;r.parameters={...r.parameters,docs:{...(o=r.parameters)==null?void 0:o.docs,source:{originalSource:`{
  render: props => <Badge {...props}>
      <Label>Scope</Label>
      <Text>{dummyText.long}</Text>
    </Badge>
}`,...(p=(m=r.parameters)==null?void 0:m.docs)==null?void 0:p.source}}};const gr=["LongText"];export{r as LongText,gr as __namedExportsOrder,lr as default};
