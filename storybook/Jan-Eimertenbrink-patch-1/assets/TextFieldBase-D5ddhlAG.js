import{j as $}from"./jsx-runtime-D_zvdyIk.js";import{r as s,R as F}from"./index-CgfFrydU.js";import{f as c}from"./FormField.module-B9AzUSUD.js";import{c as g}from"./clsx-B-dksMZM.js";import{C as j,P as q}from"./PropsContextProvider-Ijz6GgOq.js";import{F as O}from"./FieldError-BcUarTjp.js";import{F as S}from"./FieldDescription-CgVPFufB.js";import{$ as M}from"./useLocalizedStringFormatter-P5-5MQWA.js";import{$ as P,a as N,f as _,d as A,e as V,b as w}from"./utils-CEW6KzsL.js";import{a as L}from"./FieldError-CSoyHznZ.js";import{a as k}from"./Form-Ce06eXuO.js";import{$ as y}from"./Input-CDnAdcih.js";import{a as W}from"./Label-i46snhnj.js";import{a as U,b as Z}from"./useFocusRing-B_JVXUf7.js";import{$ as B}from"./mergeRefs-78-678FT.js";import{a as z}from"./Text-H2FrnJWx.js";import{$ as G}from"./Hidden-DwT0szmK.js";import{$ as J}from"./filterDOMProps-CeZl_uWj.js";import{$ as K}from"./useTextField-DOdnF9jK.js";const D=s.createContext({});let Q=a=>{let{onHoverStart:e,onHoverChange:r,onHoverEnd:d,...t}=a;return t};const Fe=s.forwardRef(function(e,r){[e,r]=P(e,r,D);let{hoverProps:d,isHovered:t}=U(e),{isFocused:i,isFocusVisible:n,focusProps:f}=Z({isTextInput:!0,autoFocus:e.autoFocus}),l=!!e["aria-invalid"]&&e["aria-invalid"]!=="false",o=N({...e,values:{isHovered:t,isFocused:i,isFocusVisible:n,isDisabled:e.disabled||!1,isInvalid:l},defaultClassName:"react-aria-TextArea"});return F.createElement("textarea",{...B(Q(e),f,d),...o,ref:r,"data-focused":i||void 0,"data-disabled":e.disabled||void 0,"data-hovered":t||void 0,"data-focus-visible":n||void 0,"data-invalid":l||void 0})}),X=s.createContext(null),Y=G(function(e,r){[e,r]=P(e,r,X);let{validationBehavior:d}=_(k)||{};var t,i;let n=(i=(t=e.validationBehavior)!==null&&t!==void 0?t:d)!==null&&i!==void 0?i:"native",f=s.useRef(null),[l,o]=P({},f,y),[b,x]=A(!e["aria-label"]&&!e["aria-labelledby"]),[p,h]=s.useState("input"),{labelProps:m,inputProps:u,descriptionProps:H,errorMessageProps:I,...v}=K({...V(e),inputElementType:p,label:x,validationBehavior:n},o),R=s.useCallback(C=>{o.current=C,C&&h(C instanceof HTMLTextAreaElement?"textarea":"input")},[o]),T=N({...e,values:{isDisabled:e.isDisabled||!1,isInvalid:v.isInvalid,isReadOnly:e.isReadOnly||!1,isRequired:e.isRequired||!1},defaultClassName:"react-aria-TextField"}),E=J(e);return delete E.id,F.createElement("div",{...E,...T,ref:r,slot:e.slot||void 0,"data-disabled":e.isDisabled||void 0,"data-invalid":v.isInvalid||void 0,"data-readonly":e.isReadOnly||void 0,"data-required":e.isRequired||void 0},F.createElement(w,{values:[[W,{...m,ref:b}],[y,{...B(u,l),ref:R}],[D,{...u,ref:R}],[z,{slots:{description:H,errorMessage:I}}],[L,v]]},T.children))}),ee={"de-DE":{"textFieldBase.characters":(a,e)=>`${e.select({0:()=>`${a.count}`,other:()=>`${a.count}/${a.maxCount}`},a.maxCount)} Zeichen`},"en-US":{"textFieldBase.characters":(a,e)=>`${e.select({0:()=>`${a.count}`,other:()=>`${a.count}/${a.maxCount}`},a.maxCount)} characters`}},ae=a=>{var m;const{children:e,className:r,input:d,showCharacterCount:t,ref:i,...n}=a,[f,l]=s.useState(((m=a.value)==null?void 0:m.length)??0),o=g(c.formField,r),b=M(ee),x={Label:{className:c.label,optional:!a.isRequired},FieldDescription:{className:c.fieldDescription},FieldError:{className:c.customFieldError}},p=u=>{t&&l(u.length),a.onChange&&a.onChange(u)},h=b.format("textFieldBase.characters",{count:f,maxCount:a.maxLength??0});return $.jsx(j,{children:$.jsxs(Y,{ref:i,...n,className:o,onChange:p,children:[d,$.jsx(q,{props:x,children:e}),t&&$.jsx(S,{className:c.fieldDescription,children:h}),$.jsx(O,{className:c.fieldError})]})})};ae.__docgenInfo={description:"",methods:[],displayName:"TextFieldBase",props:{input:{required:!0,tsType:{name:"ReactNode"},description:"The input element"},showCharacterCount:{required:!1,tsType:{name:"boolean"},description:"Whether a character count should be displayed inside the field description."}},composes:["PropsWithChildren","Pick"]};export{D as $,ae as T,Fe as a};
