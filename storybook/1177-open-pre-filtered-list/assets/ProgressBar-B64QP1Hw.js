import{j as r}from"./jsx-runtime-D_zvdyIk.js";import{P as u}from"./flowComponent-Cjf8M1qv.js";import{c as x}from"./clsx-B-dksMZM.js";import{$ as h}from"./useLocalizedStringFormatter-D6AjEcek.js";import{a as w,b as $}from"./ProgressBar-B3uNJn7L.js";const v={"de-DE":{"progressBar.of":"von"},"en-EN":{"progressBar.of":"of"}},N="flow--progress-bar",B="flow--progress-bar--label",P="flow--progress-bar--value",j="flow--progress-bar--bar",y="flow--progress-bar--fill",z="flow--progress-bar--info",V="flow--progress-bar--success",C="flow--progress-bar--danger",E="flow--progress-bar--warning",s={progressBar:N,label:B,value:P,bar:j,fill:y,"size-s":"flow--progress-bar--size-s",info:z,success:V,danger:C,warning:E},T=e=>{const{children:l,className:t,status:n="info",showMaxValue:i,size:c="m",...f}=e,p=x(t,s.progressBar,s[`size-${c}`],s[n]),m=h(v),b=w(e.formatOptions),a=i&&e.maxValue?b.format(e.maxValue):void 0,d={Label:{className:s.label,unstyled:!0}};return r.jsx($,{className:p,...f,children:({percentage:g,valueText:o})=>r.jsxs(u,{props:d,children:[l,r.jsx("span",{className:s.value,children:a?`${o} ${m.format("progressBar.of")} ${a}`:o}),r.jsx("div",{className:s.bar,children:r.jsx("div",{className:s.fill,style:{width:g+"%"}})})]})})};T.__docgenInfo={description:"@flr-generate all",methods:[],displayName:"ProgressBar",props:{showMaxValue:{required:!1,tsType:{name:"boolean"},description:"Whether the max value should be displayed."},size:{required:!1,tsType:{name:"union",raw:'"s" | "m"',elements:[{name:"literal",value:'"s"'},{name:"literal",value:'"m"'}]},description:'The size variant of the progress bar @default "m"'}},composes:["PropsWithChildren","PropsWithStatus"]};export{T as P};
