import{j as t}from"./iframe-DIlFkKfe.js";import{f as u,C,P,W as $}from"./PropsContextProvider-DpgT95xr.js";import{i as b}from"./browser-CN7RW_LC.js";import{E as k}from"./EmulatedBoldText-hH9OpyJt.js";import{c as E}from"./clsx-B-dksMZM.js";import{$ as N}from"./Text-DuUlrCBa.js";const B="flow--text",W="flow--text--light",v="flow--text--dark",I="flow--text--icon",e={text:B,light:W,dark:v,icon:I,"align-start":"flow--text--align-start","align-center":"flow--text--align-center","align-end":"flow--text--align-end","wrap-wrap":"flow--text--wrap-wrap","wrap-balance":"flow--text--wrap-balance","wrap-pretty":"flow--text--wrap-pretty"},_=u("Text",r=>{const{children:x,className:m,elementType:o="span",emulateBoldWidth:f,ref:n,color:s,align:a="start",wrap:l,style:d,whiteSpace:w,wordBreak:g,...h}=r,y=E(e.text,s&&e[s],a&&e[`align-${a}`],l&&e[`wrap-${l}`],m),i={...h,className:y},j={Link:{inline:!0},Icon:{className:e.icon}},c={whiteSpace:w,wordBreak:g,...d},p=t.jsx(P,{props:j,children:t.jsx($,{if:f,children:t.jsx(k,{children:x})})});if(!r.slot){const T=o;return t.jsx(T,{style:c,...i,ref:n,children:p})}return b(typeof o=="string","'elementType' in Text component must be of type string"),t.jsx(C,{children:t.jsx(N,{style:c,...i,elementType:o,ref:n,children:p})})});_.__docgenInfo={description:`@flr-generate all
@flr-clear-props-context`,methods:[],displayName:"Text"};export{_ as T};
