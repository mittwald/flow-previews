import{j as t,r as f}from"./iframe-Czve8Ng1.js";import{A as i}from"./Autocomplete-BUrGS98H.js";import{L as u}from"./Label-FUFGZTqe.js";import{S as x}from"./SearchField-CohCjZ_4.js";import{O as m}from"./Option-B-RjgljE.js";import"./PropsContextProvider-DLHfSyo1.js";import"./mergeRefs-BkScJl_E.js";import"./index-SeEX-dzh.js";import"./clsx-B-dksMZM.js";import"./DialogTriggerView-7b1_XXj3.js";import"./context-CNefDW5h.js";import"./useStatic-CzYWXmZ1.js";import"./Dialog-DRA529j2.js";import"./Button-Cis11iQd.js";import"./utils-C85tsJLi.js";import"./ProgressBar-CQMCSPa7.js";import"./Label-BfVvFZj4.js";import"./Hidden-B3217TUg.js";import"./filterDOMProps-CghfNOdR.js";import"./useLabel-BFN45BzM.js";import"./context-D03EQw3p.js";import"./NumberFormatter-DNR9MAW-.js";import"./LiveAnnouncer-CeCcBDbP.js";import"./usePress-8K4_ozuW.js";import"./useFocus-DLNoddQ5.js";import"./useFocusRing-Bu3hVrpu.js";import"./useFocusable-DPi5-Rks.js";import"./RSPContexts-dpque2BF.js";import"./OverlayArrow-DAtBTKTJ.js";import"./useControlledState-BeXkP8kb.js";import"./Collection-CSylHNqr.js";import"./CollectionBuilder-Dt6aii9k.js";import"./Separator-C90j9JiE.js";import"./Text-xUaxq5aV.js";import"./Group-D_IbuD73.js";import"./SearchField-C86J2fE8.js";import"./FieldError-CNai_82t.js";import"./Form-B2b0RBd7.js";import"./useLocalizedStringFormatter-uQUw7qmu.js";import"./useTextField-l00Z-hVA.js";import"./useFormReset-BM4kigyU.js";import"./TextField-IalWcoDx.js";import"./useEvent-CJyM_iko.js";import"./SelectionManager-BrCB2ldz.js";import"./useCollator-Bl41TtO8.js";import"./FocusScope-Cg_D6BEH.js";import"./VisuallyHidden-DTvv8wPC.js";import"./Text-CMgn7hJq.js";import"./browser-C659BIXC.js";import"./EmulatedBoldText-CYlQsTFY.js";import"./ReactAriaControlledValueFix-C6r6_Iq3.js";import"./useFilter-cpXOLjQT.js";import"./FormField.module-B9AzUSUD.js";import"./FieldError-JfKFDbH2.js";import"./IconWarning-YJtY_uKm.js";import"./Button-D73APsNA.js";import"./LoadingSpinner-B0jtDNpX.js";import"./Popover-DPRW9Y1r.js";import"./ListBox-DRFM7yi6.js";import"./DragAndDrop-HFZ_wAT2.js";import"./inertValue-CNzMcHNl.js";import"./useListState-BgaLQnis.js";const Ct={title:"Form Controls/Autocomplete",component:i,parameters:{controls:{exclude:["className"]}},render:()=>{const h=O=>["example.com","test.org","email.net","mail.com"].map(g=>{const r=`${O.split("@")[0]}@${g}`;return t.jsx(m,{value:r,textValue:r,children:r},r)}),[p,j]=f.useState("");return t.jsxs(i,{children:[t.jsx(x,{onChange:j,value:p,children:t.jsx(u,{children:"Test"})}),h(p)]})}},o={render:()=>t.jsxs(i,{children:[t.jsx(x,{children:t.jsx(u,{children:"Test"})}),t.jsx(m,{value:"example.com",children:"example.com"}),t.jsx(m,{value:"domain.de",children:"domain.de"}),t.jsx(m,{value:"test.org",children:"test.org"})]})},e={};var s,a,n;o.parameters={...o.parameters,docs:{...(s=o.parameters)==null?void 0:s.docs,source:{originalSource:`{
  render: () => <Autocomplete>
      <SearchField>
        <Label>Test</Label>
      </SearchField>
      <Option value="example.com">example.com</Option>
      <Option value="domain.de">domain.de</Option>
      <Option value="test.org">test.org</Option>
    </Autocomplete>
}`,...(n=(a=o.parameters)==null?void 0:a.docs)==null?void 0:n.source}}};var l,c,d;e.parameters={...e.parameters,docs:{...(l=e.parameters)==null?void 0:l.docs,source:{originalSource:"{}",...(d=(c=e.parameters)==null?void 0:c.docs)==null?void 0:d.source}}};const Dt=["FixedOptions","Default"];export{e as Default,o as FixedOptions,Dt as __namedExportsOrder,Ct as default};
