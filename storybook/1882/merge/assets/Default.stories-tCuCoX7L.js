import{j as t,r as f}from"./iframe-DqL79zQf.js";import{A as i}from"./Autocomplete-CuzGHF2s.js";import{L as u}from"./Label-BLSzr0Yv.js";import{S as x}from"./SearchField-BlrT2sBX.js";import{O as m}from"./Option-b08CNoUJ.js";import"./PropsContextProvider-CyLvSquV.js";import"./mergeRefs-D6gEpmO4.js";import"./index-7IubYRC5.js";import"./clsx-B-dksMZM.js";import"./DialogTriggerView-isVpv3Jo.js";import"./context-J1QRUcAO.js";import"./useStatic-iq1b9ojT.js";import"./Dialog-DObE5EO4.js";import"./Button-BgVR6Xai.js";import"./utils-z68HW5Om.js";import"./ProgressBar-CH989tir.js";import"./Label-CMzThDyg.js";import"./Hidden-BIJxogKe.js";import"./filterDOMProps-CghfNOdR.js";import"./useLabel-BjvlKqLd.js";import"./context-CSgowZ2Z.js";import"./NumberFormatter-DNR9MAW-.js";import"./LiveAnnouncer-CeCcBDbP.js";import"./usePress-CO3SG6lx.js";import"./useFocus-BD5ovWzl.js";import"./useFocusRing-CbrFyu86.js";import"./useFocusable-B73WrcgM.js";import"./RSPContexts-9NN5zZW2.js";import"./OverlayArrow-5jZt71m1.js";import"./useControlledState--BvK6IW4.js";import"./Collection-8wT1TvCk.js";import"./CollectionBuilder-CvELNXxX.js";import"./Separator-DaCZt9C1.js";import"./Text-zdoGkENQ.js";import"./Group-DPDytGTQ.js";import"./SearchField-C7aME9MG.js";import"./FieldError-DNlWKJE8.js";import"./Form-R5LTMmOa.js";import"./useLocalizedStringFormatter-0rSYolxh.js";import"./useTextField-Cpjxci2I.js";import"./useFormReset-CsKPjgKa.js";import"./TextField-2CLvDbyV.js";import"./useEvent-nuKRicCO.js";import"./SelectionManager-Jx2Za9Eq.js";import"./useCollator-DUL5JuJR.js";import"./FocusScope-DbqtD9id.js";import"./VisuallyHidden-BQckF0OS.js";import"./Text-M86zJQcf.js";import"./browser-AVTBNrkm.js";import"./EmulatedBoldText-DYcpE2hW.js";import"./ReactAriaControlledValueFix-BCNQYcDJ.js";import"./useFilter-D_ThuRgN.js";import"./FormField.module-CqWyJNQI.js";import"./FieldError-Bx1fPtVC.js";import"./IconWarning-B2WreSxS.js";import"./Button-QUsEiN5S.js";import"./LoadingSpinner-BTTfXDBN.js";import"./Popover-BGSi_Qng.js";import"./ListBox-CMG957Hk.js";import"./DragAndDrop-KiYjul1I.js";import"./inertValue-Dhpsu8Ol.js";import"./useListState-r6dRuWqc.js";const Ct={title:"Form Controls/Autocomplete",component:i,parameters:{controls:{exclude:["className"]}},render:()=>{const h=O=>["example.com","test.org","email.net","mail.com"].map(g=>{const r=`${O.split("@")[0]}@${g}`;return t.jsx(m,{value:r,textValue:r,children:r},r)}),[p,j]=f.useState("");return t.jsxs(i,{children:[t.jsx(x,{onChange:j,value:p,children:t.jsx(u,{children:"Test"})}),h(p)]})}},o={render:()=>t.jsxs(i,{children:[t.jsx(x,{children:t.jsx(u,{children:"Test"})}),t.jsx(m,{value:"example.com",children:"example.com"}),t.jsx(m,{value:"domain.de",children:"domain.de"}),t.jsx(m,{value:"test.org",children:"test.org"})]})},e={};var s,a,n;o.parameters={...o.parameters,docs:{...(s=o.parameters)==null?void 0:s.docs,source:{originalSource:`{
  render: () => <Autocomplete>
      <SearchField>
        <Label>Test</Label>
      </SearchField>
      <Option value="example.com">example.com</Option>
      <Option value="domain.de">domain.de</Option>
      <Option value="test.org">test.org</Option>
    </Autocomplete>
}`,...(n=(a=o.parameters)==null?void 0:a.docs)==null?void 0:n.source}}};var l,c,d;e.parameters={...e.parameters,docs:{...(l=e.parameters)==null?void 0:l.docs,source:{originalSource:"{}",...(d=(c=e.parameters)==null?void 0:c.docs)==null?void 0:d.source}}};const Dt=["FixedOptions","Default"];export{e as Default,o as FixedOptions,Dt as __namedExportsOrder,Ct as default};
