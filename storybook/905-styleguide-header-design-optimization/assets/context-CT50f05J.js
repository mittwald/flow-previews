var l=Object.defineProperty;var o=(n,e,s)=>e in n?l(n,e,{enumerable:!0,configurable:!0,writable:!0,value:s}):n[e]=s;var t=(n,e,s)=>o(n,typeof e!="symbol"?e+"":e,s);import{m as u,o as h,b as r}from"./flowComponent-C7dqiiMm.js";import{u as c}from"./useSelector-3ucM3joq.js";import{r as O}from"./index-Cs7sjTYM.js";class i{constructor(e){t(this,"isOpen");t(this,"onOpen");t(this,"onClose");u(this,{isOpen:h,open:r.bound,close:r.bound,toggle:r.bound,setOpen:r.bound}),this.isOpen=(e==null?void 0:e.isDefaultOpen)??!1,this.onOpen=e==null?void 0:e.onOpen,this.onClose=e==null?void 0:e.onClose}static useNew(e){return O.useRef(new i(e)).current}open(){var e;this.isOpen=!0,(e=this.onOpen)==null||e.call(this)}close(){var e;this.isOpen=!1,(e=this.onClose)==null||e.call(this)}toggle(){var e,s;this.isOpen=!this.isOpen,this.isOpen?(e=this.onOpen)==null||e.call(this):(s=this.onClose)==null||s.call(this)}setOpen(e){var s,a;this.isOpen=e,e?(s=this.onOpen)==null||s.call(this):(a=this.onClose)==null||a.call(this)}useIsOpen(){return c(()=>this.isOpen)}}const p=O.createContext({}),x=()=>O.useContext(p);export{i as O,p as o,x as u};
