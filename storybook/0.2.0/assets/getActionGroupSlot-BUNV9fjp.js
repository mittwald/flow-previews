var i=Object.defineProperty;var d=(s,t,e)=>t in s?i(s,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):s[t]=e;var a=(s,t,e)=>d(s,typeof t!="symbol"?t+"":t,e);import{j as m}from"./jsx-runtime-CLpGMVip.js";import{r as o}from"./index-Cf9XvIV_.js";import{m as l,o as p,b as n,c as f}from"./flowComponent-DxoeBNET.js";import{u as S}from"./useSelector-C73ywo-I.js";class r{constructor(){a(this,"states",new Set);l(this,{states:p,addState:n,removeState:n,isBusy:f})}static useNew(){return o.useRef(new r).current}static useRegisterState(t){const e=v();o.useEffect(()=>(e==null||e.addState(t),()=>{e==null||e.removeState(t)}),[e,t])}addState(t){this.states.add(t)}removeState(t){this.states.delete(t)}useIsBusy(){return S(()=>this.isBusy)}get isBusy(){for(const t of this.states)if(t.isBusy)return!0;return!1}}const c=o.createContext(void 0),x=s=>{const{children:t}=s,e=r.useNew();return m.jsx(c.Provider,{value:e,children:t})},v=()=>{const s=r.useNew();return o.useContext(c)??s};x.__docgenInfo={description:"",methods:[],displayName:"ActionStateContextProvider"};const C=s=>{const{slot:t,...e}=s,u=e.color===void 0||e.color==="primary"||e.color==="danger"||e.color==="accent"?"primary":"abort";return t??u};export{x as A,r as a,C as g,v as u};
