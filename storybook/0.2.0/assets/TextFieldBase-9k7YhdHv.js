import{j as f}from"./jsx-runtime-CLpGMVip.js";import{r as i,R as C}from"./index-Cf9XvIV_.js";import{f as l,F as H}from"./FieldError-08OvBDya.js";import{c as N}from"./clsx-B-dksMZM.js";import{C as B,P as D}from"./PropsContextProvider-CWFvCxZj.js";import{F as I}from"./FieldDescription-b8iFIwo0.js";import{$ as g}from"./useLocalizedStringFormatter-Dq-FGM-G.js";import{$ as E,a as R,e as q,d as j,f as M,g as O}from"./utils-DbIpkr2E.js";import{d as w}from"./FieldError-Di-56-XY.js";import{b as L}from"./Form-D-sIjvit.js";import{a as S}from"./Input-Cw-yF1VB.js";import{a as _}from"./Label-wrbsGWF5.js";import{a as A,b as V}from"./useFocusRing-BUEgee7k.js";import{a as W}from"./index-CoqFY4cC.js";import{a as k}from"./Text-DUOeOfAn.js";import{$ as Z}from"./filterDOMProps-BSfnXAP7.js";import{$ as z}from"./useTextField-B6NJKPbp.js";const y=i.createContext({});let G=e=>{let{onHoverStart:a,onHoverChange:o,onHoverEnd:r,...t}=e;return t};function J(e,a){[e,a]=E(e,a,y);let{hoverProps:o,isHovered:r}=A(e),{isFocused:t,isFocusVisible:s,focusProps:d}=V({isTextInput:!0,autoFocus:e.autoFocus}),n=!!e["aria-invalid"]&&e["aria-invalid"]!=="false",c=R({...e,values:{isHovered:r,isFocused:t,isFocusVisible:s,isDisabled:e.disabled||!1,isInvalid:n},defaultClassName:"react-aria-TextArea"});return C.createElement("textarea",{...W(G(e),d,o),...c,ref:a,"data-focused":t||void 0,"data-disabled":e.disabled||void 0,"data-hovered":r||void 0,"data-focus-visible":s||void 0,"data-invalid":n||void 0})}const pe=i.forwardRef(J),K=i.createContext(null);function Q(e,a){[e,a]=E(e,a,K);let{validationBehavior:o}=q(L)||{};var r,t;let s=(t=(r=e.validationBehavior)!==null&&r!==void 0?r:o)!==null&&t!==void 0?t:"native",d=i.useRef(null),[n,c]=j(),[b,x]=i.useState("input"),{labelProps:p,inputProps:u,descriptionProps:$,errorMessageProps:m,...h}=z({...M(e),inputElementType:b,label:c,validationBehavior:s},d),F=i.useCallback(v=>{d.current=v,v&&x(v instanceof HTMLTextAreaElement?"textarea":"input")},[]),P=R({...e,values:{isDisabled:e.isDisabled||!1,isInvalid:h.isInvalid,isReadOnly:e.isReadOnly||!1,isRequired:e.isRequired||!1},defaultClassName:"react-aria-TextField"}),T=Z(e);return delete T.id,C.createElement("div",{...T,...P,ref:a,slot:e.slot||void 0,"data-disabled":e.isDisabled||void 0,"data-invalid":h.isInvalid||void 0,"data-readonly":e.isReadOnly||void 0,"data-required":e.isRequired||void 0},C.createElement(O,{values:[[_,{...p,ref:n}],[S,{...u,ref:F}],[y,{...u,ref:F}],[k,{slots:{description:$,errorMessage:m}}],[w,h]]},P.children))}const U=i.forwardRef(Q),X={"de-DE":{"textFieldBase.characters":(e,a)=>`${a.select({0:()=>`${e.count}`,other:()=>`${e.count}/${e.maxCount}`},e.maxCount)} Zeichen`},"en-EN":{"textFieldBase.characters":(e,a)=>`${a.select({0:()=>`${e.count}`,other:()=>`${e.count}/${e.maxCount}`},e.maxCount)} characters`}},Y=e=>{var $;const{children:a,className:o,input:r,showCharacterCount:t,...s}=e,[d,n]=i.useState((($=e.value)==null?void 0:$.length)??0),c=N(l.formField,o),b=g(X),x={Label:{className:l.label,optional:!e.isRequired},FieldDescription:{className:l.fieldDescription},FieldError:{className:l.customFieldError}},p=m=>{t&&n(m.length),e.onChange&&e.onChange(m)},u=b.format("textFieldBase.characters",{count:d,maxCount:e.maxLength??0});return f.jsx(B,{children:f.jsxs(U,{...s,className:c,onChange:p,children:[r,f.jsx(D,{props:x,children:a}),t&&f.jsx(I,{className:l.fieldDescription,children:u}),f.jsx(H,{className:l.fieldError})]})})};Y.__docgenInfo={description:"",methods:[],displayName:"TextFieldBase",props:{ref:{required:!1,tsType:{name:"Ref",elements:[{name:"HTMLInputElement"}],raw:"Ref<HTMLInputElement>"},description:""},input:{required:!0,tsType:{name:"ReactNode"},description:"The input element"},showCharacterCount:{required:!1,tsType:{name:"boolean"},description:"Whether a character count should be displayed inside the field description."}},composes:["PropsWithChildren"]};export{pe as $,Y as T};
