import{S as a,O as l}from"./Option-CI3IAeYt.js";import{R as t}from"./index-uCp2LrAq.js";import{L as n}from"./Label-BfZsFn3a.js";import s from"./Default.stories-BcWbHRIZ.js";import"./PropsContextProvider-DJl9unei.js";import"./index-CqLFpzzG.js";import"./clsx-B-dksMZM.js";import"./FormField.module-B1Ek3pwS.js";import"./IconApp-DZ6iFK1V.js";import"./_commonjsHelpers-BosuxZz1.js";import"./flowComponent-D0hgC601.js";import"./index-BOkhicXD.js";import"./IconWarning-D5KLWx1O.js";import"./Form-CP-B8ZEw.js";import"./useFocusRing-DQ9q31uS.js";import"./useLabel-C-G_TB0Q.js";import"./useLabels-CrvI0Xse.js";import"./utils-DsDc2z3f.js";import"./Text-DAlZawmB.js";import"./PopoverTrigger-C35F8xkT.js";import"./OverlayTrigger-6VtsQuLn.js";import"./RSPContexts-CJnKmcd7.js";import"./OverlayArrow-C3Uw9j7L.js";import"./number-nHrFdSb-.js";import"./useLocalizedStringFormatter-CPyIEVee.js";import"./useControlledState-B8AA3oOY.js";import"./filterDOMProps-CeZl_uWj.js";import"./usePress-v15KrNwr.js";import"./FocusScope-tP5bytlL.js";import"./getScrollParent-CcmJp979.js";import"./VisuallyHidden-rZYQhwXt.js";import"./context-1gARON2y.js";import"./useSelector-CYhu1s7z.js";import"./Button-D3-i4KBG.js";import"./useFocusable-R-ZPDh0R.js";import"./Collection-CPOND5Y7.js";import"./Label-C3uTUzzd.js";import"./useSingleSelectListState-CigSESnd.js";import"./SelectionManager-BXcc41yp.js";import"./useEvent-YC2gB4eD.js";import"./Header-CFQsHu-x.js";import"./useFormReset-D51lDO-b.js";import"./useDragAndDrop-Ddpx_AkE.js";import"./Separator-DHXedzvY.js";import"./FieldDescription-C_JyU3ZG.js";import"./Text-EyCvEgnK.js";import"./EmulatedBoldText-DzNCZpDp.js";const ir={...s,title:"Form Controls/Select/Edge Cases"},r={render:e=>t.createElement(a,{...e},t.createElement(n,null,"Label"),Array(20).fill("").map((c,o)=>t.createElement(l,{key:o},"Option ",o+1)))};var m,p,i;r.parameters={...r.parameters,docs:{...(m=r.parameters)==null?void 0:m.docs,source:{originalSource:`{
  render: props => <Select {...props}>
      <Label>Label</Label>
      {Array(20).fill("").map((value, index) => <Option key={index}>Option {index + 1}</Option>)}
    </Select>
}`,...(i=(p=r.parameters)==null?void 0:p.docs)==null?void 0:i.source}}};const er=["Default"];export{r as Default,er as __namedExportsOrder,ir as default};
