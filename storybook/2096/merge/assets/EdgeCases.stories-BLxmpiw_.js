import{j as r}from"./iframe-Tz0J7D4Y.js";import{O as m}from"./Option-ClHr-51a.js";import{S as e}from"./Select-BKbCVmq2.js";import{L as a}from"./Label-B5yMZfoe.js";import n from"./Default.stories-CkTQrWs0.js";import{d as l}from"./dummyText-CX_I_Wpl.js";import"./index-nuYtCEEu.js";import"./Popover-Js2RBZWb.js";import"./clsx-B-dksMZM.js";import"./context-CCjUHDCq.js";import"./flowComponent-D9iztwJS.js";import"./index-VdFQ9tny.js";import"./index-DcQDRvJj.js";import"./useStatic-BDAMVNvv.js";import"./OverlayContextProvider-0YowFgKZ.js";import"./Dialog-BCA3xQKB.js";import"./Button-BC9SKpFI.js";import"./utils-ja91N2Nx.js";import"./ProgressBar-netLLnC9.js";import"./Label-CPyZQCy0.js";import"./Hidden-DjVegiGf.js";import"./filterDOMProps-i7L6S0l1.js";import"./useLabel-Uehxuchb.js";import"./context-B1lt5Uf-.js";import"./NumberFormatter-DNR9MAW-.js";import"./LiveAnnouncer-Cy654hVN.js";import"./usePress-Dhdcn6rN.js";import"./useFocus-rnV-N6wP.js";import"./useFocusRing-DD4M3uYZ.js";import"./useFocusable-CEtDZmZ1.js";import"./RSPContexts-DMflUE_X.js";import"./OverlayArrow-Dm3PErwP.js";import"./useControlledState-JfMoTEl5.js";import"./Collection-CbkRGRtR.js";import"./CollectionBuilder-H4miGbTt.js";import"./SelectionIndicator-UdR--M88.js";import"./Separator-Dwu5egoh.js";import"./Text-c129sBMT.js";import"./SelectionManager-CcDSxweN.js";import"./useEvent-C9-diYfc.js";import"./useCollator-Sp-uU6d6.js";import"./FocusScope-DD4VjzQ6.js";import"./useLocalizedStringFormatter-C_7XcxTl.js";import"./VisuallyHidden-uhmmiNoS.js";import"./ClearPropsContextView-CQKiSpfA.js";import"./ClearPropsContext-DQdi6jL0.js";import"./IconWarning-GPTcuJJ8.js";import"./DragAndDrop-COr-y06n.js";import"./inertValue-Dz2Q2VU_.js";import"./useListState-BjWG1B67.js";import"./useFieldComponent-C0OSANtm.js";import"./react-children-utilities-q3rjAEhP.js";import"./useMakeFocusable-DcsG0xi9.js";import"./Form-CgZM-WfL.js";import"./intlStrings-ZMTSFH_M.js";import"./useFormValidation-BhAnQ22o.js";import"./useFormReset-Dr7kbm5c.js";import"./Label.module-CUYTf9Jc.js";import"./FieldDescription-DfQkIZob.js";import"./Text-C3A_eB8w.js";import"./browser-D-jX3MAX.js";import"./EmulatedBoldText-BtDnNRTP.js";import"./CountryOptions-BBsuSupO.js";import"./ContextualHelpTrigger-Bq_GJ0ZO.js";import"./OverlayTrigger-CPl48xIm.js";import"./ControlledNotification-36h8tVEY.js";import"./Button-DpdNCW8h.js";import"./LoadingSpinner-BMsTEO2Y.js";const Ar={...n,title:"Form Controls/Select/Edge Cases"},t={render:i=>r.jsxs(e,{...i,children:[r.jsx(a,{children:"Label"}),Array(20).fill("").map((s,o)=>r.jsxs(m,{children:["Option ",o+1]},o))]})},p={render:i=>r.jsxs(e,{...i,children:[r.jsx(a,{children:"Label"}),Array(4).fill("").map((s,o)=>r.jsxs(m,{children:["Option ",o+1," ",l.medium]},o))]})};t.parameters={...t.parameters,docs:{...t.parameters?.docs,source:{originalSource:`{
  render: props => <Select {...props}>
      <Label>Label</Label>
      {Array(20).fill("").map((value, index) => <Option key={index}>Option {index + 1}</Option>)}
    </Select>
}`,...t.parameters?.docs?.source}}};p.parameters={...p.parameters,docs:{...p.parameters?.docs,source:{originalSource:`{
  render: props => <Select {...props}>
      <Label>Label</Label>
      {Array(4).fill("").map((value, index) => <Option key={index}>
            Option {index + 1} {dummyText.medium}
          </Option>)}
    </Select>
}`,...p.parameters?.docs?.source}}};const Tr=["ManyOptions","LongTexts"];export{p as LongTexts,t as ManyOptions,Tr as __namedExportsOrder,Ar as default};
