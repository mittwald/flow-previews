import{j as r}from"./iframe-GtWYOLNc.js";import{O as m}from"./Option-8IFLLqcx.js";import{S as e}from"./Select-OzBunAFI.js";import{L as a}from"./Label-rRCJof1T.js";import n from"./Default.stories-DLIMIDna.js";import{d as l}from"./dummyText-CX_I_Wpl.js";import"./index-nuYtCEEu.js";import"./Popover-BloSQfLN.js";import"./clsx-B-dksMZM.js";import"./useOverlayController-Cm_PeV9X.js";import"./context-B79p2l6c.js";import"./flowComponent-BhbvfIbA.js";import"./index-DroEwyNc.js";import"./index-Do7K3gX4.js";import"./useStatic-BUau0uD4.js";import"./OverlayContextProvider-C3tl0ORG.js";import"./Dialog-E17SkaPF.js";import"./Button-DAFfpCNE.js";import"./utils-DD5Sc9KY.js";import"./ProgressBar-CdTHAJ2Y.js";import"./Label-CQFAMqNH.js";import"./Hidden-BU9Lcw6n.js";import"./filterDOMProps-i7L6S0l1.js";import"./useLabel-DTE1dj4A.js";import"./context-D40YBGtd.js";import"./NumberFormatter-DNR9MAW-.js";import"./LiveAnnouncer-Cy654hVN.js";import"./usePress-B3Z_0YqL.js";import"./useFocus-DFp-sRZK.js";import"./useFocusRing-DOaM9YXN.js";import"./useFocusable-jI0DLtpW.js";import"./RSPContexts-prl6X50T.js";import"./OverlayArrow-DIM14olf.js";import"./useControlledState-DlI3gMwx.js";import"./Collection-Ce3y52jr.js";import"./CollectionBuilder-Dp0_4f88.js";import"./SelectionIndicator-PIsyHCAq.js";import"./Separator-BLTRkzm5.js";import"./Text-CjcFKgn5.js";import"./SelectionManager-BxJ0cmnl.js";import"./useEvent-9aIM_XKO.js";import"./useCollator-CosXWie8.js";import"./FocusScope-CmjH0BfW.js";import"./useLocalizedStringFormatter-DE7ldODK.js";import"./VisuallyHidden-CMXGnTyG.js";import"./ClearPropsContextView-C2nQoxxe.js";import"./ClearPropsContext-DAA0VQnf.js";import"./IconWarning-D3qu7dXh.js";import"./DragAndDrop-C0_dcMwk.js";import"./inertValue-BtJ4ldTb.js";import"./useListState-C8UoR5VM.js";import"./useFieldComponent-CFSDwBJf.js";import"./react-children-utilities-BE-u8eGk.js";import"./useMakeFocusable-6t1tYcWi.js";import"./Form-CKR5JFnD.js";import"./intlStrings-ZMTSFH_M.js";import"./useFormValidation-BcoBpGbt.js";import"./useFormReset-C8pOBnDM.js";import"./Label.module-CUYTf9Jc.js";import"./FieldDescription-H7Ygmbn3.js";import"./Text-Bh_VtmGj.js";import"./browser-Dfdmz1Vs.js";import"./EmulatedBoldText-CB08elGP.js";import"./CountryOptions-CahqCE0X.js";import"./ContextualHelpTrigger-CQaiI0b-.js";import"./OverlayTrigger-C3VeFBdc.js";import"./ControlledNotification-YDt7-Pno.js";import"./Button-DAMH2RQe.js";import"./LoadingSpinner-BgxzSWV-.js";const Tr={...n,title:"Form Controls/Select/Edge Cases"},t={render:i=>r.jsxs(e,{...i,children:[r.jsx(a,{children:"Label"}),Array(20).fill("").map((s,o)=>r.jsxs(m,{children:["Option ",o+1]},o))]})},p={render:i=>r.jsxs(e,{...i,children:[r.jsx(a,{children:"Label"}),Array(4).fill("").map((s,o)=>r.jsxs(m,{children:["Option ",o+1," ",l.medium]},o))]})};t.parameters={...t.parameters,docs:{...t.parameters?.docs,source:{originalSource:`{
  render: props => <Select {...props}>
      <Label>Label</Label>
      {Array(20).fill("").map((value, index) => <Option key={index}>Option {index + 1}</Option>)}
    </Select>
}`,...t.parameters?.docs?.source}}};p.parameters={...p.parameters,docs:{...p.parameters?.docs,source:{originalSource:`{
  render: props => <Select {...props}>
      <Label>Label</Label>
      {Array(4).fill("").map((value, index) => <Option key={index}>
            Option {index + 1} {dummyText.medium}
          </Option>)}
    </Select>
}`,...p.parameters?.docs?.source}}};const Er=["ManyOptions","LongTexts"];export{p as LongTexts,t as ManyOptions,Er as __namedExportsOrder,Tr as default};
