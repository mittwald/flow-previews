import{j as r}from"./iframe-fd4MG1i8.js";import{O as m}from"./Option-BbJ9K_Yp.js";import{S as e}from"./Select-Bq9KFIaJ.js";import{L as a}from"./Label-DcZaDq0J.js";import n from"./Default.stories-BTFQ2t43.js";import{d as l}from"./dummyText-CX_I_Wpl.js";import"./index-nuYtCEEu.js";import"./Popover-8ITLePTm.js";import"./clsx-B-dksMZM.js";import"./context-BDEE0OGh.js";import"./flowComponent-CuscKuFt.js";import"./index-CeLeQ-qQ.js";import"./index-DLSCOdFN.js";import"./useStatic-Dbv9nI-W.js";import"./OverlayContextProvider-DW6y0HIP.js";import"./Dialog-CY6RGe7i.js";import"./Button-kSnC9Ww4.js";import"./utils-Cwcb_ph1.js";import"./ProgressBar-ClXxD8qd.js";import"./Label-Cas_0aCA.js";import"./Hidden-DL9_D-g9.js";import"./filterDOMProps-i7L6S0l1.js";import"./useLabel-DjhpIeNr.js";import"./context-Dbob8nST.js";import"./NumberFormatter-DNR9MAW-.js";import"./LiveAnnouncer-Cy654hVN.js";import"./usePress-P37V2JO8.js";import"./useFocus-BWTUKGe5.js";import"./useFocusRing-LifWKPgp.js";import"./useFocusable-9_bYGa78.js";import"./RSPContexts-GsdtxIJ1.js";import"./OverlayArrow-CL_DkMYI.js";import"./useControlledState-oGGPnlEt.js";import"./Collection-Di6dMgr3.js";import"./CollectionBuilder-BBm98ofW.js";import"./SelectionIndicator-CThd_G6x.js";import"./Separator-BBkfumaa.js";import"./Text-Ct_tO_6D.js";import"./SelectionManager--Q9mVMbg.js";import"./useEvent-5AoaQB1j.js";import"./useCollator-DNAEXkDs.js";import"./FocusScope-29AKamG2.js";import"./useLocalizedStringFormatter-CKY9Jmr8.js";import"./VisuallyHidden-CO0qVHJy.js";import"./ClearPropsContextView-DL6K5xjX.js";import"./ClearPropsContext-BW7itMIx.js";import"./IconWarning-9sqw3U7E.js";import"./DragAndDrop-qXih5h5S.js";import"./inertValue-C64o6t0J.js";import"./useListState-0Cac4LxN.js";import"./useFieldComponent-CTpQ-XZg.js";import"./react-children-utilities-CIQCctRB.js";import"./useMakeFocusable-DLeuMSJI.js";import"./Form-DF5wN6HS.js";import"./intlStrings-ZMTSFH_M.js";import"./useFormValidation-C8R7XiMh.js";import"./useFormReset-NfLpwngh.js";import"./Label.module-CUYTf9Jc.js";import"./FieldDescription-BNSJSS3y.js";import"./Text-Dcd0JdvI.js";import"./browser-Dh_0Zrut.js";import"./EmulatedBoldText-BOq1lZio.js";import"./CountryOptions-DyEXUW1U.js";import"./ContextualHelpTrigger-DhV-3kE7.js";import"./OverlayTrigger-DGIX4Xyz.js";import"./ControlledNotification-C0H0ICA9.js";import"./Button-VeSKQaWX.js";import"./LoadingSpinner-BL8icCZR.js";const Ar={...n,title:"Form Controls/Select/Edge Cases"},t={render:i=>r.jsxs(e,{...i,children:[r.jsx(a,{children:"Label"}),Array(20).fill("").map((s,o)=>r.jsxs(m,{children:["Option ",o+1]},o))]})},p={render:i=>r.jsxs(e,{...i,children:[r.jsx(a,{children:"Label"}),Array(4).fill("").map((s,o)=>r.jsxs(m,{children:["Option ",o+1," ",l.medium]},o))]})};t.parameters={...t.parameters,docs:{...t.parameters?.docs,source:{originalSource:`{
  render: props => <Select {...props}>
      <Label>Label</Label>
      {Array(20).fill("").map((value, index) => <Option key={index}>Option {index + 1}</Option>)}
    </Select>
}`,...t.parameters?.docs?.source}}};p.parameters={...p.parameters,docs:{...p.parameters?.docs,source:{originalSource:`{
  render: props => <Select {...props}>
      <Label>Label</Label>
      {Array(4).fill("").map((value, index) => <Option key={index}>
            Option {index + 1} {dummyText.medium}
          </Option>)}
    </Select>
}`,...p.parameters?.docs?.source}}};const Tr=["ManyOptions","LongTexts"];export{p as LongTexts,t as ManyOptions,Tr as __namedExportsOrder,Ar as default};
