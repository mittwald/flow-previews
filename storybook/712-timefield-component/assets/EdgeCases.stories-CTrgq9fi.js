import{S as a,O as l}from"./Option-BEF12SpQ.js";import{R as t}from"./index-Cs7sjTYM.js";import{L as n}from"./Label-H6f0-JrX.js";import s from"./Default.stories-CZJtw6Hx.js";import"./PropsContextProvider-BmJWDS_p.js";import"./index-C8LjR2Bd.js";import"./clsx-B-dksMZM.js";import"./FormField.module-jgORCpta.js";import"./IconApp-Cw6LIZ6L.js";import"./_commonjsHelpers-BosuxZz1.js";import"./flowComponent-C5nr8jLZ.js";import"./index-BU4L-DQy.js";import"./IconWarning-CYODic7s.js";import"./Form-DTFy3O7Q.js";import"./useFocusRing-CRCkdtud.js";import"./useLabel-D8UVq-XF.js";import"./useLabels-DMhdkBu1.js";import"./utils-CSHM5tWr.js";import"./Text-BNegcRvf.js";import"./PopoverTrigger-CMWz8wiC.js";import"./OverlayTrigger-uZ2IyM3m.js";import"./RSPContexts-BseA8goh.js";import"./OverlayArrow-B3YixoJg.js";import"./number-nHrFdSb-.js";import"./useLocalizedStringFormatter-BSNlGq_b.js";import"./useControlledState-B7K2eYzO.js";import"./filterDOMProps-CeZl_uWj.js";import"./usePress-Do5SRlXR.js";import"./FocusScope-CGKzeA_Y.js";import"./Hidden-BsXGu--s.js";import"./getScrollParent-CcmJp979.js";import"./VisuallyHidden-D4oQIDY4.js";import"./context-SbXjCjP8.js";import"./useSelector-r0W13MRO.js";import"./ListBox-BunI12Y_.js";import"./Collection-D5YsYnk7.js";import"./CollectionBuilder-bH4u-dJi.js";import"./DragAndDrop-Bssnb-st.js";import"./Header-DCsdZpIF.js";import"./Separator-N-TP_FuT.js";import"./useMenuTrigger-CdsZGpjS.js";import"./SelectionManager-D744F3FE.js";import"./useEvent-Be9f7BQw.js";import"./useCollator-BmGy_8lF.js";import"./useListState-D5D4zpK-.js";import"./Button-CkDWo4mt.js";import"./useFocusable-Dtk_6mL9.js";import"./Label-CaZe8gQk.js";import"./useSingleSelectListState-BotoawwL.js";import"./useFormReset-DlrFI1sj.js";import"./FieldDescription-BbBgdTsH.js";import"./Text-BeE63-Dr.js";import"./EmulatedBoldText-Dmze-Iwg.js";import"./Wrap-DQq6jo70.js";const dr={...s,title:"Form Controls/Select/Edge Cases"},r={render:e=>t.createElement(a,{...e},t.createElement(n,null,"Label"),Array(20).fill("").map((c,o)=>t.createElement(l,{key:o},"Option ",o+1)))};var m,p,i;r.parameters={...r.parameters,docs:{...(m=r.parameters)==null?void 0:m.docs,source:{originalSource:`{
  render: props => <Select {...props}>
      <Label>Label</Label>
      {Array(20).fill("").map((value, index) => <Option key={index}>Option {index + 1}</Option>)}
    </Select>
}`,...(i=(p=r.parameters)==null?void 0:p.docs)==null?void 0:i.source}}};const fr=["Default"];export{r as Default,fr as __namedExportsOrder,dr as default};
