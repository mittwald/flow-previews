import{$ as g,a as y}from"./utils-CgpzwoFP.js";import{$ as E}from"./Hidden-BsXGu--s.js";import{b as u}from"./index-C8LjR2Bd.js";import{$ as p}from"./filterDOMProps-CeZl_uWj.js";import{r as T,R as k}from"./index-Cs7sjTYM.js";import{c as w,b as H,a as O}from"./useFocusable-BkYgQ3nW.js";import{$ as S}from"./usePress-e9a-mRh7.js";function V(e,t){let{elementType:a="button",isDisabled:s,onPress:d,onPressStart:i,onPressEnd:r,onPressUp:o,onPressChange:c,preventFocusOnPress:n,allowFocusWhenDisabled:f,onClick:$,href:m,target:x,rel:h,type:P="button"}=e,b;a==="button"?b={type:P,disabled:s}:b={role:"button",tabIndex:s?void 0:0,href:a==="a"&&s?void 0:m,target:a==="a"?x:void 0,type:a==="input"?P:void 0,disabled:a==="input"?s:void 0,"aria-disabled":!s||a==="input"?void 0:s,rel:a==="a"?h:void 0};let{pressProps:v,isPressed:F}=S({onPressStart:i,onPressEnd:r,onPressChange:c,onPress:d,onPressUp:o,isDisabled:s,preventFocusOnPress:n,ref:t}),{focusableProps:l}=w(e,t);f&&(l.tabIndex=s?-1:l.tabIndex);let C=u(l,v,p(e,{labelable:!0}));return{isPressed:F,buttonProps:u(b,C,{"aria-haspopup":e["aria-haspopup"],"aria-expanded":e["aria-expanded"],"aria-controls":e["aria-controls"],"aria-pressed":e["aria-pressed"],onClick:D=>{$&&($(D),console.warn("onClick is deprecated, please use onPress"))}})}}const B=new Set(["form","formAction","formEncType","formMethod","formNoValidate","formTarget","name","value"]),I=T.createContext({});function N(e,t){[e,t]=g(e,t,I);let a=e,{buttonProps:s,isPressed:d}=V(e,t),{focusProps:i,isFocused:r,isFocusVisible:o}=H(e),{hoverProps:c,isHovered:n}=O(e),f=y({...e,values:{isHovered:n,isPressed:d,isFocused:r,isFocusVisible:o,isDisabled:e.isDisabled||!1},defaultClassName:"react-aria-Button"});return k.createElement("button",{...p(e,{propNames:B}),...u(s,i,c),...f,ref:t,slot:e.slot||void 0,"data-disabled":e.isDisabled||void 0,"data-pressed":a.isPressed||d||void 0,"data-hovered":n||void 0,"data-focused":r||void 0,"data-focus-visible":o||void 0})}const q=E(N);export{q as $,I as a};
