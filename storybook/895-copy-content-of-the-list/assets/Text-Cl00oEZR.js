import{R as t}from"./index-B-o1Wr-g.js";import{C as E,P}from"./PropsContextProvider-BHq6Fnml.js";import{i as T}from"./browser-B3hGj0u-.js";import{f as h}from"./flowComponent-SXQnFwcy.js";import{E as y}from"./EmulatedBoldText-1x_0FOGF.js";import{W as C}from"./Wrap-DQq6jo70.js";import{c as g}from"./clsx-B-dksMZM.js";import{u as k}from"./useAltKeySelectionProps-Dqsvf2Or.js";import{$ as w}from"./Text-R-rrVGxo.js";const N="flow--text",$="flow--text--light",b="flow--text--dark",a={text:N,light:$,dark:b},W=h("Text",o=>{const{children:c,className:i,elementType:e="span",emulateBoldWidth:p,refProp:f,color:r,...n}=o,s={ref:f,...k(n)},x=g(a.text,r&&a[r],i),m={...n,className:x},d={Link:{inline:!0}},l=t.createElement(P,{props:d},t.createElement(C,{if:p},t.createElement(y,null,c)));if(!o.slot){const u=e;return t.createElement(u,{...s,...m},l)}return T(typeof e=="string","'elementType' in Text component must be of type string"),t.createElement(E,null,t.createElement(w,{...s,...m,elementType:e},l))});W.__docgenInfo={description:"",methods:[],displayName:"Text"};export{W as T};
