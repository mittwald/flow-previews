import{j as r}from"./iframe-9LT5pwxo.js";import{O as m}from"./Option-BybRtKV-.js";import{S as e}from"./Select-B2s1bjMu.js";import{L as a}from"./Label-Cy0HO6mF.js";import n from"./Default.stories-y4-BAvpJ.js";import{d as l}from"./dummyText-CX_I_Wpl.js";import"./index-nuYtCEEu.js";import"./Popover-BeAbZr2-.js";import"./clsx-B-dksMZM.js";import"./context-CNHQEL1v.js";import"./flowComponent-CmrMiIfZ.js";import"./index-CJEFfs1t.js";import"./index-B4OxUaac.js";import"./useStatic-C20s3RtG.js";import"./OverlayContextProvider-BxKLYzMZ.js";import"./Dialog-CLeuoHpB.js";import"./Button-BRQOtLOr.js";import"./utils-C12iYS2x.js";import"./ProgressBar-DUkmnmeC.js";import"./Label-B9A8CQ6N.js";import"./Hidden-Dc5yMvqI.js";import"./filterDOMProps-i7L6S0l1.js";import"./useLabel-D0_ysNiP.js";import"./context-CZZdPtMN.js";import"./NumberFormatter-DNR9MAW-.js";import"./LiveAnnouncer-Cy654hVN.js";import"./usePress-CYkWbbQS.js";import"./useFocus-CGIGFm0L.js";import"./useFocusRing-BpS4vJuf.js";import"./useFocusable-6Pd0pdJi.js";import"./RSPContexts-D4jozd1E.js";import"./OverlayArrow-CBGQsLGC.js";import"./useControlledState-B0dx1ah2.js";import"./Collection-e6qlJrU1.js";import"./CollectionBuilder-Bz8h8tJk.js";import"./SelectionIndicator-CcfS7mad.js";import"./Separator-DiqHC5hw.js";import"./Text-cT0V7Crl.js";import"./SelectionManager-B4R1-nwv.js";import"./useEvent-CmmFmHFu.js";import"./useCollator-D0xJkZLY.js";import"./FocusScope-ahtwD87J.js";import"./useLocalizedStringFormatter-Ay0utv6w.js";import"./VisuallyHidden-kbtTP9xl.js";import"./ClearPropsContextView-CturT0aU.js";import"./ClearPropsContext-BgV1DGsr.js";import"./IconWarning-BGmK8I3p.js";import"./DragAndDrop-DI7MPRX0.js";import"./inertValue-BZlmPuQQ.js";import"./useListState-BuheEKsI.js";import"./useFieldComponent-FBKhS2uw.js";import"./react-children-utilities-CGBnGU1K.js";import"./useMakeFocusable-3ac7XBnQ.js";import"./Form-PBwv22gS.js";import"./intlStrings-ZMTSFH_M.js";import"./useFormValidation-gXwoIgM4.js";import"./useFormReset-DsyYy3rG.js";import"./Label.module-CUYTf9Jc.js";import"./FieldDescription-BLZvXXGp.js";import"./Text-FZjxGLxv.js";import"./browser-Be7wxfSs.js";import"./EmulatedBoldText-z8AdBhol.js";import"./CountryOptions-a8g5sNh3.js";import"./ContextualHelpTrigger-Btf8LcVG.js";import"./OverlayTrigger-CKLv7_gg.js";import"./ControlledNotification-Dj9ZPYyt.js";import"./Button-DgX4Ha9j.js";import"./LoadingSpinner-7jpPXpdG.js";const Ar={...n,title:"Form Controls/Select/Edge Cases"},t={render:i=>r.jsxs(e,{...i,children:[r.jsx(a,{children:"Label"}),Array(20).fill("").map((s,o)=>r.jsxs(m,{children:["Option ",o+1]},o))]})},p={render:i=>r.jsxs(e,{...i,children:[r.jsx(a,{children:"Label"}),Array(4).fill("").map((s,o)=>r.jsxs(m,{children:["Option ",o+1," ",l.medium]},o))]})};t.parameters={...t.parameters,docs:{...t.parameters?.docs,source:{originalSource:`{
  render: props => <Select {...props}>
      <Label>Label</Label>
      {Array(20).fill("").map((value, index) => <Option key={index}>Option {index + 1}</Option>)}
    </Select>
}`,...t.parameters?.docs?.source}}};p.parameters={...p.parameters,docs:{...p.parameters?.docs,source:{originalSource:`{
  render: props => <Select {...props}>
      <Label>Label</Label>
      {Array(4).fill("").map((value, index) => <Option key={index}>
            Option {index + 1} {dummyText.medium}
          </Option>)}
    </Select>
}`,...p.parameters?.docs?.source}}};const Tr=["ManyOptions","LongTexts"];export{p as LongTexts,t as ManyOptions,Tr as __namedExportsOrder,Ar as default};
