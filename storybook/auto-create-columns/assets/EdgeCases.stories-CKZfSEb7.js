import{L as d}from"./LabeledValue-Ab1r6U20.js";import C from"./Default.stories-aV3B5BTP.js";import{d as e}from"./dummyText-CX_I_Wpl.js";import{L as u}from"./Label-BFoBZBqy.js";import{C as c}from"./Content-BRrO9N7C.js";import{R as t}from"./index-B-o1Wr-g.js";import{C as L}from"./CopyButton-CYzrj0U0.js";import"./clsx-B-dksMZM.js";import"./PropsContextProvider-BHq6Fnml.js";import"./index-ynQ6n1pc.js";import"./InlineCode-tVMCqBe_.js";import"./Link-N5fl_-fX.js";import"./flowComponent-SXQnFwcy.js";import"./index-DolzVqEf.js";import"./_commonjsHelpers-Cpj98o6Y.js";import"./IconApp--rto3B0B.js";import"./IconWarning--ZE28x2f.js";import"./useLocalizedStringFormatter-BQr1rA-c.js";import"./utils-CCebJm36.js";import"./filterDOMProps-CeZl_uWj.js";import"./usePress-C3EQNDer.js";import"./useFocusRing-CTDVvBmm.js";import"./useFocusable-CjESOWAx.js";import"./Label-BFvRcNt5.js";import"./Hidden-CRdWNeH8.js";import"./Wrap-DQq6jo70.js";import"./Button-yJDb9wt-.js";import"./Text-CemaETXH.js";import"./EmulatedBoldText-1x_0FOGF.js";import"./Text-CByKVUtS.js";import"./LoadingSpinner-DOxxHnS_.js";import"./Button-DpaYcQnV.js";import"./ProgressBar-C7LzY9et.js";import"./useLabel-DrlXsFf-.js";import"./NumberFormatter-DNR9MAW-.js";import"./LiveAnnouncer-CeCcBDbP.js";import"./Tooltip-zyFT3NFh.js";import"./OverlayArrow-BMY-498z.js";import"./useControlledState-BgxdDqm0.js";import"./react-children-utilities-D14ImiYi.js";import"./Action-lrZohdE4.js";import"./context-HWij4CCA.js";import"./useSelector-iQqgW7gO.js";import"./getActionGroupSlot-Ctir2FTR.js";import"./dynamic-DKDa4OpU.js";const at={title:"Content/LabeledValue/Edge Cases",...C},r={render:m=>t.createElement(d,{...m},t.createElement(u,null,e.medium),t.createElement(c,null,e.short),t.createElement(L,{text:e.short}))},o={render:m=>t.createElement(d,{...m},t.createElement(u,null,e.medium),t.createElement(c,null,e.long),t.createElement(L,{text:e.long}))};var p,n,a;r.parameters={...r.parameters,docs:{...(p=r.parameters)==null?void 0:p.docs,source:{originalSource:`{
  render: props => <LabeledValue {...props}>
      <Label>{dummyText.medium}</Label>
      <Content>{dummyText.short}</Content>
      <CopyButton text={dummyText.short} />
    </LabeledValue>
}`,...(a=(n=r.parameters)==null?void 0:n.docs)==null?void 0:a.source}}};var i,l,s;o.parameters={...o.parameters,docs:{...(i=o.parameters)==null?void 0:i.docs,source:{originalSource:`{
  render: props => <LabeledValue {...props}>
      <Label>{dummyText.medium}</Label>
      <Content>{dummyText.long}</Content>
      <CopyButton text={dummyText.long} />
    </LabeledValue>
}`,...(s=(l=o.parameters)==null?void 0:l.docs)==null?void 0:s.source}}};const it=["LongLabel","LongContent"];export{o as LongContent,r as LongLabel,it as __namedExportsOrder,at as default};
