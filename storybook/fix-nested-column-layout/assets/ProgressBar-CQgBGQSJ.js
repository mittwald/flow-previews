import{R as s}from"./index-B-o1Wr-g.js";import{c as u}from"./clsx-B-dksMZM.js";import{P as w}from"./flowComponent-Bi8R7MU8.js";import{$ as h}from"./useLocalizedStringFormatter-BQr1rA-c.js";import{a as $,b as x}from"./ProgressBar-BQAJCbMD.js";const v="flow--progress-bar",N="flow--progress-bar--label",y="flow--progress-bar--value",B="flow--progress-bar--bar",E="flow--progress-bar--fill",P="flow--progress-bar--info",z="flow--progress-bar--success",T="flow--progress-bar--danger",V="flow--progress-bar--warning",e={progressBar:v,label:N,value:y,bar:B,fill:E,"size-s":"flow--progress-bar--size-s",info:P,success:z,danger:T,warning:V},C={"de-DE":{"progressBar.of":"von"},"en-EN":{"progressBar.of":"of"}},q=r=>{const{children:t,className:l,status:n="info",showMaxValue:c,size:i="m",...f}=r,m=u(l,e.progressBar,e[`size-${i}`],e[n]),p=h(C),b=$(r.formatOptions),a=c&&r.maxValue?b.format(r.maxValue):void 0,d={Label:{className:e.label,unstyled:!0}};return s.createElement(x,{className:m,...f},({percentage:g,valueText:o})=>s.createElement(w,{props:d},t,s.createElement("span",{className:e.value},a?`${o} ${p.format("progressBar.of")} ${a}`:o),s.createElement("div",{className:e.bar},s.createElement("div",{className:e.fill,style:{width:g+"%"}}))))};q.__docgenInfo={description:"",methods:[],displayName:"ProgressBar",props:{status:{required:!1,tsType:{name:"T"},description:"The elements status"},showMaxValue:{required:!1,tsType:{name:"boolean"},description:"Whether the max value should be displayed."},size:{required:!1,tsType:{name:"union",raw:'"s" | "m"',elements:[{name:"literal",value:'"s"'},{name:"literal",value:'"m"'}]},description:'The size variant of the progress bar @default "m"'}},composes:["PropsWithChildren"]};export{q as P};
