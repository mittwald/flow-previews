import{S as a,O as l}from"./Option-DTygKQld.js";import{R as t}from"./index-Cs7sjTYM.js";import{L as n}from"./Label-BtqPYbwi.js";import s from"./Default.stories-CbbHcPjG.js";import"./PropsContextProvider-58HgA8rU.js";import"./index-C8LjR2Bd.js";import"./clsx-B-dksMZM.js";import"./FormField.module-Zv6bgqtc.js";import"./IconApp-B0Dj3kfc.js";import"./_commonjsHelpers-BosuxZz1.js";import"./flowComponent-BBjFuuMW.js";import"./index-BU4L-DQy.js";import"./IconWarning-GsiZwWQP.js";import"./Form-DbuIRMOS.js";import"./useFocusable-BkYgQ3nW.js";import"./utils-CgpzwoFP.js";import"./useLabel-D8UVq-XF.js";import"./useLabels-DMhdkBu1.js";import"./Text-BgIWd_-0.js";import"./PopoverTrigger-DjDGlYqQ.js";import"./OverlayTrigger-CmNfBoLd.js";import"./RSPContexts-BseA8goh.js";import"./OverlayArrow-DV_Q4mkz.js";import"./number-nHrFdSb-.js";import"./useLocalizedStringFormatter-J1nK3MOF.js";import"./useControlledState-B7K2eYzO.js";import"./filterDOMProps-CeZl_uWj.js";import"./usePress-e9a-mRh7.js";import"./FocusScope-BciiliGi.js";import"./Hidden-BsXGu--s.js";import"./getScrollParent-CcmJp979.js";import"./VisuallyHidden-DH_5EOkC.js";import"./context-M9vyqQcO.js";import"./useSelector-CbMNYetP.js";import"./ListBox-Bix4Fn0C.js";import"./Collection-Ds0ZPgJZ.js";import"./CollectionBuilder-DEbmrEtK.js";import"./DragAndDrop-Bssnb-st.js";import"./Header-BpzwameQ.js";import"./Separator-yosXA4ie.js";import"./useMenuTrigger-DmcgIWvq.js";import"./SelectionManager-CMHB_EVK.js";import"./useEvent-Be9f7BQw.js";import"./useListState-CFHQlgei.js";import"./Button-inQNMO4w.js";import"./Label-BRZ8BO2K.js";import"./useSingleSelectListState-PmR0Kswu.js";import"./useFormReset-DlrFI1sj.js";import"./FieldDescription-C0SH_iMK.js";import"./Text-JYrEPxJj.js";import"./EmulatedBoldText-Dmze-Iwg.js";import"./Wrap-DQq6jo70.js";const sr={...s,title:"Form Controls/Select/Edge Cases"},r={render:e=>t.createElement(a,{...e},t.createElement(n,null,"Label"),Array(20).fill("").map((c,o)=>t.createElement(l,{key:o},"Option ",o+1)))};var m,p,i;r.parameters={...r.parameters,docs:{...(m=r.parameters)==null?void 0:m.docs,source:{originalSource:`{
  render: props => <Select {...props}>
      <Label>Label</Label>
      {Array(20).fill("").map((value, index) => <Option key={index}>Option {index + 1}</Option>)}
    </Select>
}`,...(i=(p=r.parameters)==null?void 0:p.docs)==null?void 0:i.source}}};const cr=["Default"];export{r as Default,cr as __namedExportsOrder,sr as default};
