import{j as r}from"./iframe-BO4how7V.js";import{O as m}from"./Option-C25Z_9sN.js";import{S as e}from"./Select-D3uyunqG.js";import{L as a}from"./Label-Dg0lhbqP.js";import n from"./Default.stories-Cx7gX5_N.js";import{d as l}from"./dummyText-CX_I_Wpl.js";import"./index-nuYtCEEu.js";import"./Popover-DBKwSEaj.js";import"./clsx-B-dksMZM.js";import"./context-DS1PliZx.js";import"./flowComponent-_BWaP51b.js";import"./index-B3PYSYUw.js";import"./index-CzMnHAtb.js";import"./useStatic-BYOxqZVF.js";import"./OverlayContextProvider-B4IpX5aH.js";import"./Dialog-9TwJqweV.js";import"./Button-T2VJnm-n.js";import"./utils-BpiWkIEZ.js";import"./ProgressBar-Cb_Q8Aey.js";import"./Label-HRe2PJ1I.js";import"./Hidden-cuI6d2d2.js";import"./filterDOMProps-i7L6S0l1.js";import"./useLabel-R_XjJcRU.js";import"./context-n99Hur2q.js";import"./NumberFormatter-DNR9MAW-.js";import"./LiveAnnouncer-Cy654hVN.js";import"./usePress-C-n8mYYh.js";import"./useFocus-CFrGhCIR.js";import"./useFocusRing-cZUm55wA.js";import"./useFocusable-Dm6zCBge.js";import"./RSPContexts-C8zlTsZJ.js";import"./OverlayArrow-6T1AUm1N.js";import"./useControlledState-Dy2CU0s2.js";import"./Collection-7Jhx6ozR.js";import"./CollectionBuilder-NvmcR0Ec.js";import"./SelectionIndicator-qPgcj5gy.js";import"./Separator-CDyVGVx6.js";import"./Text-BwppUNzg.js";import"./SelectionManager-CUJzsbBx.js";import"./useEvent-BsUSX18g.js";import"./useCollator-fJkQzVou.js";import"./FocusScope-BDHPNMgd.js";import"./useLocalizedStringFormatter-Byhh4L4X.js";import"./VisuallyHidden-BldPGQAk.js";import"./ClearPropsContextView-BZw5hC3x.js";import"./ClearPropsContext-Cr48Xe01.js";import"./IconWarning-riXPckyc.js";import"./DragAndDrop-CA-pEdzD.js";import"./inertValue-D7c5e5v_.js";import"./useListState-LOo7WLKi.js";import"./useFieldComponent-CjWlILZl.js";import"./react-children-utilities-aRBIKRzv.js";import"./useMakeFocusable-D5dCcyqU.js";import"./Form-hZ8SLhDT.js";import"./intlStrings-ZMTSFH_M.js";import"./useFormValidation-BHRl0fwc.js";import"./useFormReset-DKBI04Qj.js";import"./Label.module-CUYTf9Jc.js";import"./FieldDescription-CJgVFelr.js";import"./Text-k4VuksKp.js";import"./browser-9RCZAQdm.js";import"./EmulatedBoldText-B4e_rnhx.js";import"./CountryOptions-CBV9H5K5.js";import"./ContextualHelpTrigger-D03xwq79.js";import"./OverlayTrigger-CxD_iiL6.js";import"./ControlledNotification-2HQhcMSc.js";import"./Button-BRSyykRx.js";import"./LoadingSpinner-Bt5VpGJB.js";const Ar={...n,title:"Form Controls/Select/Edge Cases"},t={render:i=>r.jsxs(e,{...i,children:[r.jsx(a,{children:"Label"}),Array(20).fill("").map((s,o)=>r.jsxs(m,{children:["Option ",o+1]},o))]})},p={render:i=>r.jsxs(e,{...i,children:[r.jsx(a,{children:"Label"}),Array(4).fill("").map((s,o)=>r.jsxs(m,{children:["Option ",o+1," ",l.medium]},o))]})};t.parameters={...t.parameters,docs:{...t.parameters?.docs,source:{originalSource:`{
  render: props => <Select {...props}>
      <Label>Label</Label>
      {Array(20).fill("").map((value, index) => <Option key={index}>Option {index + 1}</Option>)}
    </Select>
}`,...t.parameters?.docs?.source}}};p.parameters={...p.parameters,docs:{...p.parameters?.docs,source:{originalSource:`{
  render: props => <Select {...props}>
      <Label>Label</Label>
      {Array(4).fill("").map((value, index) => <Option key={index}>
            Option {index + 1} {dummyText.medium}
          </Option>)}
    </Select>
}`,...p.parameters?.docs?.source}}};const Tr=["ManyOptions","LongTexts"];export{p as LongTexts,t as ManyOptions,Tr as __namedExportsOrder,Ar as default};
