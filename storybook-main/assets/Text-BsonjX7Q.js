import{j as t}from"./jsx-runtime-D_zvdyIk.js";import"./index-CgfFrydU.js";import{f as h,C as j,P as y,W as T}from"./PropsContextProvider-B9e9kKsf.js";import{i as u}from"./browser-B1A6F7LW.js";import{E as C}from"./EmulatedBoldText-KnQ_Srvn.js";import{c as $}from"./clsx-B-dksMZM.js";import{$ as b}from"./Text-I7rzu-gq.js";const E="flow--text",N="flow--text--light",P="flow--text--dark",k="flow--text--icon",e={text:E,light:N,dark:P,icon:k,"align-start":"flow--text--align-start","align-center":"flow--text--align-center","align-end":"flow--text--align-end","wrap-wrap":"flow--text--wrap-wrap","wrap-balance":"flow--text--wrap-balance","wrap-pretty":"flow--text--wrap-pretty"},W=h("Text",r=>{const{children:p,className:x,elementType:o="span",emulateBoldWidth:m,ref:n,color:a,align:s="start",wrap:l,...f}=r,d=$(e.text,a&&e[a],s&&e[`align-${s}`],l&&e[`wrap-${l}`],x),i={...f,className:d},w={Link:{inline:!0},Icon:{className:e.icon}},c=t.jsx(y,{props:w,children:t.jsx(T,{if:m,children:t.jsx(C,{children:p})})});if(!r.slot){const g=o;return t.jsx(g,{...i,ref:n,children:c})}return u(typeof o=="string","'elementType' in Text component must be of type string"),t.jsx(j,{children:t.jsx(b,{...i,elementType:o,ref:n,children:c})})});W.__docgenInfo={description:`@flr-generate all
@flr-clear-props-context`,methods:[],displayName:"Text"};export{W as T};
