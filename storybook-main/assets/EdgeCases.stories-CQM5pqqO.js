import{S as a,O as l}from"./Option-BZUq4lez.js";import{R as t}from"./index-uCp2LrAq.js";import{L as n}from"./Label-D2Sv1qFy.js";import s from"./Default.stories-RsAyXWcE.js";import"./PropsContextProvider-RdMO5ekw.js";import"./index-CFQDndEx.js";import"./clsx-B-dksMZM.js";import"./FormField.module-DqhNxi8a.js";import"./IconApp-DUxfmIxA.js";import"./_commonjsHelpers-BosuxZz1.js";import"./flowComponent-BFRLwLPm.js";import"./index-BOkhicXD.js";import"./IconWarning-Yeg5Nxqq.js";import"./Form-BOwpWbru.js";import"./useFocusable-DpEA8Hsr.js";import"./utils-DZgOXw50.js";import"./useLabel-D9TuMkUI.js";import"./useLabels-POLqFEYE.js";import"./Text-D6Zjnbf0.js";import"./PopoverTrigger-ALJkZwQj.js";import"./OverlayTrigger-BlMVyKtk.js";import"./RSPContexts-CJnKmcd7.js";import"./OverlayArrow-BCqBDIej.js";import"./number-nHrFdSb-.js";import"./useLocalizedStringFormatter-CHReNXSI.js";import"./useControlledState-B8AA3oOY.js";import"./filterDOMProps-CeZl_uWj.js";import"./usePress-CaJD4Kpr.js";import"./FocusScope-Bpk85l6Y.js";import"./getScrollParent-CcmJp979.js";import"./VisuallyHidden-DWE0U9Im.js";import"./context-D46ldUnu.js";import"./useSelector-C4nhZgtB.js";import"./Button-D4VcI4Uu.js";import"./Collection-BZQFS83W.js";import"./Label-BQk6lJ-q.js";import"./useSingleSelectListState-BWTp8L38.js";import"./SelectionManager-C0vcxxFt.js";import"./useEvent-BUAZZNDw.js";import"./useMenuTrigger-DOnI4oCH.js";import"./useFormReset-Bt7ImmB-.js";import"./useDragAndDrop-Ddpx_AkE.js";import"./Header-CL3U4zra.js";import"./Separator-DG_EV7vp.js";import"./FieldDescription-DNubECsY.js";import"./Text-CL2Qswkx.js";import"./EmulatedBoldText-DzNCZpDp.js";import"./Wrap-DQq6jo70.js";const er={...s,title:"Form Controls/Select/Edge Cases"},r={render:e=>t.createElement(a,{...e},t.createElement(n,null,"Label"),Array(20).fill("").map((c,o)=>t.createElement(l,{key:o},"Option ",o+1)))};var m,p,i;r.parameters={...r.parameters,docs:{...(m=r.parameters)==null?void 0:m.docs,source:{originalSource:`{
  render: props => <Select {...props}>
      <Label>Label</Label>
      {Array(20).fill("").map((value, index) => <Option key={index}>Option {index + 1}</Option>)}
    </Select>
}`,...(i=(p=r.parameters)==null?void 0:p.docs)==null?void 0:i.source}}};const ar=["Default"];export{r as Default,ar as __namedExportsOrder,er as default};
