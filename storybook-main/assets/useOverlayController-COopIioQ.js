var c=Object.defineProperty;var p=(t,e,s)=>e in t?c(t,e,{enumerable:!0,configurable:!0,writable:!0,value:s}):t[e]=s;var i=(t,e,s)=>(p(t,typeof e!="symbol"?e+"":e,s),s);import{r as o}from"./index-uCp2LrAq.js";import{b as O,m as d,o as b,a as n}from"./flowComponent-C-TnvXr9.js";const l=o.createContext(void 0),v=l.Provider,C=(t,e=[])=>{const[s,r]=o.useState(t());return o.useEffect(()=>O(()=>{r(t())}),e),s};class u{constructor(e=!1){i(this,"isOpen");d(this,{isOpen:b,open:n.bound,close:n.bound,toggle:n.bound,setOpen:n.bound}),this.isOpen=e}static useNew(e){return o.useRef(new u(e)).current}open(){this.isOpen=!0}close(){this.isOpen=!1}toggle(){this.isOpen=!this.isOpen}setOpen(e){this.isOpen=e}useIsOpen(){return C(()=>this.isOpen)}}const x=(t={})=>{const{reuseControllerFromContext:e=!0,defaultOpen:s}=t,r=u.useNew(s),a=o.useContext(l);return e&&a?a:r};export{v as O,C as a,x as u};
