import{m as e,B as a}from"./Default.stories-N60a1jVl.js";import{R as t}from"./index-Cs7sjTYM.js";import{d as s}from"./dummyText-CX_I_Wpl.js";import{T as n}from"./Text-ZlCHfUor.js";import{L as d}from"./Label-CEl6Xbkq.js";import"./clsx-B-dksMZM.js";import"./PropsContextProvider-BmJWDS_p.js";import"./index-C8LjR2Bd.js";import"./flowComponent-DcwGE90j.js";import"./index-Cf-03bMR.js";import"./_commonjsHelpers-BosuxZz1.js";import"./Button-Ckc9ojUU.js";import"./IconApp-BxFtnrXv.js";import"./IconWarning-D_3gEtfh.js";import"./Wrap-DQq6jo70.js";import"./LoadingSpinner-CxzAQUXO.js";import"./useLocalizedStringFormatter-BSNlGq_b.js";import"./Button-DHNhLPwP.js";import"./utils-DI5tH0Ou.js";import"./Hidden-DMUPAT4b.js";import"./filterDOMProps-CeZl_uWj.js";import"./useFocusable-BZYwbtlG.js";import"./usePress-DMpbNI7r.js";import"./ContextMenuTrigger-DGBUJ-pO.js";import"./ContextMenu.module-68N5lvfm.js";import"./PopoverTrigger-BcMC0hzg.js";import"./OverlayTrigger-K2wbwegh.js";import"./RSPContexts-BseA8goh.js";import"./OverlayArrow-BcV34qBK.js";import"./number-nHrFdSb-.js";import"./useControlledState-B7K2eYzO.js";import"./FocusScope-BPYREqet.js";import"./getScrollParent-CcmJp979.js";import"./useLabels-DMhdkBu1.js";import"./VisuallyHidden-D3JK2BHS.js";import"./context-D0HfXMZp.js";import"./useSelector-BfSafOy1.js";import"./Action-Q0FsQ8tY.js";import"./dynamic-DKDa4OpU.js";import"./deepFindOfType-BylCc5Xi.js";import"./react-children-utilities-CdZndyK3.js";import"./Collection-BSVICx61.js";import"./CollectionBuilder-C1pJ_vaJ.js";import"./Header-HCQ-zEiT.js";import"./Separator-D6MrK9aZ.js";import"./Text--Nm9EVqj.js";import"./useMenuTrigger-BzyNHMqx.js";import"./SelectionManager-BxzAQFhr.js";import"./useEvent-Be9f7BQw.js";import"./useCollator-BmGy_8lF.js";import"./storyBackgrounds-BHxp8d-8.js";import"./EmulatedBoldText-Dmze-Iwg.js";import"./Label-D5u8zl72.js";const dr={...e,title:"Status/Badge/Edge Cases"},r={render:i=>t.createElement(a,{...i},t.createElement(d,null,"Scope"),t.createElement(n,null,s.long))};var o,m,p;r.parameters={...r.parameters,docs:{...(o=r.parameters)==null?void 0:o.docs,source:{originalSource:`{
  render: props => <Badge {...props}>
      <Label>Scope</Label>
      <Text>{dummyText.long}</Text>
    </Badge>
}`,...(p=(m=r.parameters)==null?void 0:m.docs)==null?void 0:p.source}}};const cr=["LongText"];export{r as LongText,cr as __namedExportsOrder,dr as default};
