import{j as r}from"./jsx-runtime-D_zvdyIk.js";import"./index-BZISi7jw.js";import{P as e,a as s}from"./Popover-CQ23e3r3.js";import{B as a}from"./Button-BDlP74xq.js";import{d as t}from"./dummyText-CX_I_Wpl.js";import g from"./Default.stories-C1nQHH31.js";import"./_commonjsHelpers-CqkleIqs.js";import"./clsx-B-dksMZM.js";import"./MenuTrigger-FnRKsl8n.js";import"./context-Z26u4tY9.js";import"./flowComponent-C6bHOsmH.js";import"./index-BBXbSWyk.js";import"./index-C0qn59OO.js";import"./index-IBhSrjl6.js";import"./useStatic-BHWj4WSG.js";import"./Dialog-BV8uMRwe.js";import"./Button-BBWo3kGM.js";import"./utils-CzVyYWZn.js";import"./ProgressBar-B3uNJn7L.js";import"./Label-RYyxMwZH.js";import"./Hidden-DBxI3g91.js";import"./filterDOMProps-CeZl_uWj.js";import"./useLabel-Hju3pN3c.js";import"./useLocalizedStringFormatter-D6AjEcek.js";import"./NumberFormatter-DNR9MAW-.js";import"./LiveAnnouncer-CeCcBDbP.js";import"./useFocusable-CdO2YIL_.js";import"./useFocusRing-DzGSygZM.js";import"./usePress-DZCrAIzv.js";import"./RSPContexts-BEYwq1Zw.js";import"./OverlayArrow-CByfAkhe.js";import"./useControlledState-4nfZ-XMX.js";import"./Collection-DxADqCjP.js";import"./CollectionBuilder-D73R-Ru4.js";import"./Separator-DNY_h6GP.js";import"./Text-PTaPc_Ci.js";import"./SelectionManager-D_sMwGle.js";import"./useEvent-CPQp9FCP.js";import"./useCollator-C0JtIjTO.js";import"./FocusScope-BnLtY9jQ.js";import"./VisuallyHidden-DJvehTyr.js";import"./DialogTriggerView-CFUMUlaO.js";import"./IconApp-B-TnySLn.js";import"./IconWarning-BB1u60Fs.js";import"./Wrap-DQq6jo70.js";import"./Text-C9p5wZii.js";import"./browser-B1A6F7LW.js";import"./EmulatedBoldText-BfYT5ZHF.js";import"./LoadingSpinner-DU9wsl3-.js";const eo={...g,title:"Overlays/Popover/Edge Cases",component:e},o={render:n=>r.jsxs(s,{children:[r.jsx(a,{children:"Trigger popover"}),r.jsxs(e,{...n,placement:"bottom right",children:[t.long,t.long,t.long]})]})};var m,p,i;o.parameters={...o.parameters,docs:{...(m=o.parameters)==null?void 0:m.docs,source:{originalSource:`{
  render: props => <PopoverTrigger>
      <Button>Trigger popover</Button>
      <Popover {...props} placement="bottom right">
        {dummyText.long}
        {dummyText.long}
        {dummyText.long}
      </Popover>
    </PopoverTrigger>
}`,...(i=(p=o.parameters)==null?void 0:p.docs)==null?void 0:i.source}}};const no=["LongContent"];export{o as LongContent,no as __namedExportsOrder,eo as default};
