import{R as t}from"./index-Cs7sjTYM.js";import{a as g,C as d,M as o}from"./ContextMenuTrigger-CR9LJgLZ.js";import{B as x}from"./Button-zGGzAHNA.js";import M from"./Default.stories-BzGSnEfW.js";import{d as i}from"./dummyText-CX_I_Wpl.js";import"./_commonjsHelpers-BosuxZz1.js";import"./ContextMenu.module-68N5lvfm.js";import"./flowComponent-B2GRt226.js";import"./PropsContextProvider-BmJWDS_p.js";import"./index-C8LjR2Bd.js";import"./clsx-B-dksMZM.js";import"./index-Cf-03bMR.js";import"./PopoverTrigger-LZZlZkfW.js";import"./OverlayTrigger-3DzVKfO2.js";import"./utils-DI5tH0Ou.js";import"./RSPContexts-BseA8goh.js";import"./OverlayArrow-BcV34qBK.js";import"./useFocusable-BZYwbtlG.js";import"./number-nHrFdSb-.js";import"./useLocalizedStringFormatter-BSNlGq_b.js";import"./useControlledState-B7K2eYzO.js";import"./filterDOMProps-CeZl_uWj.js";import"./usePress-DMpbNI7r.js";import"./FocusScope-BPYREqet.js";import"./Hidden-DMUPAT4b.js";import"./getScrollParent-CcmJp979.js";import"./useLabels-DMhdkBu1.js";import"./VisuallyHidden-D3JK2BHS.js";import"./context-BggLOsA2.js";import"./useSelector-D2GE8II6.js";import"./Action-BcnqqLhy.js";import"./Text-CvyZKomL.js";import"./EmulatedBoldText-Dmze-Iwg.js";import"./Wrap-DQq6jo70.js";import"./Text--Nm9EVqj.js";import"./dynamic-DKDa4OpU.js";import"./IconApp-FFcOAhSU.js";import"./IconWarning-DVQwOeH0.js";import"./deepFindOfType-BylCc5Xi.js";import"./react-children-utilities-CdZndyK3.js";import"./Collection-BSVICx61.js";import"./CollectionBuilder-C1pJ_vaJ.js";import"./Header-HCQ-zEiT.js";import"./Separator-D6MrK9aZ.js";import"./useMenuTrigger-PGrphHQy.js";import"./SelectionManager-BxzAQFhr.js";import"./useEvent-Be9f7BQw.js";import"./useCollator-BmGy_8lF.js";import"./LoadingSpinner-8uPh6FlH.js";import"./Button-DHNhLPwP.js";import"./Separator-BtMXM6MZ.js";import"./Heading-CIz8VwIe.js";import"./Heading-Lmh25Bta.js";import"./Section-BQn1ow6U.js";import"./Activity-CPnWONG0.js";const Et={...M,title:"Actions/ContextMenu/Edge Cases"},e={render:m=>t.createElement(g,null,t.createElement(x,null,"Trigger"),t.createElement(d,{...m},t.createElement(o,null,i.medium),t.createElement(o,null,i.medium)))},r={render:m=>t.createElement(g,null,t.createElement(x,null,"Trigger"),t.createElement(d,{...m},Array(20).fill("").map((T,n)=>t.createElement(o,{key:n},"Item ",n+1))))};var p,a,u;e.parameters={...e.parameters,docs:{...(p=e.parameters)==null?void 0:p.docs,source:{originalSource:`{
  render: props => <ContextMenuTrigger>
      <Button>Trigger</Button>
      <ContextMenu {...props}>
        <MenuItem>{dummyText.medium}</MenuItem>
        <MenuItem>{dummyText.medium}</MenuItem>
      </ContextMenu>
    </ContextMenuTrigger>
}`,...(u=(a=e.parameters)==null?void 0:a.docs)==null?void 0:u.source}}};var s,l,c;r.parameters={...r.parameters,docs:{...(s=r.parameters)==null?void 0:s.docs,source:{originalSource:`{
  render: props => <ContextMenuTrigger>
      <Button>Trigger</Button>
      <ContextMenu {...props}>
        {Array(20).fill("").map((value, index) => <MenuItem key={index}>Item {index + 1}</MenuItem>)}
      </ContextMenu>
    </ContextMenuTrigger>
}`,...(c=(l=r.parameters)==null?void 0:l.docs)==null?void 0:c.source}}};const It=["LongTexts","LongList"];export{r as LongList,e as LongTexts,It as __namedExportsOrder,Et as default};
